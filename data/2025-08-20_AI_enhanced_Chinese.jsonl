{"id": "2508.13396", "categories": ["cs.SE", "68P20 (Primary), 68M14 (Secondary)"], "pdf": "https://arxiv.org/pdf/2508.13396", "abs": "https://arxiv.org/abs/2508.13396", "authors": ["Dinesh Eswararaj", "Ajay Babu Nellipudi", "Vandana Kollati"], "title": "A Comparative Study of Delta Parquet, Iceberg, and Hudi for Automotive Data Engineering Use Cases", "comment": "Published in SSRG International Journal of Computer Science and\n  Engineering (IJCSE), July 2025. This is the authors accepted manuscript. The\n  final published version is available", "summary": "The automotive industry generates vast amounts of data from sensors,\ntelemetry, diagnostics, and real-time operations. Efficient data engineering is\ncritical to handle challenges of latency, scalability, and consistency. Modern\ndata lakehouse formats Delta Parquet, Apache Iceberg, and Apache Hudi offer\nfeatures such as ACID transactions, schema enforcement, and real-time\ningestion, combining the strengths of data lakes and warehouses to support\ncomplex use cases. This study presents a comparative analysis of Delta Parquet,\nIceberg, and Hudi using real-world time-series automotive telemetry data with\nfields such as vehicle ID, timestamp, location, and event metrics. The\nevaluation considers modeling strategies, partitioning, CDC support, query\nperformance, scalability, data consistency, and ecosystem maturity. Key\nfindings show Delta Parquet provides strong ML readiness and governance,\nIceberg delivers high performance for batch analytics and cloud-native\nworkloads, while Hudi is optimized for real-time ingestion and incremental\nprocessing. Each format exhibits tradeoffs in query efficiency, time-travel,\nand update semantics. The study offers insights for selecting or combining\nformats to support fleet management, predictive maintenance, and route\noptimization. Using structured datasets and realistic queries, the results\nprovide practical guidance for scaling data pipelines and integrating machine\nlearning models in automotive applications.", "AI": {"tldr": "\u8fd9\u7bc7\u8bba\u6587\u5bf9\u6c7d\u8f66\u884c\u4e1a\u7684\u4e09\u79cd\u4e3b\u6d41\u6570\u636e\u6e56\u4ed3\u683c\u5f0f(Delta Parquet\u3001Apache Iceberg\u3001Apache Hudi)\u8fdb\u884c\u4e86\u5b9e\u9645\u6027\u80fd\u6bd4\u8f83\u5206\u6790\uff0c\u4e3a\u6c7d\u8f66\u6570\u636e\u7ba1\u7406\u63d0\u4f9b\u4e86\u9009\u578b\u6307\u5357", "motivation": "\u6c7d\u8f66\u884c\u4e1a\u4ea7\u751f\u5927\u91cf\u4f20\u611f\u5668\u6570\u636e\uff0c\u9700\u8981\u9ad8\u6548\u6570\u636e\u5de5\u7a0b\u5904\u7406\u89e3\u51b3\u5ef6\u8fdf\u3001\u53ef\u6269\u5c55\u6027\u548c\u4e00\u81f4\u6027\u6311\u6218", "method": "\u4f7f\u7528\u771f\u5b9e\u4e16\u754c\u65f6\u95f4\u5e8f\u5217\u6c7d\u8f66\u8fdc\u7a0b\u6d4b\u91cf\u6570\u636e\uff0c\u8bc4\u4f30\u6a21\u578b\u7b56\u7565\u3001\u5206\u533a\u3001CDC\u652f\u6301\u3001\u67e5\u8be2\u6027\u80fd\u3001\u53ef\u6269\u5c55\u6027\u7b49\u6307\u6807", "result": "Delta Parquet\u5728ML\u51c6\u5907\u548c\u6570\u636e\u7ba1\u7406\u65b9\u9762\u663e\u8457\uff0cIceberg\u5728\u6279\u5904\u7406\u5206\u6790\u548c\u4e91\u539f\u751f\u5de5\u4f5c\u8d1f\u8f7d\u4e0a\u8868\u73b0\u4f18\u5f02\uff0cHudi\u4f18\u5316\u4e86\u5b9e\u65f6\u6570\u636e\u5438\u6536\u548c\u589e\u91cf\u5904\u7406", "conclusion": "\u4e0d\u540c\u6570\u636e\u6e56\u4ed3\u683c\u5f0f\u5404\u6709\u4f18\u52bf\uff0c\u9700\u6839\u636e\u5177\u4f53\u5e94\u7528\u573a\u666f\u9009\u62e9\u6216\u7ec4\u5408\u4f7f\u7528\uff0c\u4ee5\u652f\u6301\u8f66\u961f\u7ba1\u7406\u3001\u9884\u6d4b\u6027\u7ef4\u62a4\u7b49\u6c7d\u8f66\u5e94\u7528"}}
{"id": "2508.13666", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.13666", "abs": "https://arxiv.org/abs/2508.13666", "authors": ["Dangfeng Pan", "Zhensu Sun", "Cenyuan Zhang", "David Lo", "Xiaoning Du"], "title": "The Hidden Cost of Readability: How Code Formatting Silently Consumes Your LLM Budget", "comment": "Accepted by ICSE'26 (First Cycle)", "summary": "Source code is usually formatted with elements like indentation and newlines\nto improve readability for human developers. However, these visual aids do not\nseem to be beneficial for large language models (LLMs) in the same way since\nthe code is processed as a linear sequence of tokens. Furthermore, these\nadditional tokens can lead to increased computational costs and longer response\ntimes for LLMs. If such formatting elements are non-essential to LLMs, we can\nreduce such costs by removing them from the code. To figure out the role played\nby formatting elements, we conduct a comprehensive empirical study to evaluate\nthe impact of code formatting on LLM performance and efficiency. Through\nlarge-scale experiments on Fill-in-the-Middle Code Completion tasks across four\nprogramming languages (Java, Python, C++, C\\#) and ten LLMs-including both\ncommercial and open-source models-we systematically analyze token count and\nperformance when formatting elements are removed. Key findings indicate that\nLLMs can maintain performance across formatted code and unformatted code,\nachieving an average input token reduction of 24.5\\% with negligible output\ntoken reductions. This makes code format removal a practical optimization\nstrategy for improving LLM efficiency. Further exploration reveals that both\nprompting and fine-tuning LLMs can lead to significant reductions (up to\n36.1\\%) in output code length without compromising correctness. To facilitate\npractical applications, we develop a bidirectional code transformation tool for\nformat processing, which can be seamlessly integrated into existing LLM\ninference workflows, ensuring both human readability and LLM efficiency.", "AI": {"tldr": "\u4ee3\u7801\u683c\u5f0f\u5316\u5143\u7d20\u5982\u7f29\u8fdb\u548c\u6362\u884c\u5bf9LLMs\u5e76\u65e0\u5b9e\u8d28\u5e2e\u52a9\uff0c\u53bb\u9664\u540e\u53ef\u51cf\u5c1124.5%\u8f93\u5165token\u800c\u4fdd\u6301\u6027\u80fd\uff0c\u662f\u4e00\u79cd\u6709\u6548\u7684LLM\u4f18\u5316\u7b56\u7565", "motivation": "\u4ee3\u7801\u683c\u5f0f\u5316\u5143\u7d20\u4e3b\u8981\u670d\u52a1\u4e8e\u4eba\u7c7b\u53ef\u8bfb\u6027\uff0c\u4f46\u5bf9LLMs\u5904\u7406\u4ee3\u7801\u4f5c\u4e3a\u7ebf\u6027token\u5e8f\u5217\u65f6\u53ef\u80fd\u4f1a\u589e\u52a0\u8ba1\u7b97\u6210\u672c\u548c\u54cd\u5e94\u65f6\u95f4\uff0c\u9700\u8981\u7814\u7a76\u8fd9\u4e9b\u683c\u5f0f\u5143\u7d20\u7684\u5b9e\u9645\u4f5c\u7528", "method": "\u901a\u8fc7\u5728\u56db\u79cd\u7f16\u7a0b\u8bed\u8a00(Java\u3001Python\u3001C++\u3001C#)\u548c\u5341\u4e2aLLMs\u4e0a\u8fdb\u884c\u5927\u89c4\u6a21\u7684Fill-in-the-Middle\u4ee3\u7801\u5b8c\u6210\u4efb\u52a1\u5b9e\u9a8c\uff0c\u7cfb\u7edf\u5206\u6790\u683c\u5f0f\u5316\u5143\u7d20\u79fb\u9664\u540e\u7684token\u6570\u91cf\u548c\u6027\u80fd\u53d8\u5316", "result": "LLMs\u5728\u683c\u5f0f\u5316\u4ee3\u7801\u548c\u975e\u683c\u5f0f\u5316\u4ee3\u7801\u4e0a\u90fd\u80fd\u4fdd\u6301\u76f8\u4f3c\u6027\u80fd\uff0c\u5e73\u5747\u51cf\u5c1124.5%\u8f93\u5165token\u800c\u8f93\u51fatoken\u51cf\u5c11\u53ef\u5ffd\u7565\uff1b\u901a\u8fc7\u63d0\u793a\u548c\u5fae\u8c03\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u51cf\u5c1136.1%\u7684\u8f93\u51fa\u4ee3\u7801\u957f\u5ea6", "conclusion": "\u4ee3\u7801\u683c\u5f0f\u79fb\u9664\u662f\u4e00\u79cd\u5b9e\u7528\u7684LLM\u6548\u7387\u4f18\u5316\u7b56\u7565\uff0c\u7814\u7a76\u8fd8\u53d1\u5c55\u4e86\u53cc\u5411\u4ee3\u7801\u8f6c\u6362\u5de5\u5177\uff0c\u80fd\u591f\u65e0\u7f1d\u96c6\u6210\u5230\u73b0\u6709LLM\u63a8\u7406\u6d41\u7a0b\u4e2d\uff0c\u540c\u65f6\u4fdd\u8bc1\u4eba\u7c7b\u53ef\u8bfb\u6027\u548cLLM\u6548\u7387"}}
{"id": "2508.13757", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.13757", "abs": "https://arxiv.org/abs/2508.13757", "authors": ["James Meaden", "Micha\u0142 Jarosz", "Piotr Jod\u0142owski", "Grigori Melnik"], "title": "COMPASS: A Multi-Dimensional Benchmark for Evaluating Code Generation in Large Language Models", "comment": null, "summary": "Current code generation benchmarks focus primarily on functional correctness\nwhile overlooking two critical aspects of real-world programming: algorithmic\nefficiency and code quality. We introduce COMPASS (COdility's Multi-dimensional\nProgramming ASSessment), a comprehensive evaluation framework that assesses\ncode generation across three dimensions: correctness, efficiency, and quality.\nCOMPASS consists of 50 competitive programming problems from real Codility\ncompetitions, providing authentic human baselines from 393,150 submissions.\nUnlike existing benchmarks that treat algorithmically inefficient solutions\nidentically to optimal ones provided they pass test cases, COMPASS\nsystematically evaluates runtime efficiency and code quality using\nindustry-standard analysis tools. Our evaluation of three leading\nreasoning-enhanced models, Anthropic Claude Opus 4, Google Gemini 2.5 Pro, and\nOpenAI O4-Mini-High, reveals that models achieving high correctness scores do\nnot necessarily produce efficient algorithms or maintainable code. These\nfindings highlight the importance of evaluating more than just correctness to\ntruly understand the real-world capabilities of code generation models. COMPASS\nserves as a guiding framework, charting a path for future research toward AI\nsystems that are robust, reliable, and ready for production use.", "AI": {"tldr": "COMPASS\u662f\u4e00\u4e2a\u591a\u7ef4\u4ee3\u7801\u751f\u6210\u8bc4\u4f30\u6846\u67b6\uff0c\u4e0d\u4ec5\u8bc4\u4f30\u529f\u80fd\u6b63\u786e\u6027\uff0c\u8fd8\u8bc4\u4f30\u7b97\u6cd5\u6548\u7387\u548c\u4ee3\u7801\u8d28\u91cf\uff0c\u53d1\u73b0\u5f53\u524d\u6a21\u578b\u5728\u6b63\u786e\u6027\u5f97\u5206\u9ad8\u65f6\u4e0d\u4e00\u5b9a\u80fd\u4ea7\u751f\u9ad8\u6548\u7b97\u6cd5\u6216\u53ef\u7ef4\u62a4\u4ee3\u7801\u3002", "motivation": "\u73b0\u6709\u4ee3\u7801\u751f\u6210\u57fa\u51c6\u4e3b\u8981\u5173\u6ce8\u529f\u80fd\u6b63\u786e\u6027\uff0c\u5ffd\u7565\u4e86\u771f\u5b9e\u7f16\u7a0b\u4e2d\u7b97\u6cd5\u6548\u7387\u548c\u4ee3\u7801\u8d28\u91cf\u8fd9\u4e24\u4e2a\u5173\u952e\u65b9\u9762\uff0c\u9700\u8981\u66f4\u5168\u9762\u7684\u8bc4\u4f30\u6846\u67b6\u3002", "method": "\u4f7f\u752850\u4e2a\u6765\u81ea\u771f\u5b9eCodility\u7ade\u8d5b\u7684\u7f16\u7a0b\u95ee\u9898\uff0c\u6536\u96c6393,150\u4efd\u4eba\u5de5\u63d0\u4ea4\u4f5c\u4e3a\u57fa\u7ebf\uff0c\u4f7f\u7528\u884c\u4e1a\u6807\u51c6\u5206\u6790\u5de5\u5177\u7cfb\u7edf\u8bc4\u4f30\u8fd0\u884c\u65f6\u6548\u7387\u548c\u4ee3\u7801\u8d28\u91cf\u3002", "result": "\u5bf9\u4e09\u4e2a\u9886\u5148\u63a8\u7406\u589e\u5f3a\u6a21\u578b\uff08Claude Opus 4\u3001Gemini 2.5 Pro\u3001O4-Mini-High\uff09\u7684\u8bc4\u4f30\u663e\u793a\uff0c\u9ad8\u6b63\u786e\u6027\u5f97\u5206\u7684\u6a21\u578b\u4e0d\u4e00\u5b9a\u80fd\u4ea7\u751f\u9ad8\u6548\u7b97\u6cd5\u6216\u53ef\u7ef4\u62a4\u4ee3\u7801\u3002", "conclusion": "\u4ec5\u8bc4\u4f30\u6b63\u786e\u6027\u4e0d\u8db3\u4ee5\u771f\u6b63\u7406\u89e3\u4ee3\u7801\u751f\u6210\u6a21\u578b\u7684\u771f\u5b9e\u80fd\u529b\uff0c\u9700\u8981\u591a\u7ef4\u8bc4\u4f30\u6765\u63a8\u52a8AI\u7cfb\u7edf\u5411\u5065\u58ee\u3001\u53ef\u9760\u3001\u751f\u4ea7\u5c31\u7eea\u7684\u65b9\u5411\u53d1\u5c55\u3002"}}
{"id": "2508.13774", "categories": ["cs.SE", "cs.AI", "J.5; I.2"], "pdf": "https://arxiv.org/pdf/2508.13774", "abs": "https://arxiv.org/abs/2508.13774", "authors": ["Peer Trilcke", "Ingo B\u00f6rner", "Henny Sluyter-G\u00e4thje", "Daniil Skorinkin", "Frank Fischer", "Carsten Milling"], "title": "Agentic DraCor and the Art of Docstring Engineering: Evaluating MCP-empowered LLM Usage of the DraCor API", "comment": "Preprint, submitted to the 2nd Workshop on Computational Drama\n  Analysis at DraCor Summit 2025, September 03, 2025, Berlin, Germany", "summary": "This paper reports on the implementation and evaluation of a Model Context\nProtocol (MCP) server for DraCor, enabling Large Language Models (LLM) to\nautonomously interact with the DraCor API. We conducted experiments focusing on\ntool selection and application by the LLM, employing a qualitative approach\nthat includes systematic observation of prompts to understand how LLMs behave\nwhen using MCP tools, evaluating \"Tool Correctness\", \"Tool-Calling Efficiency\",\nand \"Tool-Use Reliability\". Our findings highlight the importance of \"Docstring\nEngineering\", defined as reflexively crafting tool documentation to optimize\nLLM-tool interaction. Our experiments demonstrate both the promise of agentic\nAI for research in Computational Literary Studies and the essential\ninfrastructure development needs for reliable Digital Humanities\ninfrastructures.", "AI": {"tldr": "\u901a\u8fc7\u5b9e\u73b0\u548c\u8bc4\u4f30\u4e00\u4e2a\u4e3aDraCor\u7684MCP\u670d\u52a1\u5668\uff0c\u8ba9LLM\u80fd\u591f\u81ea\u4e3b\u4e0eDraCor API\u4ea4\u4e92\uff0c\u5e76\u901a\u8fc7\u5b9a\u6027\u5b9e\u9a8c\u5206\u6790\u4e86LLM\u5728\u4f7f\u7528MCP\u5de5\u5177\u65f6\u7684\u884c\u4e3a\u7279\u5f81\u548c\u6027\u80fd\u6307\u6807\u3002", "motivation": "\u63a2\u7d22\u4ee5\u4ee3\u7406\u4e3a\u4e2d\u5fc3\u7684AI\u5728\u8ba1\u7b97\u6587\u5b66\u7814\u7a76\u4e2d\u7684\u5e94\u7528\u6f5c\u529b\uff0c\u4ee5\u53ca\u4e3a\u53ef\u9760\u7684\u6570\u5b57\u4eba\u6587\u79d1\u5b66\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u5fc5\u8981\u7684\u6280\u672f\u652f\u6491\u3002", "method": "\u5b9e\u73b0DraCor\u7684MCP\u670d\u52a1\u5668\uff0c\u8fdb\u884c\u5b9e\u9a8c\u91cd\u70b9\u5173\u6ce8\u5de5\u5177\u9009\u62e9\u548c\u5e94\u7528\uff0c\u91c7\u7528\u5b9a\u6027\u65b9\u6cd5\u5305\u62ec\u7cfb\u7edf\u89c2\u5bdfprompt\u884c\u4e3a\uff0c\u8bc4\u4f30\u5de5\u5177\u6b63\u786e\u6027\u3001\u5de5\u5177\u8c03\u7528\u6548\u7387\u548c\u5de5\u5177\u4f7f\u7528\u53ef\u9760\u6027\u3002", "result": "\u53d1\u73b0\u6587\u6863\u5de5\u7a0b\uff08Docstring Engineering\uff09\u5bf9\u4f18\u5316LLM-\u5de5\u5177\u4ea4\u4e92\u81f3\u5173\u91cd\u8981\uff0c\u5b9e\u9a8c\u8bc1\u660e\u4ee5\u4ee3\u7406\u4e3a\u4e2d\u5fc3\u7684AI\u5728\u8ba1\u7b97\u6587\u5b66\u7814\u7a76\u4e2d\u5177\u6709\u5e94\u7528\u524d\u666f\u3002", "conclusion": "\u4ee5\u4ee3\u7406\u4e3a\u4e2d\u5fc3\u7684AI\u4e3a\u8ba1\u7b97\u6587\u5b66\u7814\u7a76\u5e26\u6765\u4e86\u5e0c\u671b\uff0c\u540c\u65f6\u5f3a\u8c03\u4e86\u4e3a\u53ef\u9760\u6570\u5b57\u4eba\u6587\u57fa\u7840\u8bbe\u65bd\u8fdb\u884c\u57fa\u7840\u8bbe\u65bd\u5f00\u53d1\u7684\u5fc5\u8981\u6027\u3002"}}
{"id": "2508.13610", "categories": ["cs.PL", "cs.HC", "cs.SE"], "pdf": "https://arxiv.org/pdf/2508.13610", "abs": "https://arxiv.org/abs/2508.13610", "authors": ["Basile Pesin", "Celia Picard", "Cyril Allignol"], "title": "Reactive Semantics for User Interface Description Languages", "comment": "In Proceedings ICE 2025, arXiv:2508.12308", "summary": "User Interface Description Languages (UIDLs) are high-level languages that\nfacilitate the development of Human-Machine Interfaces, such as Graphical User\nInterface (GUI) applications. They usually provide first-class primitives to\nspecify how the program reacts to an external event (user input, network\nmessage), and how data flows through the program. Although these\ndomain-specific languages are now widely used to implement safety-critical\nGUIs, little work has been invested in their formalization and verification.\n  In this paper, we propose a denotational semantic model for a core reactive\nUIDL, Smalite, which we argue is expressive enough to encode constructs from\nmore realistic languages. This preliminary work may be used as a stepping stone\nto produce a formally verified compiler for UIDLs.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7528\u4e8e\u6838\u5fc3\u53cd\u5e94\u5f0f\u7528\u6237\u754c\u9762\u63cf\u8ff0\u8bed\u8a00Smalite\u7684\u8bb0\u53f7\u8bed\u4e49\u6a21\u578b\uff0c\u4ee5\u652f\u6301\u5f62\u5f0f\u5316\u9a8c\u8bc1\u548c\u7f16\u8bd1\u5668\u9a8c\u8bc1", "motivation": "\u867d\u7136\u7528\u6237\u754c\u9762\u63cf\u8ff0\u8bed\u8a00(UIDL)\u5df2\u5e7f\u6cdb\u7528\u4e8e\u5b89\u5168\u5173\u952eGUI\u5f00\u53d1\uff0c\u4f46\u5c11\u6709\u5de5\u4f5c\u6ce8\u91cd\u5176\u5f62\u5f0f\u5316\u548c\u9a8c\u8bc1", "method": "\u4e3a\u6838\u5fc3\u53cd\u5e94\u5f0fUIDL\u8bed\u8a00Smalite\u5efa\u7acb\u8bb0\u53f7\u8bed\u4e49\u6a21\u578b\uff0c\u8be5\u8bed\u8a00\u8db3\u591f\u8868\u8fbe\u66f4\u5b9e\u9645\u8bed\u8a00\u7684\u6784\u9020", "result": "\u63d0\u51fa\u7684\u8bed\u4e49\u6a21\u578b\u4e3a\u5f62\u5f0f\u9a8c\u8bc1\u63d0\u4f9b\u4e86\u57fa\u7840", "conclusion": "\u8fd9\u9879\u9884\u7814\u7a76\u5de5\u4f5c\u53ef\u4f5c\u4e3a\u5f00\u53d1\u5f62\u5f0f\u9a8c\u8bc1\u7684UIDL\u7f16\u8bd1\u5668\u7684\u57fa\u7840"}}
{"id": "2508.13195", "categories": ["cs.LO", "math.LO", "03F30 68Q15", "F.4.1"], "pdf": "https://arxiv.org/pdf/2508.13195", "abs": "https://arxiv.org/abs/2508.13195", "authors": ["Chris Pollett"], "title": "Arithmetics within the Linear Time Hierarchy", "comment": null, "summary": "We identify fragments of the arithmetic $S_1$ that enjoy nice closure\nproperties and have exact characterization of their definable multifunctions.\nTo do this, in the language of $S_1$, $L_1$, starting from the formula classes,\n$\\Sigma^{\\mathsf b}_{i}$, which ignore sharply bounded quantifiers when\ndetermining quantifier alternations, we define new syntactic classes by\ncounting bounded existential sharply bounded universal quantifiers blocks.\nUsing these, we define arithmetics: $\\breve{S}^{i}_{1}$, $TLS^i_1$ and\n$TSC^i_1$. $\\breve{S}^{i}_{1}$ consists of open axioms for the language symbols\nand length induction for one of our new classes, $SIUT_{i,1}^{\\{p(|id|)\\}}$.\n$TLS^i_1$ and $TSC^i_1$ are defined using axioms related to dependent choice\nsequences for formulas from two other classes within $\\Sigma^{\\mathsf b}_{i}$.\nWe prove for $i \\geq 1$ that $$TLS^i_1 \\subseteq TSC^i_1 \\subseteq\n\\breve{S}^{i}_{1} \\preceq_{\\forall B(SITT_{i+1}^{\\{p(|id|)\\}})} TLS^{i+1}_1$$\nand that the $SITT_{i}^{\\{p(|id|)\\}}$-definable in $TLS^i_1$ (resp.\n$SITT_{i}^{\\{2^{p(||id||)}\\}}$-definable in $TSC^i_1$) multifunctions are\n$L_1$-$FLOGSPACE^{SIT_{i,1}}[wit]$ (resp. $L_1$-$FSC^{SIT_{i,1}}[wit]$). These\nmultifunction classes are respectively the logspace or $SC$ (poly-time,\npolylog-space) computable multifunctions whose output is bound by a term in\n$L_1$ and that have access to a witness oracle for another restriction on the\n$\\Sigma^{\\mathsf b}_{i}$ formulas, $SIT_{i,1}$. For the $i=1$ cases, this\nsimplifies respectively to the functions in logspace and $SC$, Steve's Class,\npoly-time, polylog-space. We prove independence results related to the\nMatiyasevich Robinson Davis Putnam Theorem (MRDP) and to whether our theories\nprove simultaneous nondeterministic polynomial time, sublinear space is equal\nto co-nondeterministic polynomial time, sublinear space.", "AI": {"tldr": "\u8be5\u8bba\u6587\u7814\u7a76\u4e86\u7b97\u672f\u7406\u8bbaS\u2081\u7684\u7247\u6bb5\uff0c\u5b9a\u4e49\u4e86\u65b0\u7684\u8bed\u6cd5\u7c7b\u548c\u7b97\u672f\u7406\u8bba(\u015c\u2081\u2071, TLS\u2081\u2071, TSC\u2081\u2071)\uff0c\u8bc1\u660e\u4e86\u5b83\u4eec\u4e4b\u95f4\u7684\u5305\u542b\u5173\u7cfb\u548c\u53ef\u5b9a\u4e49\u591a\u51fd\u6570\u7279\u5f81\uff0c\u5e76\u83b7\u5f97\u4e86\u4e0eMRDP\u5b9a\u7406\u76f8\u5173\u7684\u72ec\u7acb\u6027\u7ed3\u679c\u3002", "motivation": "\u7814\u7a76S\u2081\u7b97\u672f\u7406\u8bba\u7684\u7247\u6bb5\uff0c\u63a2\u7d22\u5177\u6709\u826f\u597d\u95ed\u5305\u6027\u8d28\u7684\u53ef\u5b9a\u4e49\u591a\u51fd\u6570\u7279\u5f81\uff0c\u5efa\u7acb\u4e0d\u540c\u590d\u6742\u5ea6\u7c7b\u4e0e\u903b\u8f91\u7406\u8bba\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\u3002", "method": "\u5728S\u2081\u8bed\u8a00\u4e2d\uff0c\u4ece\u5ffd\u7565\u5c16\u9510\u6709\u754c\u91cf\u8bcd\u7684\u03a3\u1d47\u1d62\u516c\u5f0f\u7c7b\u51fa\u53d1\uff0c\u901a\u8fc7\u8ba1\u6570\u6709\u754c\u5b58\u5728\u5c16\u9510\u6709\u754c\u5168\u79f0\u91cf\u8bcd\u5757\u6765\u5b9a\u4e49\u65b0\u7684\u8bed\u6cd5\u7c7b\uff0c\u8fdb\u800c\u6784\u5efa\u65b0\u7684\u7b97\u672f\u7406\u8bba\u5e76\u8bc1\u660e\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002", "result": "\u8bc1\u660e\u4e86TLS\u2081\u2071 \u2286 TSC\u2081\u2071 \u2286 \u015c\u2081\u2071 \u227c TLS\u2081\u2071\u207a\u00b9\uff0c\u5e76\u7cbe\u786e\u523b\u753b\u4e86\u5728\u8fd9\u4e9b\u7406\u8bba\u4e2d\u53ef\u5b9a\u4e49\u7684\u591a\u51fd\u6570\u7c7b\u5bf9\u5e94\u4e8e\u5177\u6709\u7279\u5b9a\u89c1\u8bc1\u9884\u8a00\u673a\u7684\u5bf9\u6570\u7a7a\u95f4\u6216SC\u53ef\u8ba1\u7b97\u51fd\u6570\u3002", "conclusion": "\u6210\u529f\u5efa\u7acb\u4e86\u7b97\u672f\u7406\u8bba\u4e0e\u8ba1\u7b97\u590d\u6742\u5ea6\u7c7b\u4e4b\u95f4\u7684\u7cbe\u786e\u5bf9\u5e94\u5173\u7cfb\uff0c\u4e3a\u7406\u89e3\u4e0d\u540c\u590d\u6742\u5ea6\u7c7b\u5728\u903b\u8f91\u7406\u8bba\u4e2d\u7684\u53ef\u5b9a\u4e49\u6027\u63d0\u4f9b\u4e86\u65b0\u7684\u7406\u8bba\u6846\u67b6\uff0c\u5e76\u83b7\u5f97\u4e86\u91cd\u8981\u7684\u72ec\u7acb\u6027\u7ed3\u679c\u3002"}}
{"id": "2508.13819", "categories": ["cs.SE", "K.6.3; E.0"], "pdf": "https://arxiv.org/pdf/2508.13819", "abs": "https://arxiv.org/abs/2508.13819", "authors": ["Daniel Ogenrwot", "John Businge", "Shaikh Arifuzzaman"], "title": "Structural and Connectivity Patterns in the Maven Central Software Dependency Network", "comment": "17 pages, 6 figures, 34th International Conference on Software\n  Engineering and Data Engineering", "summary": "Understanding the structural characteristics and connectivity patterns of\nlarge-scale software ecosystems is critical for enhancing software reuse,\nimproving ecosystem resilience, and mitigating security risks. In this paper,\nwe investigate the Maven Central ecosystem, one of the largest repositories of\nJava libraries, by applying network science techniques to its dependency graph.\nLeveraging the Goblin framework, we extracted a sample consisting of the top\n5,000 highly connected artifacts based on their degree centrality and then\nperformed breadth-first search (BFS) expansion from each selected artifact as a\nseed node, traversing the graph outward to capture all libraries and releases\nreachable those seed nodes. This sampling strategy captured the immediate\nstructural context surrounding these libraries resulted in a curated graph\ncomprising of 1.3 million nodes and 20.9 million edges. We conducted a\ncomprehensive analysis of this graph, computing degree distributions,\nbetweenness centrality, PageRank centrality, and connected components\ngraph-theoretic metrics. Our results reveal that Maven Central exhibits a\nhighly interconnected, scale-free, and small-world topology, characterized by a\nsmall number of infrastructural hubs that support the majority of projects.\nFurther analysis using PageRank and betweenness centrality shows that these\nhubs predominantly consist of core ecosystem infrastructure, including testing\nframeworks and general-purpose utility libraries. While these hubs facilitate\nefficient software reuse and integration, they also pose systemic risks;\nfailures or vulnerabilities affecting these critical nodes can have widespread\nand cascading impacts throughout the ecosystem.", "AI": {"tldr": "\u901a\u8fc7\u7f51\u7edc\u79d1\u5b66\u6280\u672f\u5206\u6790Maven Central\u4f9d\u8d56\u56fe\uff0c\u53d1\u73b0\u5176\u5177\u6709\u5c3a\u5ea6\u81ea\u7531\u7684\u5c0f\u4e16\u754c\u62e8\u626c\u7279\u5f81\uff0c\u7531\u5c11\u6570\u6838\u5fc3\u5e93\u652f\u6491\u6574\u4e2a\u751f\u6001\u7cfb\u7edf\uff0c\u540c\u65f6\u5e26\u6765\u7cfb\u7edf\u6027\u98ce\u9669\u3002", "motivation": "\u7406\u89e3\u5927\u89c4\u6a21\u8f6f\u4ef6\u751f\u6001\u7cfb\u7edf\u7684\u7ed3\u6784\u7279\u5f81\u548c\u8fde\u63a5\u6a21\u5f0f\uff0c\u4ee5\u63d0\u9ad8\u8f6f\u4ef6\u91cd\u7528\u6027\u3001\u589e\u5f3a\u751f\u6001\u7cfb\u7edf\u5f39\u6027\u548c\u51cf\u5c11\u5b89\u5168\u98ce\u9669\u3002", "method": "\u4f7f\u7528Goblin\u6846\u67b6\u63d0\u53d6Maven Central\u4e2d\u57fa\u4e8e\u5ea6\u4e2d\u5fc3\u6027\u7684\u524d5000\u4e2a\u9ad8\u8fde\u63a5\u5e93\uff0c\u901a\u8fc7\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u6269\u5c55\u83b7\u5f97130\u4e07\u4e2a\u8282\u70b9\u548c2090\u4e07\u6761\u8fb9\u7684\u4f9d\u8d56\u56fe\uff0c\u8ba1\u7b97\u5ea6\u5206\u5e03\u3001\u4e2d\u95f4\u4e2d\u5fc3\u6027\u3001PageRank\u4e2d\u5fc3\u6027\u7b49\u56fe\u8bba\u6307\u6807\u3002", "result": "\u53d1\u73b0Maven Central\u5448\u73b0\u9ad8\u5ea6\u4e92\u8054\u7684\u5c3a\u5ea6\u81ea\u7531\u5c0f\u4e16\u754c\u62e8\u626c\uff0c\u7531\u5c11\u6570\u57fa\u7840\u8bbe\u65bd\u4e2d\u5fc3\u8282\u70b9\u652f\u6491\u5927\u90e8\u5206\u9879\u76ee\uff0c\u8fd9\u4e9b\u6838\u5fc3\u8282\u70b9\u4e3b\u8981\u662f\u6d4b\u8bd5\u6846\u67b6\u548c\u901a\u7528\u5e93\u3002", "conclusion": "\u6838\u5fc3\u4e2d\u5fc3\u8282\u70b9\u867d\u7136\u63d0\u9ad8\u4e86\u8f6f\u4ef6\u91cd\u7528\u6548\u7387\uff0c\u4f46\u4e5f\u5e26\u6765\u7cfb\u7edf\u6027\u98ce\u9669\uff0c\u5173\u952e\u8282\u70b9\u7684\u6545\u969c\u6216\u6f0f\u6d1e\u53ef\u80fd\u5bfc\u81f4\u5168\u5c40\u6027\u7684\u6f5c\u5728\u5f71\u54cd\u3002"}}
{"id": "2508.13611", "categories": ["cs.PL", "cs.LO", "D.3.1; F.3.2"], "pdf": "https://arxiv.org/pdf/2508.13611", "abs": "https://arxiv.org/abs/2508.13611", "authors": ["Clemens Grabmayer", "Maurizio Murgia"], "title": "Bisimilarity and Simulatability of Processes Parameterized by Join Interactions", "comment": "In Proceedings ICE 2025, arXiv:2508.12308", "summary": "Departing from Larsen's concept of parameterized bisimilarity of processes\nwith respect to interaction with environments, we start an exploration of its\nnatural weakening: bisimilarity of unrestricted join interactions with\nenvironments. Parameterized bisimilarity relates processes p and q with respect\nto an environment e if p and q behave bi-similarly while joining --\nrespectively the same -- transitions from e. The weakened variant relates\nprocesses p and q with respect to environment e if the join-interaction\nprocesses p & e and q & e of p and q with e are bisimilar. (Hereby join\ninteractions r & f facilitate a step with label a to r' & f' if and only if r\nand f permit a-steps to r' and f' , respectively.) Join-interaction\nparameterized (ji-parameterized) bisimilarity coincides with parameterized\nbisimilarity for deterministic environments, but that it is a coarser\nequivalence in general. We explain how Larsen's concept can be recovered from\nji-parameterized bisimilarity by 'determinizing' interactions. We show that by\nadaptation to simulatability (simulation preorder) the same concept arises:\nparameterized simulatability coincides with ji-parameterized simulatability.\nFor the discrimination preorder of (ji-)parameterized simulatability on\nenvironments we obtain the same result as Larsen did for parameterized\nbisimilarity. Also, we give a modal-logic characterization of\n(ji-)parameterized simulatability. Finally we gather open problems, and provide\nan outlook on our current related work.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86ji-parameterized bisimilarity\u4f5c\u4e3aLarsen\u53c2\u6570\u5316\u4e92\u6a21\u62df\u7684\u81ea\u7136\u5f31\u5316\u7248\u672c\uff0c\u901a\u8fc7\u8fde\u63a5\u4ea4\u4e92\u8fc7\u7a0b\u6765\u6bd4\u8f83\u8fdb\u7a0b\u5728\u73af\u5883\u4e2d\u7684\u884c\u4e3a\u7b49\u4ef7\u6027", "motivation": "\u4eceLarsen\u7684\u53c2\u6570\u5316\u4e92\u6a21\u62df\u6982\u5ff5\u51fa\u53d1\uff0c\u63a2\u7d22\u5176\u5728\u65e0\u9650\u5236\u8fde\u63a5\u4ea4\u4e92\u73af\u5883\u4e0b\u7684\u81ea\u7136\u5f31\u5316\u5f62\u5f0f\uff0c\u7814\u7a76\u8fdb\u7a0b\u4e0e\u73af\u5883\u4ea4\u4e92\u7684\u7b49\u4ef7\u5173\u7cfb", "method": "\u5b9a\u4e49\u8fde\u63a5\u4ea4\u4e92\u8fc7\u7a0bp & e\u548cq & e\u7684\u4e92\u6a21\u62df\u5173\u7cfb\uff0c\u901a\u8fc7'\u786e\u5b9a\u6027\u5316'\u4ea4\u4e92\u6765\u6062\u590dLarsen\u7684\u6982\u5ff5\uff0c\u5e76\u6269\u5c55\u5230\u6a21\u62df\u5173\u7cfb(ji-parameterized simulatability)", "result": "ji-parameterized bisimilarity\u5728\u786e\u5b9a\u6027\u73af\u5883\u4e0b\u4e0e\u53c2\u6570\u5316\u4e92\u6a21\u62df\u4e00\u81f4\uff0c\u4f46\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u66f4\u7c97\u7684\u7b49\u4ef7\u5173\u7cfb\uff1b\u53c2\u6570\u5316\u6a21\u62df\u4e0eji-\u53c2\u6570\u5316\u6a21\u62df\u5b8c\u5168\u4e00\u81f4\uff1b\u83b7\u5f97\u4e86\u73af\u5883\u533a\u5206\u9884\u5e8f\u7684\u76f8\u540c\u7ed3\u679c\uff1b\u7ed9\u51fa\u4e86\u6a21\u6001\u903b\u8f91\u7279\u5f81\u5316", "conclusion": "ji-parameterized bisimilarity\u662f\u53c2\u6570\u5316\u4e92\u6a21\u62df\u7684\u6709\u610f\u4e49\u5f31\u5316\uff0c\u5728\u6a21\u62df\u5173\u7cfb\u5c42\u9762\u4e24\u8005\u5b8c\u5168\u4e00\u81f4\uff0c\u4e3a\u8fdb\u7a0b\u4e0e\u73af\u5883\u4ea4\u4e92\u7684\u7b49\u4ef7\u6027\u7814\u7a76\u63d0\u4f9b\u4e86\u65b0\u7684\u7406\u8bba\u6846\u67b6"}}
{"id": "2508.13612", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2508.13612", "abs": "https://arxiv.org/abs/2508.13612", "authors": ["Gabriele Cecilia"], "title": "A Formalization of the Reversible Concurrent Calculus CCSKP in Beluga", "comment": "In Proceedings ICE 2025, arXiv:2508.12308", "summary": "Reversible concurrent calculi are abstract models for concurrent systems in\nwhich any action can potentially be undone. Over the last few decades,\ndifferent formalisms have been developed and their mathematical properties have\nbeen explored; however, none have been machine-checked within a proof\nassistant. This paper presents the first Beluga formalization of the Calculus\nof Communicating Systems with Keys and Proof labels (CCSKP), a reversible\nextension of CCS. Beyond the syntax and semantics of the calculus, the encoding\ncovers state-of-the-art results regarding three relations over proof labels --\nnamely, dependence, independence and connectivity -- which offer new insights\ninto the notions of causality and concurrency of events. As is often the case\nwith formalizations, our encoding introduces adjustments to the informal proof\nand makes explicit details which were previously only sketched, some of which\nreveal to be less straightforward than initially assumed. We believe this work\nlays the foundations for future reversible concurrent calculi formalizations.", "AI": {"tldr": "\u9996\u4e2aBeluga\u5f62\u5f0f\u5316\u7684\u53ef\u9006\u5e76\u53d1\u8ba1\u7b97\u6a21\u578bCCSKP\uff0c\u5305\u62ec\u8bed\u6cd5\u3001\u8bed\u4e49\u548c\u8bc1\u660e\u6807\u7b7e\u5173\u7cfb\u7684\u673a\u5668\u68c0\u67e5\u9a8c\u8bc1", "motivation": "\u867d\u7136\u53ef\u9006\u5e76\u53d1\u8ba1\u7b97\u6a21\u578b\u5f00\u53d1\u591a\u5e74\uff0c\u4f46\u65e0\u4e00\u5728\u8bc1\u660e\u52a9\u624b\u4e2d\u5b9e\u73b0\u673a\u5668\u68c0\u67e5\u9a8c\u8bc1\uff0c\u9700\u8981\u5b8c\u5584\u7684\u5f62\u5f0f\u5316\u57fa\u7840", "method": "\u4f7f\u7528Beluga\u8bc1\u660e\u52a9\u624b\u5bf9CCSKP\u8ba1\u7b97\u6a21\u578b\u8fdb\u884c\u5f62\u5f0f\u5316\uff0c\u5305\u62ec\u8bed\u6cd5\u3001\u64cd\u4f5c\u8bed\u4e49\u548c\u8bc1\u660e\u6807\u7b7e\u7684\u4f9d\u8d56\u3001\u72ec\u7acb\u3001\u8fde\u901a\u6027\u5173\u7cfb", "result": "\u5b9e\u73b0\u4e86\u9996\u4e2a\u673a\u5668\u68c0\u67e5\u7684\u53ef\u9006\u5e76\u53d1\u8ba1\u7b97\u5f62\u5f0f\u5316\uff0c\u66f4\u6e05\u6670\u5730\u63ed\u793a\u4e8b\u4ef6\u56e0\u679c\u6027\u548c\u5e76\u53d1\u6027\uff0c\u5bf9\u539f\u975e\u5f62\u5f0f\u8bc1\u660e\u8fdb\u884c\u4e86\u8c03\u6574\u548c\u8865\u5145", "conclusion": "\u4e3a\u672a\u6765\u53ef\u9006\u5e76\u53d1\u8ba1\u7b97\u6a21\u578b\u7684\u5f62\u5f0f\u5316\u7814\u7a76\u5960\u5b9a\u4e86\u57fa\u7840\uff0c\u663e\u793a\u4e86\u5f62\u5f0f\u5316\u8fc7\u7a0b\u4e2d\u7684\u6311\u6218\u548c\u4ef7\u503c"}}
{"id": "2508.13863", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.13863", "abs": "https://arxiv.org/abs/2508.13863", "authors": ["Shuai Zhao", "Jieyu Jiang", "Shenlin Cai", "Yaowei Liang", "Chen Jie", "Yinjie Fang", "Wei Zhang", "Guoquan Zhang", "Yaoyao Gu", "Xiang Xiao", "Wei Qin", "Xiangzhen Ouyang", "Wanli Chang"], "title": "Tight Inter-Core Cache Contention Analysis for WCET Estimation on Multicore Systems", "comment": null, "summary": "WCET (Worst-Case Execution Time) estimation on multicore architecture is\nparticularly challenging mainly due to the complex accesses over cache shared\nby multiple cores. Existing analysis identifies possible contentions between\nparallel tasks by leveraging the partial order of the tasks or their program\nregions. Unfortunately, they overestimate the number of cache misses caused by\na remote block access without considering the actual cache state and the number\nof accesses. This paper reports a new analysis for inter-core cache contention.\nBased on the order of program regions in a task, we first identify memory\nreferences that could be affected if a remote access occurs in a region.\nAfterwards, a fine-grained contention analysis is constructed that computes the\nnumber of cache misses based on the access quantity of local and remote blocks.\nWe demonstrate that the overall inter-core cache interference of a task can be\nobtained via dynamic programming. Experiments show that compared to existing\nmethods, the proposed analysis reduces inter-core cache interference and WCET\nestimations by 52.31% and 8.94% on average, without significantly increasing\ncomputation overhead.", "AI": {"tldr": "\u57fa\u4e8e\u7a0b\u5e8f\u533a\u57df\u987a\u5e8f\u7684\u7ec6\u7c92\u5ea6\u7ade\u4e89\u5206\u6790\uff0c\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u8ba1\u7b97\u7f13\u5b58\u5931\u6548\u6570\u91cf\uff0c\u663e\u8457\u964d\u4f4e\u591a\u6838\u7f13\u5b58\u5e72\u6270\u548cWCET\u4f30\u8ba1", "motivation": "\u73b0\u6709\u591a\u6838WCET\u4f30\u8ba1\u65b9\u6cd5\u5728\u8bc4\u4f30\u7f13\u5b58\u5931\u6548\u65f6\u8fc7\u4e8e\u7b80\u5316\uff0c\u6ca1\u6709\u8003\u8651\u5b9e\u9645\u7f13\u5b58\u72b6\u6001\u548c\u8bbf\u95ee\u6b21\u6570\uff0c\u5bfc\u81f4\u4f30\u8ba1\u8fc7\u9ad8", "method": "\u9996\u5148\u8bc6\u522b\u53ef\u80fd\u53d7\u8fdc\u7a0b\u8bbf\u95ee\u5f71\u54cd\u7684\u5185\u5b58\u5f15\u7528\uff0c\u7136\u540e\u6784\u5efa\u7ec6\u7c92\u5ea6\u7ade\u4e89\u5206\u6790\u6a21\u578b\uff0c\u57fa\u4e8e\u672c\u5730\u548c\u8fdc\u7a0b\u5757\u7684\u8bbf\u95ee\u6570\u91cf\u8ba1\u7b97\u7f13\u5b58\u5931\u6548\u6570\u91cf\uff0c\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6c42\u89e3\u6574\u4f53\u5e72\u6270", "result": "\u5b9e\u9a8c\u7ed3\u679c\u663e\u793a\uff0c\u4e0e\u73b0\u6709\u65b9\u6cd5\u76f8\u6bd4\uff0c\u7ade\u4e89\u5e72\u6270\u964d\u4f4e52.31%\uff0cWCET\u4f30\u8ba1\u964d\u4f4e8.94%\uff0c\u8ba1\u7b97\u5f00\u9500\u6ca1\u6709\u663e\u8457\u589e\u52a0", "conclusion": "\u8be5\u65b9\u6cd5\u901a\u8fc7\u66f4\u7cbe\u786e\u7684\u7f13\u5b58\u72b6\u6001\u548c\u8bbf\u95ee\u6570\u91cf\u6a21\u578b\uff0c\u6709\u6548\u51cf\u5c11\u591a\u6838\u7f13\u5b58\u5e72\u6270\u8fc7\u4f30\u8ba1\uff0c\u63d0\u9ad8\u4e86WCET\u5206\u6790\u7684\u51c6\u786e\u6027"}}
{"id": "2508.13616", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2508.13616", "abs": "https://arxiv.org/abs/2508.13616", "authors": ["Franco Barbanera", "Mariangiola Dezani-Ciancaglini"], "title": "Modular Multiparty Sessions with Mixed Choice", "comment": "In Proceedings ICE 2025, arXiv:2508.12308", "summary": "MultiParty Session Types (MPST) provide a useful framework for safe\nconcurrent systems. Mixed choice (enabling a participant to play at the same\ntime the roles of sender and receiver) increases the expressive power of MPST\nas well as the difficulty in controlling safety of communications. Such a\ncontrol is more viable when modular systems are considered and the power of\nmixed choice fully exploited only inside loosely coupled modules. We carry over\nsuch idea in a type assignment approach to multiparty sessions. Typability for\nmodular sessions entails Subject Reductions, Session Fidelity and Lock Freedom.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u591a\u53c2\u4e0e\u65b9\u4f1a\u8bdd\u7c7b\u578b(MPST)\u7684\u7c7b\u578b\u5206\u914d\u65b9\u6cd5\uff0c\u901a\u8fc7\u6a21\u5757\u5316\u4f1a\u8bdd\u548c\u6df7\u5408\u9009\u62e9\u6765\u589e\u5f3a\u5e76\u53d1\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u548c\u8868\u8fbe\u80fd\u529b", "motivation": "\u6df7\u5408\u9009\u62e9(mixed choice)\u867d\u7136\u80fd\u589e\u5f3aMPST\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u4f46\u4e5f\u589e\u52a0\u4e86\u901a\u4fe1\u5b89\u5168\u7684\u63a7\u5236\u96be\u5ea6\u3002\u9700\u8981\u5728\u6a21\u5757\u5316\u7cfb\u7edf\u4e2d\u66f4\u597d\u5730\u63a7\u5236\u5b89\u5168\u6027\uff0c\u5e76\u5145\u5206\u5229\u7528\u6df7\u5408\u9009\u62e9\u7684\u4f18\u52bf", "method": "\u91c7\u7528\u7c7b\u578b\u5206\u914d\u65b9\u6cd5\u5904\u7406\u591a\u53c2\u4e0e\u65b9\u4f1a\u8bdd\uff0c\u5c06\u6df7\u5408\u9009\u62e9\u5b8c\u5168\u9650\u5236\u5728\u677e\u6563\u8026\u5408\u7684\u6a21\u5757\u5185\u90e8\u4f7f\u7528", "result": "\u6a21\u5757\u5316\u4f1a\u8bdd\u7684\u7c7b\u578b\u5316\u786e\u4fdd\u4e86\u4e3b\u9898\u5f52\u7ea6(Subject Reduction)\u3001\u4f1a\u8bdd\u4fdd\u771f\u5ea6(Session Fidelity)\u548c\u65e0\u9501\u81ea\u7531(Lock Freedom)\u7b49\u5b89\u5168\u5c5e\u6027", "conclusion": "\u901a\u8fc7\u6a21\u5757\u5316\u8bbe\u8ba1\u548c\u7c7b\u578b\u7cfb\u7edf\u7ea6\u675f\uff0c\u53ef\u4ee5\u5728\u4fdd\u6301MPST\u8868\u8fbe\u80fd\u529b\u7684\u540c\u65f6\u786e\u4fdd\u5e76\u53d1\u901a\u4fe1\u7684\u5b89\u5168\u6027"}}
{"id": "2508.13928", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2508.13928", "abs": "https://arxiv.org/abs/2508.13928", "authors": ["Yaroslav Petrukhin"], "title": "On a Second-Order Version of Russellian Theory of Definite Descriptions", "comment": null, "summary": "Definite descriptions are first-order expressions that denote unique objects.\nIn this paper, we propose a second-order counterpart, designed to refer to\nunique relations between objects. We investigate this notion within the\nframework of Russell's theory of definite descriptions. While full second-order\nlogic is incomplete, its fragment defined by Henkin's general models admits\ncompleteness. We develop our theory within this fragment and formalize it using\na cut-free sequent calculus.", "AI": {"tldr": "\u63d0\u51fa\u4e8c\u9636\u5b9a\u6307\u63cf\u8ff0\u7406\u8bba\uff0c\u7528\u4e8e\u6307\u4ee3\u5bf9\u8c61\u95f4\u7684\u552f\u4e00\u5173\u7cfb\uff0c\u5728Henkin\u5e7f\u4e49\u6a21\u578b\u6846\u67b6\u4e0b\u5efa\u7acb\u5f62\u5f0f\u5316\u7cfb\u7edf", "motivation": "\u6269\u5c55\u7f57\u7d20\u7684\u5b9a\u6307\u63cf\u8ff0\u7406\u8bba\u5230\u4e8c\u9636\u903b\u8f91\uff0c\u5904\u7406\u5173\u7cfb\u552f\u4e00\u6027\u7684\u6307\u4ee3\u95ee\u9898", "method": "\u5728Henkin\u5e7f\u4e49\u6a21\u578b\u6846\u67b6\u4e0b\u6784\u5efa\u7406\u8bba\uff0c\u4f7f\u7528\u65e0\u5207\u5272\u5e8f\u5217\u6f14\u7b97\u8fdb\u884c\u5f62\u5f0f\u5316", "result": "\u5efa\u7acb\u4e86\u4e8c\u9636\u5b9a\u6307\u63cf\u8ff0\u7684\u5f62\u5f0f\u5316\u7406\u8bba\u6846\u67b6", "conclusion": "\u6210\u529f\u5c06\u5b9a\u6307\u63cf\u8ff0\u6982\u5ff5\u6269\u5c55\u5230\u4e8c\u9636\u903b\u8f91\u5173\u7cfb\u9886\u57df"}}
