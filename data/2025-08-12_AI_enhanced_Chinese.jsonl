{"id": "2508.07779", "categories": ["cs.FL", "68Q45, 52C20, 68U05, 68U10", "F.1.1"], "pdf": "https://arxiv.org/pdf/2508.07779", "abs": "https://arxiv.org/abs/2508.07779", "authors": ["Deepalakshmi D", "Lisa Mathew"], "title": "Hexagonal Picture Scanning Automata", "comment": "9 pages, 2 figures, 2 tables", "summary": "Two new classes of finite automata, called General hexagonal Boustrophedon\nfinite automata and General hexagonal returning finite automata operating on\nhexagonal grids, are introduced and analyzed. The work establishes the\ntheoretical foundations for these automata models, examines their computational\nproperties, and investigates the relationships and equivalences between the\nlanguage families they define. The research contributes to the broader\nunderstanding of two-dimensional automata theory by extending classical finite\nautomaton concepts to hexagonal geometric structures with specialized traversal\npatterns.", "AI": {"tldr": "\u8bba\u6587\u4ecb\u7ecd\u4e86\u4e24\u79cd\u65b0\u578b\u6709\u9650\u81ea\u52a8\u673a\uff0c\u5206\u6790\u4e86\u5176\u8ba1\u7b97\u7279\u6027\u53ca\u8bed\u8a00\u5bb6\u65cf\u5173\u7cfb\uff0c\u6269\u5c55\u4e86\u4e8c\u7ef4\u81ea\u52a8\u673a\u7406\u8bba\u3002", "motivation": "\u5c06\u7ecf\u5178\u6709\u9650\u81ea\u52a8\u673a\u6982\u5ff5\u6269\u5c55\u5230\u516d\u8fb9\u5f62\u51e0\u4f55\u7ed3\u6784\uff0c\u63a2\u7d22\u5176\u8ba1\u7b97\u80fd\u529b\u3002", "method": "\u5f15\u5165\u5e76\u5206\u6790\u4e86\u4e24\u79cd\u65b0\u578b\u516d\u8fb9\u5f62\u6709\u9650\u81ea\u52a8\u673a\u6a21\u578b\u3002", "result": "\u5efa\u7acb\u4e86\u8fd9\u4e9b\u81ea\u52a8\u673a\u7684\u7406\u8bba\u57fa\u7840\uff0c\u7814\u7a76\u4e86\u5176\u8bed\u8a00\u5bb6\u65cf\u7684\u5173\u7cfb\u4e0e\u7b49\u4ef7\u6027\u3002", "conclusion": "\u7814\u7a76\u6269\u5c55\u4e86\u4e8c\u7ef4\u81ea\u52a8\u673a\u7406\u8bba\uff0c\u4e3a\u516d\u8fb9\u5f62\u7ed3\u6784\u63d0\u4f9b\u4e86\u65b0\u7684\u8ba1\u7b97\u6a21\u578b\u3002"}}
{"id": "2508.07174", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2508.07174", "abs": "https://arxiv.org/abs/2508.07174", "authors": ["Rongshuan Geng", "Wantao Ning"], "title": "On the fault diameter and wide diameter of the exchanged 3-ary $n$-cube", "comment": null, "summary": "Fault diameter and wide diameter are two critical parameters for evaluating\ncommunication performance in interconnection networks. They measure the fault\ntolerance and transmission efficiency of networks. The exchanged 3-ary $n$-cube\nis a recently proposed variant of the hypercube, denoted by $E3C(r, s, t)$. In\nthis work, we obtain that the $(2r + 1)$-fault diameter and $(2r + 2)$-wide\ndiameter of $E3C(r, s, t)$ are bounded between $n + 3$ and $n + 5$ for $1 \\leq\nr \\leq s \\leq t$.", "AI": {"tldr": "\u7814\u7a76\u4e86\u4ea4\u63623-ary $n$-\u7acb\u65b9\u4f53$E3C(r, s, t)$\u7684\u6545\u969c\u76f4\u5f84\u548c\u5bbd\u76f4\u5f84\uff0c\u53d1\u73b0\u5176$(2r + 1)$-\u6545\u969c\u76f4\u5f84\u548c$(2r + 2)$-\u5bbd\u76f4\u5f84\u5728$n + 3$\u5230$n + 5$\u4e4b\u95f4\u3002", "motivation": "\u6545\u969c\u76f4\u5f84\u548c\u5bbd\u76f4\u5f84\u662f\u8bc4\u4f30\u4e92\u8fde\u7f51\u7edc\u901a\u4fe1\u6027\u80fd\u7684\u5173\u952e\u53c2\u6570\uff0c\u7814\u7a76\u5176\u5728\u65b0\u63d0\u51fa\u7684\u4ea4\u63623-ary $n$-\u7acb\u65b9\u4f53\u4e2d\u7684\u8868\u73b0\u5177\u6709\u91cd\u8981\u610f\u4e49\u3002", "method": "\u5206\u6790\u4e86\u4ea4\u63623-ary $n$-\u7acb\u65b9\u4f53$E3C(r, s, t)$\u7684\u7ed3\u6784\u7279\u6027\uff0c\u63a8\u5bfc\u5176\u6545\u969c\u76f4\u5f84\u548c\u5bbd\u76f4\u5f84\u7684\u4e0a\u4e0b\u754c\u3002", "result": "\u53d1\u73b0$(2r + 1)$-\u6545\u969c\u76f4\u5f84\u548c$(2r + 2)$-\u5bbd\u76f4\u5f84\u7684\u8303\u56f4\u4e3a$n + 3$\u5230$n + 5$\u3002", "conclusion": "\u4ea4\u63623-ary $n$-\u7acb\u65b9\u4f53\u5728\u6545\u969c\u5bb9\u5fcd\u548c\u4f20\u8f93\u6548\u7387\u65b9\u9762\u8868\u73b0\u826f\u597d\uff0c\u4e3a\u7f51\u7edc\u8bbe\u8ba1\u63d0\u4f9b\u4e86\u7406\u8bba\u652f\u6301\u3002"}}
{"id": "2508.06718", "categories": ["cs.SE", "K.6.3; D.2.7"], "pdf": "https://arxiv.org/pdf/2508.06718", "abs": "https://arxiv.org/abs/2508.06718", "authors": ["Daniel Ogenrwot", "John Businge"], "title": "Refactoring-Aware Patch Integration Across Structurally Divergent Java Forks", "comment": "12 pages, 3 figures", "summary": "While most forks on platforms like GitHub are short-lived and used for social\ncollaboration, a smaller but impactful subset evolve into long-lived forks,\nreferred to here as variants, that maintain independent development\ntrajectories. Integrating bug-fix patches across such divergent variants poses\nchallenges due to structural drift, including refactorings that rename,\nrelocate, or reorganize code elements and obscure semantic correspondence. This\npaper presents an empirical study of patch integration failures in 14 divergent\npair of variants and introduces RePatch, a refactoring-aware integration system\nfor Java repositories. RePatch extends the RefMerge framework, originally\ndesigned for symmetric merges, by supporting asymmetric patch transfer. RePatch\ninverts refactorings in both the source and target to realign the patch\ncontext, applies the patch, and replays the transformations to preserve the\nintent of the variant. In our evaluation of 478 bug-fix pull requests, Git\ncherry-pick fails in 64.4% of cases due to structural misalignments, while\nRePatch successfully integrates 52.8% of the previously failing patches. These\nresults highlight the limitations of syntax-based tools and the need for\nsemantic reasoning in variant-aware patch propagation.", "AI": {"tldr": "\u8bba\u6587\u7814\u7a76\u4e86GitHub\u4e0a\u957f\u671f\u5206\u53c9\uff08\u53d8\u4f53\uff09\u7684\u4ee3\u7801\u5e93\u4e2d\u8865\u4e01\u96c6\u6210\u7684\u6311\u6218\uff0c\u63d0\u51fa\u4e86RePatch\u7cfb\u7edf\uff0c\u901a\u8fc7\u91cd\u6784\u611f\u77e5\u7684\u65b9\u6cd5\u6210\u529f\u89e3\u51b3\u4e86\u90e8\u5206\u8865\u4e01\u96c6\u6210\u5931\u8d25\u7684\u95ee\u9898\u3002", "motivation": "\u957f\u671f\u5206\u53c9\u7684\u4ee3\u7801\u5e93\uff08\u53d8\u4f53\uff09\u5728\u72ec\u7acb\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4f1a\u51fa\u73b0\u7ed3\u6784\u6f02\u79fb\uff0c\u5bfc\u81f4\u8865\u4e01\u96c6\u6210\u56f0\u96be\uff0c\u4f20\u7edf\u5de5\u5177\u5982Git cherry-pick\u56e0\u7f3a\u4e4f\u8bed\u4e49\u63a8\u7406\u800c\u5931\u8d25\u7387\u9ad8\u3002", "method": "RePatch\u6269\u5c55\u4e86RefMerge\u6846\u67b6\uff0c\u652f\u6301\u975e\u5bf9\u79f0\u8865\u4e01\u4f20\u8f93\uff0c\u901a\u8fc7\u53cd\u8f6c\u91cd\u6784\u64cd\u4f5c\u5bf9\u9f50\u8865\u4e01\u4e0a\u4e0b\u6587\uff0c\u518d\u5e94\u7528\u8865\u4e01\u5e76\u91cd\u653e\u53d8\u6362\u4ee5\u4fdd\u7559\u53d8\u4f53\u610f\u56fe\u3002", "result": "\u5728478\u4e2a\u8865\u4e01\u8bf7\u6c42\u4e2d\uff0cGit cherry-pick\u5931\u8d25\u7387\u4e3a64.4%\uff0c\u800cRePatch\u6210\u529f\u96c6\u6210\u4e8652.8%\u7684\u5931\u8d25\u8865\u4e01\u3002", "conclusion": "\u7814\u7a76\u63ed\u793a\u4e86\u57fa\u4e8e\u8bed\u6cd5\u5de5\u5177\u7684\u5c40\u9650\u6027\uff0c\u5f3a\u8c03\u4e86\u8bed\u4e49\u63a8\u7406\u5728\u53d8\u4f53\u611f\u77e5\u8865\u4e01\u4f20\u64ad\u4e2d\u7684\u91cd\u8981\u6027\u3002"}}
{"id": "2508.07855", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2508.07855", "abs": "https://arxiv.org/abs/2508.07855", "authors": ["Parosh Aziz Abdulla", "Mohamed Faouzi Atig", "R. Govind", "Samuel Grahn", "Ramanathan S. Thinniyam"], "title": "Checking Consistency of Event-driven Traces", "comment": null, "summary": "Event-driven programming is a popular paradigm where the flow of execution is\ncontrolled by two features: (1) shared memory and (2) sending and receiving of\nmessages between multiple handler threads (just called handler). Each handler\nhas a mailbox (modelled as a queue) for receiving messages, with the constraint\nthat the handler processes its messages sequentially. Executions of messages by\ndifferent handlers may be interleaved. A central problem in this setting is\nchecking whether a candidate execution is consistent with the semantics of\nevent-driven programs. In this paper, we propose an axiomatic semantics for\neventdriven programs based on the standard notion of traces (also known as\nexecution graphs). We prove the equivalence of axiomatic and operational\nsemantics. This allows us to rephrase the consistency problem axiomatically,\nresulting in the event-driven consistency problem: checking whether a given\ntrace is consistent. We analyze the computational complexity of this problem\nand show that it is NP-complete, even when the number of handler threads is\nbounded. We then identify a tractable fragment: in the absence of nested\nposting, where handlers do not post new messages while processing a message,\nconsistency checking can be performed in polynomial time. Finally, we implement\nour approach in a prototype tool and report on experimental results on a wide\nrange of benchmarks.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u7684\u516c\u7406\u5316\u8bed\u4e49\uff0c\u8bc1\u660e\u4e86\u5176\u4e0e\u64cd\u4f5c\u8bed\u4e49\u7684\u7b49\u4ef7\u6027\uff0c\u5c06\u4e00\u81f4\u6027\u95ee\u9898\u8f6c\u5316\u4e3a\u4e8b\u4ef6\u9a71\u52a8\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u5e76\u5206\u6790\u4e86\u5176\u8ba1\u7b97\u590d\u6742\u5ea6\uff08NP\u5b8c\u5168\uff09\uff0c\u540c\u65f6\u8bc6\u522b\u4e86\u4e00\u4e2a\u591a\u9879\u5f0f\u65f6\u95f4\u53ef\u89e3\u7684\u7247\u6bb5\uff08\u65e0\u5d4c\u5957\u53d1\u5e03\uff09\u3002", "motivation": "\u4e8b\u4ef6\u9a71\u52a8\u7f16\u7a0b\u4e2d\uff0c\u68c0\u67e5\u5019\u9009\u6267\u884c\u662f\u5426\u7b26\u5408\u8bed\u4e49\u662f\u4e00\u4e2a\u6838\u5fc3\u95ee\u9898\uff0c\u9700\u8981\u4e00\u79cd\u5f62\u5f0f\u5316\u65b9\u6cd5\u6765\u9a8c\u8bc1\u4e00\u81f4\u6027\u3002", "method": "\u57fa\u4e8e\u6267\u884c\u56fe\uff08traces\uff09\u63d0\u51fa\u516c\u7406\u5316\u8bed\u4e49\uff0c\u8bc1\u660e\u5176\u4e0e\u64cd\u4f5c\u8bed\u4e49\u7684\u7b49\u4ef7\u6027\uff0c\u5c06\u4e00\u81f4\u6027\u95ee\u9898\u8f6c\u5316\u4e3a\u4e8b\u4ef6\u9a71\u52a8\u4e00\u81f4\u6027\u95ee\u9898\u3002", "result": "\u4e8b\u4ef6\u9a71\u52a8\u4e00\u81f4\u6027\u95ee\u9898\u4e3aNP\u5b8c\u5168\u95ee\u9898\uff0c\u4f46\u5728\u65e0\u5d4c\u5957\u53d1\u5e03\u7684\u60c5\u51b5\u4e0b\u53ef\u591a\u9879\u5f0f\u65f6\u95f4\u6c42\u89e3\u3002", "conclusion": "\u901a\u8fc7\u516c\u7406\u5316\u8bed\u4e49\u548c\u590d\u6742\u5ea6\u5206\u6790\uff0c\u4e3a\u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e00\u81f4\u6027\u68c0\u67e5\u63d0\u4f9b\u4e86\u7406\u8bba\u57fa\u7840\u548c\u5b9e\u7528\u5de5\u5177\u3002"}}
{"id": "2508.07207", "categories": ["cs.LO", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.07207", "abs": "https://arxiv.org/abs/2508.07207", "authors": ["S. Akshay", "A. R. Balasubramanian", "Supratik Chakraborty", "Georg Zetzsche"], "title": "Presburger Functional Synthesis: Complexity and Tractable Normal Forms", "comment": "Full version of conference paper at KR 2025 (22nd International\n  Conference on Principles of Knowledge Representation and Reasoning)", "summary": "Given a relational specification between inputs and outputs as a logic\nformula, the problem of functional synthesis is to automatically synthesize a\nfunction from inputs to outputs satisfying the relation. Recently, a rich line\nof work has emerged tackling this problem for specifications in different\ntheories, from Boolean to general first-order logic. In this paper, we launch\nan investigation of this problem for the theory of Presburger Arithmetic, that\nwe call Presburger Functional Synthesis (PFnS). We show that PFnS can be solved\nin EXPTIME and provide a matching exponential lower bound. This is unlike the\ncase for Boolean functional synthesis (BFnS), where only conditional\nexponential lower bounds are known. Further, we show that PFnS for one input\nand one output variable is as hard as BFnS in general. We then identify a\nspecial normal form, called PSyNF, for the specification formula that\nguarantees poly-time and poly-size solvability of PFnS. We prove several\nproperties of PSyNF, including how to check and compile to this form, and\nconditions under which any other form that guarantees poly-time solvability of\nPFnS can be compiled in poly-time to PSyNF. Finally, we identify a syntactic\nnormal form that is easier to check but is exponentially less succinct than\nPSyNF.", "AI": {"tldr": "\u672c\u6587\u7814\u7a76\u4e86Presburger\u7b97\u672f\u7406\u8bba\u4e2d\u7684\u51fd\u6570\u5408\u6210\u95ee\u9898\uff08PFnS\uff09\uff0c\u8bc1\u660e\u4e86\u5176\u53ef\u5728EXPTIME\u5185\u89e3\u51b3\uff0c\u5e76\u63d0\u4f9b\u4e86\u5339\u914d\u7684\u6307\u6570\u4e0b\u754c\u3002\u540c\u65f6\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u7279\u6b8a\u8303\u5f0fPSyNF\uff0c\u4fdd\u8bc1\u591a\u9879\u5f0f\u65f6\u95f4\u6c42\u89e3\u3002", "motivation": "\u7814\u7a76Presburger\u7b97\u672f\u7406\u8bba\u4e2d\u7684\u51fd\u6570\u5408\u6210\u95ee\u9898\uff0c\u586b\u8865\u73b0\u6709\u7406\u8bba\u7a7a\u767d\uff0c\u5e76\u63a2\u7d22\u9ad8\u6548\u6c42\u89e3\u65b9\u6cd5\u3002", "method": "\u901a\u8fc7\u7406\u8bba\u5206\u6790\uff0c\u8bc1\u660ePFnS\u7684\u590d\u6742\u5ea6\uff0c\u5e76\u8bbe\u8ba1\u7279\u6b8a\u8303\u5f0fPSyNF\u4ee5\u5b9e\u73b0\u591a\u9879\u5f0f\u65f6\u95f4\u6c42\u89e3\u3002", "result": "PFnS\u53ef\u5728EXPTIME\u5185\u89e3\u51b3\uff0cPSyNF\u8303\u5f0f\u4fdd\u8bc1\u591a\u9879\u5f0f\u65f6\u95f4\u548c\u591a\u9879\u5f0f\u89c4\u6a21\u6c42\u89e3\u3002", "conclusion": "PFnS\u7684\u590d\u6742\u5ea6\u4e3aEXPTIME\uff0cPSyNF\u662f\u4e00\u79cd\u9ad8\u6548\u7684\u6c42\u89e3\u8303\u5f0f\uff0c\u9002\u7528\u4e8e\u7279\u5b9a\u6761\u4ef6\u4e0b\u7684\u51fd\u6570\u5408\u6210\u3002"}}
{"id": "2508.06879", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.06879", "abs": "https://arxiv.org/abs/2508.06879", "authors": ["Michael Dorner", "Andreas Bauer", "Darja \u0160mite", "Lukas Thode", "Daniel Mendez", "Ricardo Britto", "Stephan Lukasczyk", "Ehsan Zabardast", "Michael Kormann"], "title": "Quo Vadis, Code Review? Exploring the Future of Code Review", "comment": null, "summary": "Code review has long been a core practice in collaborative software\nengineering. In this research, we explore how practitioners reflect on code\nreview today and what changes they anticipate in the near future. We then\ndiscuss the potential long-term risks of these anticipated changes for the\nevolution of code review and its role in collaborative software engineering.", "AI": {"tldr": "\u7814\u7a76\u63a2\u8ba8\u4e86\u5f00\u53d1\u8005\u5bf9\u4ee3\u7801\u5ba1\u67e5\u73b0\u72b6\u7684\u53cd\u601d\u53ca\u672a\u6765\u53d8\u5316\u7684\u9884\u671f\uff0c\u5e76\u5206\u6790\u4e86\u8fd9\u4e9b\u53d8\u5316\u5bf9\u4ee3\u7801\u5ba1\u67e5\u957f\u671f\u53d1\u5c55\u7684\u6f5c\u5728\u98ce\u9669\u3002", "motivation": "\u63a2\u7d22\u5f00\u53d1\u8005\u5bf9\u4ee3\u7801\u5ba1\u67e5\u7684\u73b0\u72b6\u53cd\u601d\u53ca\u672a\u6765\u9884\u671f\uff0c\u4ee5\u7406\u89e3\u5176\u5bf9\u534f\u4f5c\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5f71\u54cd\u3002", "method": "\u901a\u8fc7\u8c03\u67e5\u548c\u5206\u6790\u5f00\u53d1\u8005\u7684\u89c2\u70b9\uff0c\u63a2\u8ba8\u4ee3\u7801\u5ba1\u67e5\u7684\u672a\u6765\u53d8\u5316\u53ca\u5176\u6f5c\u5728\u98ce\u9669\u3002", "result": "\u63ed\u793a\u4e86\u5f00\u53d1\u8005\u5bf9\u4ee3\u7801\u5ba1\u67e5\u672a\u6765\u53d8\u5316\u7684\u9884\u671f\uff0c\u5e76\u8bc6\u522b\u4e86\u53ef\u80fd\u5f71\u54cd\u5176\u957f\u671f\u53d1\u5c55\u7684\u98ce\u9669\u3002", "conclusion": "\u4ee3\u7801\u5ba1\u67e5\u7684\u672a\u6765\u53d8\u5316\u53ef\u80fd\u5e26\u6765\u98ce\u9669\uff0c\u9700\u8fdb\u4e00\u6b65\u7814\u7a76\u4ee5\u4fdd\u969c\u5176\u5728\u534f\u4f5c\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u7684\u6838\u5fc3\u4f5c\u7528\u3002"}}
{"id": "2508.07304", "categories": ["cs.LO", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.07304", "abs": "https://arxiv.org/abs/2508.07304", "authors": ["Fabio Vitali"], "title": "From Knowledge to Conjectures: A Modal Framework for Reasoning about Hypotheses", "comment": null, "summary": "This paper introduces a new family of cognitive modal logics designed to\nformalize conjectural reasoning: a modal system in which cognitive contexts\nextend known facts with hypothetical assumptions to explore their consequences.\nUnlike traditional doxastic and epistemic systems, conjectural logics rely on a\nprinciple, called Axiom C ($\\varphi \\rightarrow \\Box\\varphi$), that ensures\nthat all established facts are preserved across hypothetical layers. While\nAxiom C was dismissed in the past due to its association with modal collapse,\nwe show that the collapse only arises under classical and bivalent assumptions,\nand specifically in the presence of Axiom T. Hence we avoid Axiom T and adopt a\nparacomplete semantic framework, grounded in Weak Kleene logic or Description\nLogic, where undefined propositions coexist with modal assertions. This\nprevents the modal collapse and guarantees a layering to distinguish between\nfactual and conjectural statements. Under this framework we define new modal\nsystems, e.g., KC and KDC, and show that they are complete, decidable, and\nrobust under partial knowledge. Finally, we introduce a dynamic operation,\n$\\mathsf{settle}(\\varphi)$, which formalizes the transition from conjecture to\naccepted fact, capturing the event of the update of a world's cognitive state\nthrough the resolution of uncertainty.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8ba4\u77e5\u6a21\u6001\u903b\u8f91\u5bb6\u65cf\uff0c\u7528\u4e8e\u5f62\u5f0f\u5316\u63a8\u6d4b\u63a8\u7406\uff0c\u901a\u8fc7\u5047\u8bbe\u6269\u5c55\u5df2\u77e5\u4e8b\u5b9e\u4ee5\u63a2\u7d22\u5176\u540e\u679c\u3002\u4e0e\u4f20\u7edf\u4fe1\u5ff5\u548c\u8ba4\u77e5\u7cfb\u7edf\u4e0d\u540c\uff0c\u8be5\u903b\u8f91\u57fa\u4e8eAxiom C\uff0c\u907f\u514d\u6a21\u6001\u5d29\u6e83\uff0c\u5e76\u91c7\u7528\u5f31Kleene\u903b\u8f91\u6216\u63cf\u8ff0\u903b\u8f91\u7684\u8bed\u4e49\u6846\u67b6\u3002", "motivation": "\u4f20\u7edf\u6a21\u6001\u903b\u8f91\u5728\u63a8\u6d4b\u63a8\u7406\u4e2d\u5b58\u5728\u5c40\u9650\u6027\uff0c\u5c24\u5176\u662fAxiom C\u4e0e\u6a21\u6001\u5d29\u6e83\u7684\u5173\u8054\u3002\u672c\u6587\u65e8\u5728\u8bbe\u8ba1\u4e00\u79cd\u65b0\u903b\u8f91\u7cfb\u7edf\uff0c\u907f\u514d\u5d29\u6e83\u5e76\u533a\u5206\u4e8b\u5b9e\u4e0e\u63a8\u6d4b\u3002", "method": "\u91c7\u7528\u5f31Kleene\u903b\u8f91\u6216\u63cf\u8ff0\u903b\u8f91\u7684\u8bed\u4e49\u6846\u67b6\uff0c\u907f\u514dAxiom T\uff0c\u5b9a\u4e49\u65b0\u6a21\u6001\u7cfb\u7edf\uff08\u5982KC\u548cKDC\uff09\uff0c\u5e76\u5f15\u5165\u52a8\u6001\u64cd\u4f5csettle(\u03c6)\u3002", "result": "\u65b0\u7cfb\u7edf\uff08KC\u548cKDC\uff09\u5177\u6709\u5b8c\u5907\u6027\u3001\u53ef\u5224\u5b9a\u6027\uff0c\u5e76\u5728\u90e8\u5206\u77e5\u8bc6\u4e0b\u4fdd\u6301\u9c81\u68d2\u6027\u3002\u52a8\u6001\u64cd\u4f5csettle(\u03c6)\u5f62\u5f0f\u5316\u4e86\u4ece\u63a8\u6d4b\u5230\u4e8b\u5b9e\u7684\u8f6c\u6362\u3002", "conclusion": "\u672c\u6587\u63d0\u51fa\u7684\u903b\u8f91\u7cfb\u7edf\u6709\u6548\u89e3\u51b3\u4e86\u63a8\u6d4b\u63a8\u7406\u4e2d\u7684\u6a21\u6001\u5d29\u6e83\u95ee\u9898\uff0c\u5e76\u63d0\u4f9b\u4e86\u52a8\u6001\u66f4\u65b0\u8ba4\u77e5\u72b6\u6001\u7684\u65b9\u6cd5\u3002"}}
{"id": "2508.06888", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.06888", "abs": "https://arxiv.org/abs/2508.06888", "authors": ["Fanyu Wang", "Chetan Arora", "Yonghui Liu", "Kaicheng Huang", "Chakkrit Tantithamthavorn", "Aldeida Aleti", "Dishan Sambathkumar", "David Lo"], "title": "Multi-Modal Requirements Data-based Acceptance Criteria Generation using LLMs", "comment": null, "summary": "Acceptance criteria (ACs) play a critical role in software development by\nclearly defining the conditions under which a software feature satisfies\nstakeholder expectations. However, manually creating accurate, comprehensive,\nand unambiguous acceptance criteria is challenging, particularly in user\ninterface-intensive applications, due to the reliance on domain-specific\nknowledge and visual context that is not always captured by textual\nrequirements alone. To address these challenges, we propose RAGcceptance M2RE,\na novel approach that leverages Retrieval-Augmented Generation (RAG) to\ngenerate acceptance criteria from multi-modal requirements data, including both\ntextual documentation and visual UI information. We systematically evaluated\nour approach in an industrial case study involving an education-focused\nsoftware system used by approximately 100,000 users. The results indicate that\nintegrating multi-modal information significantly enhances the relevance,\ncorrectness, and comprehensibility of the generated ACs. Moreover, practitioner\nevaluations confirm that our approach effectively reduces manual effort,\ncaptures nuanced stakeholder intent, and provides valuable criteria that domain\nexperts may overlook, demonstrating practical utility and significant potential\nfor industry adoption. This research underscores the potential of multi-modal\nRAG techniques in streamlining software validation processes and improving\ndevelopment efficiency. We also make our implementation and a dataset\navailable.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u591a\u6a21\u6001RAG\u7684\u65b9\u6cd5RAGcceptance M2RE\uff0c\u7528\u4e8e\u4ece\u6587\u672c\u548c\u89c6\u89c9UI\u4fe1\u606f\u751f\u6210\u9a8c\u6536\u6807\u51c6\uff0c\u663e\u8457\u63d0\u5347\u4e86\u76f8\u5173\u6027\u548c\u6b63\u786e\u6027\u3002", "motivation": "\u624b\u52a8\u521b\u5efa\u51c6\u786e\u3001\u5168\u9762\u4e14\u65e0\u6b67\u4e49\u7684\u9a8c\u6536\u6807\u51c6\u5177\u6709\u6311\u6218\u6027\uff0c\u5c24\u5176\u662f\u5728\u4f9d\u8d56\u9886\u57df\u77e5\u8bc6\u548c\u89c6\u89c9\u4e0a\u4e0b\u6587\u7684\u7528\u6237\u754c\u9762\u5bc6\u96c6\u578b\u5e94\u7528\u4e2d\u3002", "method": "\u5229\u7528\u68c0\u7d22\u589e\u5f3a\u751f\u6210\uff08RAG\uff09\u6280\u672f\uff0c\u7ed3\u5408\u591a\u6a21\u6001\u9700\u6c42\u6570\u636e\uff08\u6587\u672c\u548cUI\u89c6\u89c9\u4fe1\u606f\uff09\u751f\u6210\u9a8c\u6536\u6807\u51c6\u3002", "result": "\u5de5\u4e1a\u6848\u4f8b\u7814\u7a76\u8868\u660e\uff0c\u591a\u6a21\u6001\u4fe1\u606f\u663e\u8457\u63d0\u5347\u4e86\u751f\u6210\u9a8c\u6536\u6807\u51c6\u7684\u76f8\u5173\u6027\u3001\u6b63\u786e\u6027\u548c\u53ef\u7406\u89e3\u6027\uff0c\u5e76\u51cf\u5c11\u4e86\u4eba\u5de5\u5de5\u4f5c\u91cf\u3002", "conclusion": "\u591a\u6a21\u6001RAG\u6280\u672f\u5728\u4f18\u5316\u8f6f\u4ef6\u9a8c\u8bc1\u6d41\u7a0b\u548c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u65b9\u9762\u5177\u6709\u663e\u8457\u6f5c\u529b\u3002"}}
{"id": "2508.07742", "categories": ["cs.LO", "cs.AI", "cs.DB"], "pdf": "https://arxiv.org/pdf/2508.07742", "abs": "https://arxiv.org/abs/2508.07742", "authors": ["Meghyn Bienvenu", "Camille Bourgaux", "Katsumi Inoue", "Robin Jean"], "title": "A Rule-Based Approach to Specifying Preferences over Conflicting Facts and Querying Inconsistent Knowledge Bases", "comment": "This is an extended version of a paper appearing at the 22nd\n  International Conference on Principles of Knowledge Representation and\n  Reasoning (KR 2025). 24 pages", "summary": "Repair-based semantics have been extensively studied as a means of obtaining\nmeaningful answers to queries posed over inconsistent knowledge bases (KBs).\nWhile several works have considered how to exploit a priority relation between\nfacts to select optimal repairs, the question of how to specify such\npreferences remains largely unaddressed. This motivates us to introduce a\ndeclarative rule-based framework for specifying and computing a priority\nrelation between conflicting facts. As the expressed preferences may contain\nundesirable cycles, we consider the problem of determining when a set of\npreference rules always yields an acyclic relation, and we also explore a\npragmatic approach that extracts an acyclic relation by applying various cycle\nremoval techniques. Towards an end-to-end system for querying inconsistent KBs,\nwe present a preliminary implementation and experimental evaluation of the\nframework, which employs answer set programming to evaluate the preference\nrules, apply the desired cycle resolution techniques to obtain a priority\nrelation, and answer queries under prioritized-repair semantics.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u89c4\u5219\u7684\u58f0\u660e\u6027\u6846\u67b6\uff0c\u7528\u4e8e\u6307\u5b9a\u548c\u8ba1\u7b97\u51b2\u7a81\u4e8b\u5b9e\u4e4b\u95f4\u7684\u4f18\u5148\u7ea7\u5173\u7cfb\uff0c\u5e76\u63a2\u8ba8\u4e86\u5982\u4f55\u6d88\u9664\u504f\u597d\u89c4\u5219\u4e2d\u7684\u5faa\u73af\u95ee\u9898\u3002", "motivation": "\u73b0\u6709\u7814\u7a76\u867d\u7136\u5229\u7528\u4e8b\u5b9e\u95f4\u7684\u4f18\u5148\u7ea7\u5173\u7cfb\u9009\u62e9\u6700\u4f18\u4fee\u590d\uff0c\u4f46\u5982\u4f55\u6307\u5b9a\u8fd9\u79cd\u504f\u597d\u4ecd\u672a\u89e3\u51b3\u3002", "method": "\u5f15\u5165\u58f0\u660e\u6027\u89c4\u5219\u6846\u67b6\uff0c\u7ed3\u5408\u5faa\u73af\u6d88\u9664\u6280\u672f\uff0c\u5229\u7528\u7b54\u6848\u96c6\u7f16\u7a0b\u5b9e\u73b0\u4f18\u5148\u7ea7\u5173\u7cfb\u548c\u67e5\u8be2\u56de\u7b54\u3002", "result": "\u63d0\u51fa\u4e86\u4e00\u4e2a\u521d\u6b65\u5b9e\u73b0\u548c\u5b9e\u9a8c\u8bc4\u4f30\u7684\u7cfb\u7edf\uff0c\u652f\u6301\u4e0d\u4e00\u81f4\u77e5\u8bc6\u5e93\u7684\u67e5\u8be2\u3002", "conclusion": "\u8be5\u6846\u67b6\u4e3a\u4e0d\u4e00\u81f4\u77e5\u8bc6\u5e93\u7684\u67e5\u8be2\u63d0\u4f9b\u4e86\u6709\u6548\u7684\u4f18\u5148\u7ea7\u5173\u7cfb\u6307\u5b9a\u548c\u5faa\u73af\u5904\u7406\u65b9\u6cd5\u3002"}}
{"id": "2508.06926", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.06926", "abs": "https://arxiv.org/abs/2508.06926", "authors": ["Feng Luo", "Kexing Ji", "Cuiyun Gao", "Shuzheng Gao", "Jia Feng", "Kui Liu", "Xin Xia", "Michael R. Lyu"], "title": "Integrating Rules and Semantics for LLM-Based C-to-Rust Translation", "comment": "Accepted in ICSME 25 Industry Track", "summary": "Automated translation of legacy C code into Rust aims to ensure memory safety\nwhile reducing the burden of manual migration. Early approaches in code\ntranslation rely on static rule-based methods, but they suffer from limited\ncoverage due to dependence on predefined rule patterns. Recent works regard the\ntask as a sequence-to-sequence problem by leveraging large language models\n(LLMs). Although these LLM-based methods are capable of reducing unsafe code\nblocks, the translated code often exhibits issues in following Rust rules and\nmaintaining semantic consistency. On one hand, existing methods adopt a direct\nprompting strategy to translate the C code, which struggles to accommodate the\nsyntactic rules between C and Rust. On the other hand, this strategy makes it\ndifficult for LLMs to accurately capture the semantics of complex code. To\naddress these challenges, we propose IRENE, an LLM-based framework that\nIntegrates RulEs aNd sEmantics to enhance translation. IRENE consists of three\nmodules: 1) a rule-augmented retrieval module that selects relevant translation\nexamples based on rules generated from a static analyzer developed by us,\nthereby improving the handling of Rust rules; 2) a structured summarization\nmodule that produces a structured summary for guiding LLMs to enhance the\nsemantic understanding of C code; 3) an error-driven translation module that\nleverages compiler diagnostics to iteratively refine translations. We evaluate\nIRENE on two datasets (xCodeEval, a public dataset, and HW-Bench, an industrial\ndataset provided by Huawei) and eight LLMs, focusing on translation accuracy\nand safety.", "AI": {"tldr": "IRENE\u662f\u4e00\u4e2a\u57fa\u4e8eLLM\u7684\u6846\u67b6\uff0c\u901a\u8fc7\u6574\u5408\u89c4\u5219\u548c\u8bed\u4e49\u63d0\u5347C\u5230Rust\u7684\u4ee3\u7801\u7ffb\u8bd1\u8d28\u91cf\uff0c\u89e3\u51b3\u4e86\u73b0\u6709\u65b9\u6cd5\u5728\u8bed\u6cd5\u89c4\u5219\u548c\u8bed\u4e49\u4e00\u81f4\u6027\u4e0a\u7684\u4e0d\u8db3\u3002", "motivation": "\u73b0\u6709C\u5230Rust\u7684\u7ffb\u8bd1\u65b9\u6cd5\uff08\u5982\u9759\u6001\u89c4\u5219\u6216\u76f4\u63a5\u63d0\u793aLLM\uff09\u5728\u8bed\u6cd5\u89c4\u5219\u9002\u5e94\u6027\u548c\u8bed\u4e49\u4e00\u81f4\u6027\u4e0a\u8868\u73b0\u4e0d\u4f73\uff0cIRENE\u65e8\u5728\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002", "method": "IRENE\u5305\u542b\u4e09\u4e2a\u6a21\u5757\uff1a\u89c4\u5219\u589e\u5f3a\u68c0\u7d22\u6a21\u5757\u3001\u7ed3\u6784\u5316\u6458\u8981\u6a21\u5757\u548c\u9519\u8bef\u9a71\u52a8\u7ffb\u8bd1\u6a21\u5757\uff0c\u5206\u522b\u63d0\u5347\u89c4\u5219\u5904\u7406\u3001\u8bed\u4e49\u7406\u89e3\u548c\u7ffb\u8bd1\u8fed\u4ee3\u4f18\u5316\u3002", "result": "\u5728xCodeEval\u548cHW-Bench\u6570\u636e\u96c6\u4e0a\u8bc4\u4f30\uff0cIRENE\u5728\u7ffb\u8bd1\u51c6\u786e\u6027\u548c\u5b89\u5168\u6027\u4e0a\u8868\u73b0\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u3002", "conclusion": "IRENE\u901a\u8fc7\u6574\u5408\u89c4\u5219\u548c\u8bed\u4e49\uff0c\u663e\u8457\u63d0\u5347\u4e86C\u5230Rust\u4ee3\u7801\u7ffb\u8bd1\u7684\u8d28\u91cf\u548c\u5b89\u5168\u6027\u3002"}}
{"id": "2508.07963", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2508.07963", "abs": "https://arxiv.org/abs/2508.07963", "authors": ["Javier Esparza", "Vincent Fischer"], "title": "Runtime Verification for LTL in Stochastic Systems", "comment": null, "summary": "Runtime verification encompasses several lightweight techniques for checking\nwhether a system's current execution satisfies a given specification. We focus\non runtime verification for Linear Temporal Logic (LTL). Previous work\ndescribes monitors which produce, at every time step one of three outputs -\ntrue, false, or inconclusive - depending on whether the observed execution\nprefix definitively determines satisfaction of the formula. However, for many\nLTL formulas, such as liveness properties, satisfaction cannot be concluded\nfrom any finite prefix. For these properties traditional monitors will always\noutput inconclusive. In this work, we propose a novel monitoring approach that\nreplaces hard verdicts with probabilistic predictions and an associated\nconfidence score. Our method guarantees eventual correctness of the prediction\nand ensures that confidence increases without bound from that point on.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u6982\u7387\u9884\u6d4b\u548c\u7f6e\u4fe1\u5ea6\u8bc4\u5206\u7684\u65b0\u578b\u8fd0\u884c\u65f6\u9a8c\u8bc1\u65b9\u6cd5\uff0c\u7528\u4e8e\u89e3\u51b3\u4f20\u7edfLTL\u76d1\u63a7\u5668\u5bf9\u6d3b\u6027\u8d28\u65e0\u6cd5\u7ed9\u51fa\u786e\u5b9a\u7ed3\u8bba\u7684\u95ee\u9898\u3002", "motivation": "\u4f20\u7edfLTL\u76d1\u63a7\u5668\u53ea\u80fd\u8f93\u51fa\u771f\u3001\u5047\u6216\u4e0d\u786e\u5b9a\uff0c\u5bf9\u4e8e\u6d3b\u6027\u8d28\u65e0\u6cd5\u4ece\u6709\u9650\u524d\u7f00\u5f97\u51fa\u7ed3\u8bba\uff0c\u9650\u5236\u4e86\u5176\u5e94\u7528\u8303\u56f4\u3002", "method": "\u91c7\u7528\u6982\u7387\u9884\u6d4b\u548c\u7f6e\u4fe1\u5ea6\u8bc4\u5206\u66ff\u4ee3\u786c\u6027\u5224\u51b3\uff0c\u786e\u4fdd\u9884\u6d4b\u7684\u6700\u7ec8\u6b63\u786e\u6027\uff0c\u5e76\u4fdd\u8bc1\u7f6e\u4fe1\u5ea6\u4ece\u67d0\u70b9\u5f00\u59cb\u65e0\u9650\u589e\u957f\u3002", "result": "\u65b0\u65b9\u6cd5\u80fd\u591f\u4e3a\u6d3b\u6027\u8d28\u63d0\u4f9b\u6e10\u8fdb\u51c6\u786e\u7684\u9884\u6d4b\uff0c\u5e76\u4fdd\u8bc1\u7f6e\u4fe1\u5ea6\u7684\u6301\u7eed\u63d0\u5347\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u6269\u5c55\u4e86\u8fd0\u884c\u65f6\u9a8c\u8bc1\u7684\u80fd\u529b\uff0c\u9002\u7528\u4e8e\u66f4\u5e7f\u6cdb\u7684LTL\u516c\u5f0f\uff0c\u5c24\u5176\u662f\u6d3b\u6027\u8d28\u3002"}}
{"id": "2508.06942", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.06942", "abs": "https://arxiv.org/abs/2508.06942", "authors": ["Zhenchang Xing", "Yang Liu", "Zhuo Cheng", "Qing Huang", "Dehai Zhao", "Daniel Sun", "Chenhua Liu"], "title": "When Prompt Engineering Meets Software Engineering: CNL-P as Natural and Robust \"APIs'' for Human-AI Interaction", "comment": null, "summary": "With the growing capabilities of large language models (LLMs), they are\nincreasingly applied in areas like intelligent customer service, code\ngeneration, and knowledge management. Natural language (NL) prompts act as the\n``APIs'' for human-LLM interaction. To improve prompt quality, best practices\nfor prompt engineering (PE) have been developed, including writing guidelines\nand templates. Building on this, we propose Controlled NL for Prompt (CNL-P),\nwhich not only incorporates PE best practices but also draws on key principles\nfrom software engineering (SE). CNL-P introduces precise grammar structures and\nstrict semantic norms, further eliminating NL's ambiguity, allowing for a\ndeclarative but structured and accurate expression of user intent. This helps\nLLMs better interpret and execute the prompts, leading to more consistent and\nhigher-quality outputs. We also introduce an NL2CNL-P conversion tool based on\nLLMs, enabling users to write prompts in NL, which are then transformed into\nCNL-P format, thus lowering the learning curve of CNL-P. In particular, we\ndevelop a linting tool that checks CNL-P prompts for syntactic and semantic\naccuracy, applying static analysis techniques to NL for the first time.\nExtensive experiments demonstrate that CNL-P enhances the quality of LLM\nresponses through the novel and organic synergy of PE and SE. We believe that\nCNL-P can bridge the gap between emerging PE and traditional SE, laying the\nfoundation for a new programming paradigm centered around NL.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aCNL-P\u7684\u53d7\u63a7\u81ea\u7136\u8bed\u8a00\uff0c\u7ed3\u5408\u4e86\u63d0\u793a\u5de5\u7a0b\u548c\u8f6f\u4ef6\u5de5\u7a0b\u7684\u539f\u5219\uff0c\u4ee5\u51cf\u5c11\u81ea\u7136\u8bed\u8a00\u7684\u6b67\u4e49\u5e76\u63d0\u5347LLM\u7684\u8f93\u51fa\u8d28\u91cf\u3002", "motivation": "\u968f\u7740\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u80fd\u529b\u7684\u589e\u5f3a\uff0c\u5176\u5728\u667a\u80fd\u5ba2\u670d\u3001\u4ee3\u7801\u751f\u6210\u7b49\u9886\u57df\u7684\u5e94\u7528\u65e5\u76ca\u5e7f\u6cdb\uff0c\u4f46\u81ea\u7136\u8bed\u8a00\u63d0\u793a\u7684\u6b67\u4e49\u6027\u9650\u5236\u4e86\u4ea4\u4e92\u6548\u679c\u3002", "method": "\u63d0\u51faCNL-P\uff0c\u5f15\u5165\u7cbe\u786e\u7684\u8bed\u6cd5\u7ed3\u6784\u548c\u8bed\u4e49\u89c4\u8303\uff0c\u5e76\u5f00\u53d1\u4e86NL2CNL-P\u8f6c\u6362\u5de5\u5177\u548c\u8bed\u6cd5\u68c0\u67e5\u5de5\u5177\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0cCNL-P\u901a\u8fc7\u7ed3\u5408\u63d0\u793a\u5de5\u7a0b\u548c\u8f6f\u4ef6\u5de5\u7a0b\uff0c\u663e\u8457\u63d0\u5347\u4e86LLM\u7684\u8f93\u51fa\u8d28\u91cf\u3002", "conclusion": "CNL-P\u4e3a\u4ee5\u81ea\u7136\u8bed\u8a00\u4e3a\u4e2d\u5fc3\u7684\u65b0\u7f16\u7a0b\u8303\u5f0f\u5960\u5b9a\u4e86\u57fa\u7840\uff0c\u5f25\u5408\u4e86\u63d0\u793a\u5de5\u7a0b\u4e0e\u4f20\u7edf\u8f6f\u4ef6\u5de5\u7a0b\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002"}}
{"id": "2508.07084", "categories": ["cs.SE", "cs.PF"], "pdf": "https://arxiv.org/pdf/2508.07084", "abs": "https://arxiv.org/abs/2508.07084", "authors": ["Kaveh Shahedi", "Nana Gyambrah", "Heng Li", "Maxime Lamothe", "Foutse Khomh"], "title": "An Empirical Study on Method-Level Performance Evolution in Open-Source Java Projects", "comment": null, "summary": "Performance is a critical quality attribute in software development, yet the\nimpact of method-level code changes on performance evolution remains poorly\nunderstood. While developers often make intuitive assumptions about which types\nof modifications are likely to cause performance regressions or improvements,\nthese beliefs lack empirical validation at a fine-grained level. We conducted a\nlarge-scale empirical study analyzing performance evolution in 15 mature\nopen-source Java projects hosted on GitHub. Our analysis encompassed 739\ncommits containing 1,499 method-level code changes, using Java Microbenchmark\nHarness (JMH) for precise performance measurement and rigorous statistical\nanalysis to quantify both the significance and magnitude of performance\nvariations. We employed bytecode instrumentation to capture method-specific\nexecution metrics and systematically analyzed four key aspects: temporal\nperformance patterns, code change type correlations, developer and complexity\nfactors, and domain-size interactions. Our findings reveal that 32.7% of\nmethod-level changes result in measurable performance impacts, with regressions\noccurring 1.3 times more frequently than improvements. Contrary to conventional\nwisdom, we found no significant differences in performance impact distributions\nacross code change categories, challenging risk-stratified development\nstrategies. Algorithmic changes demonstrate the highest improvement potential\nbut carry substantial regression risk. Senior developers produce more stable\nchanges with fewer extreme variations, while code complexity correlates with\nincreased regression likelihood. Domain-size interactions reveal significant\npatterns, with web server + small projects exhibiting the highest performance\ninstability. Our study provides empirical evidence for integrating automated\nperformance testing into continuous integration pipelines.", "AI": {"tldr": "\u8be5\u7814\u7a76\u901a\u8fc7\u5927\u89c4\u6a21\u5b9e\u8bc1\u5206\u6790\uff0c\u63a2\u8ba8\u4e86\u65b9\u6cd5\u7ea7\u4ee3\u7801\u53d8\u66f4\u5bf9\u6027\u80fd\u6f14\u5316\u7684\u5f71\u54cd\uff0c\u53d1\u73b032.7%\u7684\u53d8\u66f4\u5bf9\u6027\u80fd\u6709\u663e\u8457\u5f71\u54cd\uff0c\u4e14\u6027\u80fd\u9000\u5316\u6bd4\u6539\u8fdb\u66f4\u5e38\u89c1\u3002\u7814\u7a76\u6311\u6218\u4e86\u4f20\u7edf\u89c2\u5ff5\uff0c\u5e76\u63d0\u51fa\u4e86\u81ea\u52a8\u5316\u6027\u80fd\u6d4b\u8bd5\u7684\u91cd\u8981\u6027\u3002", "motivation": "\u6027\u80fd\u662f\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u5173\u952e\u8d28\u91cf\u5c5e\u6027\uff0c\u4f46\u65b9\u6cd5\u7ea7\u4ee3\u7801\u53d8\u66f4\u5bf9\u6027\u80fd\u6f14\u5316\u7684\u5f71\u54cd\u7f3a\u4e4f\u7ec6\u7c92\u5ea6\u7684\u5b9e\u8bc1\u7814\u7a76\u3002", "method": "\u5206\u6790\u4e8615\u4e2a\u6210\u719f\u5f00\u6e90Java\u9879\u76ee\u7684739\u4e2a\u63d0\u4ea4\u4e2d\u76841,499\u4e2a\u65b9\u6cd5\u7ea7\u53d8\u66f4\uff0c\u4f7f\u7528JMH\u8fdb\u884c\u6027\u80fd\u6d4b\u91cf\u548c\u7edf\u8ba1\u91cf\u5316\uff0c\u5e76\u901a\u8fc7\u5b57\u8282\u7801\u63d2\u6869\u6355\u83b7\u65b9\u6cd5\u6267\u884c\u6307\u6807\u3002", "result": "32.7%\u7684\u53d8\u66f4\u5bf9\u6027\u80fd\u6709\u663e\u8457\u5f71\u54cd\uff0c\u6027\u80fd\u9000\u5316\u6bd4\u6539\u8fdb\u591a1.3\u500d\uff1b\u7b97\u6cd5\u53d8\u66f4\u7684\u6539\u8fdb\u6f5c\u529b\u6700\u5927\u4f46\u98ce\u9669\u4e5f\u9ad8\uff1b\u8d44\u6df1\u5f00\u53d1\u8005\u7684\u53d8\u66f4\u66f4\u7a33\u5b9a\u3002", "conclusion": "\u7814\u7a76\u652f\u6301\u5c06\u81ea\u52a8\u5316\u6027\u80fd\u6d4b\u8bd5\u96c6\u6210\u5230\u6301\u7eed\u96c6\u6210\u6d41\u7a0b\u4e2d\uff0c\u5e76\u6311\u6218\u4e86\u4f20\u7edf\u7684\u98ce\u9669\u5206\u5c42\u5f00\u53d1\u7b56\u7565\u3002"}}
{"id": "2508.07169", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.07169", "abs": "https://arxiv.org/abs/2508.07169", "authors": ["Burak Yeti\u015ftiren", "Hong Jin Kang", "Miryung Kim"], "title": "From Noise to Knowledge: Interactive Summaries for Developer Alerts", "comment": null, "summary": "Programmers using bug-finding tools often review their reported warnings one\nby one. Based on the insight that identifying recurring themes and\nrelationships can enhance the cognitive process of sensemaking, we propose\nCLARITY, which supports interpreting tool-generated warnings through\ninteractive inquiry. CLARITY derives summary rules for custom grouping of\nrelated warnings with active feedback. As users mark warnings as interesting or\nuninteresting, CLARITY's rule inference algorithm surfaces common symptoms,\nhighlighting structural similarities in containment, subtyping, invoked\nmethods, accessed fields, and expressions.\n  We demonstrate CLARITY on Infer and SpotBugs warnings across two mature Java\nprojects. In a within-subject user study with 14 participants, users\narticulated root causes for similar uninteresting warnings faster and with more\nconfidence using CLARITY. We observed significant individual variation in\ndesired grouping, reinforcing the need for customizable sensemaking. Simulation\nshows that with rule-level feedback, only 11.8 interactions are needed on\naverage to align all inferred rules with a simulated user's labels (vs. 17.8\nwithout). Our evaluation suggests that CLARITY's active learning-based\nsummarization enhances interactive warning sensemaking.", "AI": {"tldr": "CLARITY\u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u5de5\u5177\uff0c\u901a\u8fc7\u603b\u7ed3\u89c4\u5219\u548c\u4e3b\u52a8\u53cd\u9988\u5e2e\u52a9\u7a0b\u5e8f\u5458\u66f4\u9ad8\u6548\u5730\u7406\u89e3\u548c\u5206\u7c7b\u9759\u6001\u5206\u6790\u5de5\u5177\u751f\u6210\u7684\u8b66\u544a\u3002", "motivation": "\u7a0b\u5e8f\u5458\u901a\u5e38\u9700\u8981\u9010\u6761\u68c0\u67e5\u9759\u6001\u5206\u6790\u5de5\u5177\u751f\u6210\u7684\u8b66\u544a\uff0c\u800c\u8bc6\u522b\u91cd\u590d\u4e3b\u9898\u548c\u5173\u7cfb\u53ef\u4ee5\u63d0\u5347\u7406\u89e3\u6548\u7387\u3002", "method": "CLARITY\u901a\u8fc7\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u89c4\u5219\u63a8\u65ad\u7b97\u6cd5\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u5206\u7ec4\u548c\u4e3b\u52a8\u53cd\u9988\uff0c\u5e2e\u52a9\u7528\u6237\u6807\u8bb0\u8b66\u544a\u5e76\u53d1\u73b0\u5171\u540c\u6a21\u5f0f\u3002", "result": "\u5728\u7528\u6237\u7814\u7a76\u4e2d\uff0cCLARITY\u663e\u8457\u63d0\u5347\u4e86\u7528\u6237\u5bf9\u8b66\u544a\u6839\u56e0\u7684\u7406\u89e3\u901f\u5ea6\u548c\u4fe1\u5fc3\uff0c\u4e14\u4e2a\u6027\u5316\u5206\u7ec4\u9700\u6c42\u660e\u663e\u3002\u6a21\u62df\u5b9e\u9a8c\u663e\u793a\uff0c\u4e3b\u52a8\u53cd\u9988\u51cf\u5c11\u4e86\u89c4\u5219\u5bf9\u9f50\u6240\u9700\u7684\u4ea4\u4e92\u6b21\u6570\u3002", "conclusion": "CLARITY\u901a\u8fc7\u4e3b\u52a8\u5b66\u4e60\u548c\u603b\u7ed3\u89c4\u5219\uff0c\u6709\u6548\u63d0\u5347\u4e86\u8b66\u544a\u7406\u89e3\u7684\u4ea4\u4e92\u6027\u548c\u6548\u7387\u3002"}}
{"id": "2508.07180", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.07180", "abs": "https://arxiv.org/abs/2508.07180", "authors": ["Zhe Zhang", "Runlin Liu", "Aishan Liu", "Xingyu Liu", "Xiang Gao", "Hailong Sun"], "title": "Dynamic Benchmark Construction for Evaluating Large Language Models on Real-World Codes", "comment": null, "summary": "As large language models LLMs) become increasingly integrated into software\ndevelopment workflows, rigorously evaluating their performance on complex,\nreal-world code generation tasks has become essential. However, existing\nbenchmarks often suffer from data contamination and limited test rigor,\nconstraining their ability to reveal model failures effectively. To address\nthese, we present CODE2BENCH, a end-to-end pipeline for dynamically\nconstructing robust and contamination-resistant benchmarks from real-world\nGitHub repositories. Specifically, CODE2BENCH introduces three key innovations:\n(1) Automated Dynamism, achieved through periodic ingestion of recent code to\nminimize training data contamination; (2) Scope Graph-based dependency\nanalysis, which enables structured classification of functions into benchmark\ninstances with controlled dependency levels (distinguishing between\nSelf-Contained (SC) tasks for cross-language evaluation and Weakly\nSelf-Contained (WSC) tasks involving permitted library usage); and (3)\nProperty-Based Testing (PBT) for the automated synthesis of rigorous test\nsuites to enable thorough functional verification. Using this pipeline, we\nconstruct CODE2BENCH-2505, the first benchmark derived from 880 recent Python\nprojects spanning diverse domains, comprising 1,163 code generation tasks with\n100% average branch coverage on ground-truth implementations. Extensive\nevaluation of 16 LLMs using CODE2BENCH-2505 reveals that models consistently\nstruggle with SC tasks requiring complex, non-standard logic and cross-language\ntransfer, while showing relatively stronger performance on WSC tasks in Python.\nOur work introduces a contamination-resistant, language-agnostic methodology\nfor dynamic benchmark construction, offering a principled foundation for the\ncomprehensive and realistic evaluation of LLMs on real-world software\ndevelopment tasks.", "AI": {"tldr": "CODE2BENCH\u662f\u4e00\u4e2a\u52a8\u6001\u6784\u5efa\u4ee3\u7801\u751f\u6210\u57fa\u51c6\u7684\u7aef\u5230\u7aef\u7ba1\u9053\uff0c\u89e3\u51b3\u4e86\u73b0\u6709\u57fa\u51c6\u7684\u6570\u636e\u6c61\u67d3\u548c\u6d4b\u8bd5\u4e0d\u8db3\u95ee\u9898\uff0c\u5e76\u901a\u8fc7\u5b9e\u9a8c\u63ed\u793a\u4e86LLM\u5728\u590d\u6742\u4efb\u52a1\u4e2d\u7684\u8868\u73b0\u5dee\u5f02\u3002", "motivation": "\u968f\u7740LLM\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u5e7f\u6cdb\u5e94\u7528\uff0c\u73b0\u6709\u57fa\u51c6\u5b58\u5728\u6570\u636e\u6c61\u67d3\u548c\u6d4b\u8bd5\u4e0d\u8db3\u7684\u95ee\u9898\uff0c\u4e9f\u9700\u4e00\u79cd\u66f4\u53ef\u9760\u7684\u8bc4\u4f30\u65b9\u6cd5\u3002", "method": "CODE2BENCH\u901a\u8fc7\u81ea\u52a8\u52a8\u6001\u66f4\u65b0\u3001\u4f9d\u8d56\u5206\u6790\u548c\u5c5e\u6027\u6d4b\u8bd5\uff0c\u6784\u5efa\u4e86\u6c61\u67d3\u62b5\u6297\u7684\u57fa\u51c6CODE2BENCH-2505\uff0c\u5305\u542b1,163\u4e2a\u4efb\u52a1\u3002", "result": "\u8bc4\u4f3016\u4e2aLLM\u540e\u53d1\u73b0\uff0c\u6a21\u578b\u5728\u9700\u8981\u590d\u6742\u903b\u8f91\u7684\u8de8\u8bed\u8a00\u4efb\u52a1\uff08SC\uff09\u4e0a\u8868\u73b0\u8f83\u5dee\uff0c\u800c\u5728\u5141\u8bb8\u5e93\u4f7f\u7528\u7684Python\u4efb\u52a1\uff08WSC\uff09\u4e0a\u8868\u73b0\u8f83\u597d\u3002", "conclusion": "CODE2BENCH\u63d0\u4f9b\u4e86\u4e00\u79cd\u52a8\u6001\u3001\u8bed\u8a00\u65e0\u5173\u7684\u57fa\u51c6\u6784\u5efa\u65b9\u6cd5\uff0c\u4e3aLLM\u5728\u771f\u5b9e\u8f6f\u4ef6\u5f00\u53d1\u4efb\u52a1\u4e2d\u7684\u8bc4\u4f30\u63d0\u4f9b\u4e86\u53ef\u9760\u57fa\u7840\u3002"}}
{"id": "2508.07198", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.07198", "abs": "https://arxiv.org/abs/2508.07198", "authors": ["Burak Yeti\u015ftiren", "Hong Jin Kang", "Miryung Kim"], "title": "TraceLens: Question-Driven Debugging for Taint Flow Understanding", "comment": null, "summary": "Taint analysis is a security analysis technique used to track the flow of\npotentially dangerous data through an application and its dependent libraries.\nInvestigating why certain unexpected flows appear and why expected flows are\nmissing is an important sensemaking process during end-user taint analysis.\nExisting taint analysis tools often do not provide this end-user debugging\ncapability, where developers can ask why, why-not, and what-if questions about\ndataflows and reason about the impact of configuring sources and sinks, and\nmodels of 3rd-party libraries that abstract permissible and impermissible data\nflows. Furthermore, a tree-view or a list-view used in existing\ntaint-analyzer's visualization makes it difficult to reason about the global\nimpact on connectivity between multiple sources and sinks.\n  Inspired by the insight that sensemaking tool-generated results can be\nsignificantly improved by a QA inquiry process, we propose TraceLens, a first\nend-user question-answer style debugging interface for taint analysis. It\nenables a user to ask why, why-not, and what-if questions to investigate the\nexistence of suspicious flows, the non-existence of expected flows, and the\nglobal impact of third-party library models. TraceLens performs speculative\nwhat-if analysis, to help a user in debugging how different connectivity\nassumptions affect overall results. A user study with 12 participants shows\nthat participants using TraceLens achieved 21% higher accuracy on average,\ncompared to CodeQL. They also reported a 45% reduction in mental demand\n(NASA-TLX) and rated higher confidence in identifying relevant flows using\nTraceLens.", "AI": {"tldr": "TraceLens\u662f\u4e00\u79cd\u9762\u5411\u7ec8\u7aef\u7528\u6237\u7684\u95ee\u7b54\u5f0f\u6c61\u70b9\u5206\u6790\u8c03\u8bd5\u5de5\u5177\uff0c\u901a\u8fc7\u652f\u6301\u7528\u6237\u63d0\u51fa\u201c\u4e3a\u4ec0\u4e48\u201d\u3001\u201c\u4e3a\u4ec0\u4e48\u4e0d\u201d\u548c\u201c\u5047\u8bbe\u201d\u95ee\u9898\uff0c\u663e\u8457\u63d0\u5347\u4e86\u8c03\u8bd5\u6548\u7387\u548c\u51c6\u786e\u6027\u3002", "motivation": "\u73b0\u6709\u6c61\u70b9\u5206\u6790\u5de5\u5177\u7f3a\u4e4f\u5bf9\u7ec8\u7aef\u7528\u6237\u8c03\u8bd5\u7684\u652f\u6301\uff0c\u65e0\u6cd5\u56de\u7b54\u5173\u4e8e\u6570\u636e\u6d41\u7684\u95ee\u9898\uff0c\u4e14\u53ef\u89c6\u5316\u65b9\u5f0f\u96be\u4ee5\u5168\u5c40\u5206\u6790\u591a\u6e90\u548c\u6c47\u70b9\u7684\u8fde\u63a5\u6027\u3002", "method": "\u63d0\u51faTraceLens\uff0c\u4e00\u4e2a\u95ee\u7b54\u5f0f\u8c03\u8bd5\u754c\u9762\uff0c\u652f\u6301\u7528\u6237\u63d0\u95ee\u5e76\u6267\u884c\u5047\u8bbe\u6027\u5206\u6790\uff0c\u4ee5\u7406\u89e3\u6570\u636e\u6d41\u548c\u7b2c\u4e09\u65b9\u5e93\u6a21\u578b\u7684\u5f71\u54cd\u3002", "result": "\u7528\u6237\u7814\u7a76\u8868\u660e\uff0cTraceLens\u7528\u6237\u6bd4CodeQL\u7528\u6237\u5e73\u5747\u51c6\u786e\u7387\u9ad821%\uff0c\u5fc3\u7406\u8d1f\u62c5\u51cf\u5c1145%\uff0c\u4e14\u5bf9\u8bc6\u522b\u76f8\u5173\u6570\u636e\u6d41\u7684\u4fe1\u5fc3\u66f4\u9ad8\u3002", "conclusion": "TraceLens\u901a\u8fc7\u95ee\u7b54\u5f0f\u4ea4\u4e92\u548c\u5047\u8bbe\u5206\u6790\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6c61\u70b9\u5206\u6790\u7684\u8c03\u8bd5\u6548\u7387\u548c\u7528\u6237\u4f53\u9a8c\u3002"}}
{"id": "2508.07371", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.07371", "abs": "https://arxiv.org/abs/2508.07371", "authors": ["Yi Zhong", "Hongchao Liu", "Di ZHao"], "title": "AutoAssert 1: A LoRA Fine-Tuned LLM Model for Efficient Automated Assertion Generation", "comment": "16pages,6figures", "summary": "As the complexity of software systems continues to increase, the demand for\nautomated testing and maintenance tools is growing exponentially. To meet this\nurgent need, we propose a new assertion generation method based on Hardware\nDescription Language (HDL). This method combines a lightweight,\nparameter-adjustable large language model (LLM) with the Unsloth platform to\nautomatically generate test cases, thereby significantly reducing training\ncosts without sacrificing accuracy or generalization performance. Empirical\nevaluation shows that our method can efficiently generate assertions that\nstrictly conform to the hardware logic. This framework provides a robust and\nflexible solution to modern software testing and maintenance challenges.\nhttps://github.com/liusu-orange/AutoAssert-1 and\nhttps://gitee.com/OpenBPU/auto-assert1 are the locations of the source code.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00\uff08HDL\uff09\u7684\u65ad\u8a00\u751f\u6210\u65b9\u6cd5\uff0c\u7ed3\u5408\u8f7b\u91cf\u7ea7\u53ef\u8c03\u53c2\u6570\u7684\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u548cUnsloth\u5e73\u53f0\uff0c\u81ea\u52a8\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\uff0c\u663e\u8457\u964d\u4f4e\u8bad\u7ec3\u6210\u672c\u4e14\u4e0d\u727a\u7272\u51c6\u786e\u6027\u3002", "motivation": "\u968f\u7740\u8f6f\u4ef6\u7cfb\u7edf\u590d\u6742\u6027\u589e\u52a0\uff0c\u5bf9\u81ea\u52a8\u5316\u6d4b\u8bd5\u548c\u7ef4\u62a4\u5de5\u5177\u7684\u9700\u6c42\u6025\u5267\u589e\u957f\u3002", "method": "\u7ed3\u5408\u8f7b\u91cf\u7ea7\u53ef\u8c03\u53c2\u6570LLM\u4e0eUnsloth\u5e73\u53f0\uff0c\u81ea\u52a8\u751f\u6210\u7b26\u5408\u786c\u4ef6\u903b\u8f91\u7684\u65ad\u8a00\u3002", "result": "\u5b9e\u8bc1\u8bc4\u4f30\u8868\u660e\uff0c\u8be5\u65b9\u6cd5\u80fd\u9ad8\u6548\u751f\u6210\u4e25\u683c\u7b26\u5408\u786c\u4ef6\u903b\u8f91\u7684\u65ad\u8a00\u3002", "conclusion": "\u8be5\u6846\u67b6\u4e3a\u73b0\u4ee3\u8f6f\u4ef6\u6d4b\u8bd5\u548c\u7ef4\u62a4\u63d0\u4f9b\u4e86\u7a33\u5065\u7075\u6d3b\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2508.07486", "categories": ["cs.SE", "cs.AI", "cs.CV"], "pdf": "https://arxiv.org/pdf/2508.07486", "abs": "https://arxiv.org/abs/2508.07486", "authors": ["Morteza Ziabakhsh", "Kiyan Rezaee", "Sadegh Eskandari", "Seyed Amir Hossein Tabatabaei", "Mohammad M. Ghassemi"], "title": "Extracting Overlapping Microservices from Monolithic Code via Deep Semantic Embeddings and Graph Neural Network-Based Soft Clustering", "comment": null, "summary": "Modern software systems are increasingly shifting from monolithic\narchitectures to microservices to enhance scalability, maintainability, and\ndeployment flexibility. Existing microservice extraction methods typically rely\non hard clustering, assigning each software component to a single microservice.\nThis approach often increases inter-service coupling and reduces intra-service\ncohesion. We propose Mo2oM (Monolithic to Overlapping Microservices), a\nframework that formulates microservice extraction as a soft clustering problem,\nallowing components to belong probabilistically to multiple microservices. This\napproach is inspired by expert-driven decompositions, where practitioners\nintentionally replicate certain software components across services to reduce\ncommunication overhead. Mo2oM combines deep semantic embeddings with structural\ndependencies extracted from methodcall graphs to capture both functional and\narchitectural relationships. A graph neural network-based soft clustering\nalgorithm then generates the final set of microservices. We evaluate Mo2oM on\nfour open-source monolithic benchmarks and compare it against eight\nstate-of-the-art baselines. Our results demonstrate that Mo2oM achieves\nimprovements of up to 40.97% in structural modularity (balancing cohesion and\ncoupling), 58% in inter-service call percentage (communication overhead),\n26.16% in interface number (modularity and decoupling), and 38.96% in\nnon-extreme distribution (service size balance) across all benchmarks.", "AI": {"tldr": "Mo2oM\u6846\u67b6\u901a\u8fc7\u8f6f\u805a\u7c7b\u65b9\u6cd5\u5c06\u5355\u4f53\u5e94\u7528\u5206\u89e3\u4e3a\u5fae\u670d\u52a1\uff0c\u663e\u8457\u63d0\u5347\u4e86\u7ed3\u6784\u6a21\u5757\u5316\u548c\u901a\u4fe1\u6548\u7387\u3002", "motivation": "\u73b0\u6709\u5fae\u670d\u52a1\u63d0\u53d6\u65b9\u6cd5\u91c7\u7528\u786c\u805a\u7c7b\uff0c\u5bfc\u81f4\u670d\u52a1\u95f4\u8026\u5408\u589e\u52a0\u548c\u670d\u52a1\u5185\u5185\u805a\u964d\u4f4e\u3002", "method": "\u7ed3\u5408\u6df1\u5ea6\u8bed\u4e49\u5d4c\u5165\u548c\u7ed3\u6784\u4f9d\u8d56\uff0c\u4f7f\u7528\u56fe\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u8f6f\u805a\u7c7b\u3002", "result": "\u5728\u56db\u4e2a\u5f00\u6e90\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0cMo2oM\u5728\u7ed3\u6784\u6a21\u5757\u5316\u3001\u901a\u4fe1\u5f00\u9500\u7b49\u65b9\u9762\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u3002", "conclusion": "Mo2oM\u901a\u8fc7\u8f6f\u805a\u7c7b\u65b9\u6cd5\u6709\u6548\u89e3\u51b3\u4e86\u5fae\u670d\u52a1\u5206\u89e3\u4e2d\u7684\u8026\u5408\u548c\u5185\u805a\u95ee\u9898\u3002"}}
{"id": "2508.07881", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.07881", "abs": "https://arxiv.org/abs/2508.07881", "authors": ["Henna Tammia", "Benjamin K\u00e4m\u00e4", "Ella Peltonen"], "title": "Adopting Road-Weather Open Data in Route Recommendation Engine", "comment": null, "summary": "Digitraffic, Finland's open road data interface, provides access to\nnationwide road sensors with more than 2,300 real-time attributes from 1,814\nstations. However, efficiently utilizing such a versatile data API for a\npractical application requires a deeper understanding of the data qualities,\npreprocessing phases, and machine learning tools. This paper discusses the\nchallenges of large-scale road weather and traffic data. We go through the\nroad-weather-related attributes from DigiTraffic as a practical example of\nprocesses required to work with such a dataset. In addition, we provide a\nmethodology for efficient data utilization for the target application, a\npersonalized road recommendation engine based on a simple routing application.\nWe validate our solution based on real-world data, showing we can efficiently\nidentify and recommend personalized routes for three different driver profiles.", "AI": {"tldr": "\u672c\u6587\u63a2\u8ba8\u4e86\u5982\u4f55\u9ad8\u6548\u5229\u7528\u82ac\u5170DigiTraffic\u63d0\u4f9b\u7684\u5168\u56fd\u9053\u8def\u4f20\u611f\u5668\u6570\u636e\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u4e2a\u6027\u5316\u8def\u7ebf\u63a8\u8350\u5f15\u64ce\u65b9\u6cd5\u3002", "motivation": "DigiTraffic\u63d0\u4f9b\u4e86\u5927\u91cf\u5b9e\u65f6\u9053\u8def\u6570\u636e\uff0c\u4f46\u5982\u4f55\u9ad8\u6548\u5229\u7528\u8fd9\u4e9b\u6570\u636e\u5e76\u5e94\u7528\u4e8e\u5b9e\u9645\u573a\u666f\uff08\u5982\u4e2a\u6027\u5316\u8def\u7ebf\u63a8\u8350\uff09\u4ecd\u5177\u6311\u6218\u6027\u3002", "method": "\u901a\u8fc7\u5206\u6790\u9053\u8def\u5929\u6c14\u76f8\u5173\u5c5e\u6027\uff0c\u63d0\u51fa\u6570\u636e\u9884\u5904\u7406\u548c\u673a\u5668\u5b66\u4e60\u5de5\u5177\u7684\u65b9\u6cd5\uff0c\u5e76\u6784\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u8def\u7531\u5e94\u7528\u3002", "result": "\u57fa\u4e8e\u771f\u5b9e\u6570\u636e\u9a8c\u8bc1\uff0c\u80fd\u591f\u4e3a\u4e09\u79cd\u4e0d\u540c\u9a7e\u9a76\u8005\u914d\u7f6e\u6587\u4ef6\u9ad8\u6548\u8bc6\u522b\u548c\u63a8\u8350\u4e2a\u6027\u5316\u8def\u7ebf\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u4e3a\u5927\u89c4\u6a21\u9053\u8def\u6570\u636e\u7684\u5b9e\u9645\u5e94\u7528\u63d0\u4f9b\u4e86\u6709\u6548\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2508.07935", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.07935", "abs": "https://arxiv.org/abs/2508.07935", "authors": ["Jingwen Zhou", "Jieshan Chen", "Qinghua Lu", "Dehai Zhao", "Liming Zhu"], "title": "SHIELDA: Structured Handling of Exceptions in LLM-Driven Agentic Workflows", "comment": null, "summary": "Large Language Model (LLM) agentic systems are software systems powered by\nLLMs that autonomously reason, plan, and execute multi-step workflows to\nachieve human goals, rather than merely executing predefined steps. During\nexecution, these workflows frequently encounter exceptions. Existing exception\nhandling solutions often treat exceptions superficially, failing to trace\nexecution-phase exceptions to their reasoning-phase root causes. Furthermore,\ntheir recovery logic is brittle, lacking structured escalation pathways when\ninitial attempts fail. To tackle these challenges, we first present a\ncomprehensive taxonomy of 36 exception types across 12 agent artifacts.\nBuilding on this, we propose SHIELDA (Structured Handling of Exceptions in\nLLM-Driven Agentic Workflows), a modular runtime exception handling framework\nfor LLM agentic workflows. SHIELDA uses an exception classifier to select a\npredefined exception handling pattern from a handling pattern registry. These\npatterns are then executed via a structured handling executor, comprising local\nhandling, flow control, and state recovery, to enable phase-aware recovery by\nlinking exceptions to their root causes and facilitating composable strategies.\nWe validate SHIELDA's effectiveness through a case study on the AutoPR agent,\ndemonstrating effective, cross-phase recovery from a reasoning-induced\nexception.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51faSHIELDA\u6846\u67b6\uff0c\u7528\u4e8e\u7ed3\u6784\u5316\u5904\u7406LLM\u9a71\u52a8\u7684\u5de5\u4f5c\u6d41\u4e2d\u7684\u5f02\u5e38\uff0c\u901a\u8fc7\u5206\u7c7b\u548c\u6a21\u5757\u5316\u7b56\u7565\u5b9e\u73b0\u8de8\u9636\u6bb5\u6062\u590d\u3002", "motivation": "\u73b0\u6709\u5f02\u5e38\u5904\u7406\u65b9\u6cd5\u5bf9\u6267\u884c\u9636\u6bb5\u7684\u5f02\u5e38\u5904\u7406\u8f83\u6d45\uff0c\u7f3a\u4e4f\u5bf9\u63a8\u7406\u9636\u6bb5\u6839\u672c\u539f\u56e0\u7684\u8ffd\u8e2a\uff0c\u4e14\u6062\u590d\u903b\u8f91\u8106\u5f31\u3002", "method": "\u63d0\u51faSHIELDA\u6846\u67b6\uff0c\u5305\u62ec\u5f02\u5e38\u5206\u7c7b\u5668\u3001\u5904\u7406\u6a21\u5f0f\u6ce8\u518c\u8868\u548c\u7ed3\u6784\u5316\u6267\u884c\u5668\uff0c\u5b9e\u73b0\u9636\u6bb5\u611f\u77e5\u7684\u6062\u590d\u3002", "result": "\u901a\u8fc7AutoPR\u4ee3\u7406\u7684\u6848\u4f8b\u7814\u7a76\u9a8c\u8bc1\u4e86SHIELDA\u7684\u6709\u6548\u6027\uff0c\u6210\u529f\u4ece\u63a8\u7406\u5f15\u53d1\u7684\u5f02\u5e38\u4e2d\u6062\u590d\u3002", "conclusion": "SHIELDA\u4e3aLLM\u4ee3\u7406\u5de5\u4f5c\u6d41\u63d0\u4f9b\u4e86\u6a21\u5757\u5316\u3001\u7ed3\u6784\u5316\u7684\u5f02\u5e38\u5904\u7406\u65b9\u6848\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6062\u590d\u80fd\u529b\u3002"}}
{"id": "2508.07966", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.07966", "abs": "https://arxiv.org/abs/2508.07966", "authors": ["Philipp Eibl", "Sadra Sabouri", "Souti Chattopadhyay"], "title": "Exploring the Challenges and Opportunities of AI-assisted Codebase Generation", "comment": null, "summary": "Recent AI code assistants have significantly improved their ability to\nprocess more complex contexts and generate entire codebases based on a textual\ndescription, compared to the popular snippet-level generation. These codebase\nAI assistants (CBAs) can also extend or adapt codebases, allowing users to\nfocus on higher-level design and deployment decisions. While prior work has\nextensively studied the impact of snippet-level code generation, this new class\nof codebase generation models is relatively unexplored. Despite initial\nanecdotal reports of excitement about these agents, they remain less frequently\nadopted compared to snippet-level code assistants. To utilize CBAs better, we\nneed to understand how developers interact with CBAs, and how and why CBAs fall\nshort of developers' needs. In this paper, we explored these gaps through a\ncounterbalanced user study and interview with (n = 16) students and developers\nworking on coding tasks with CBAs. We found that participants varied the\ninformation in their prompts, like problem description (48% of prompts),\nrequired functionality (98% of prompts), code structure (48% of prompts), and\ntheir prompt writing process. Despite various strategies, the overall\nsatisfaction score with generated codebases remained low (mean = 2.8, median =\n3, on a scale of one to five). Participants mentioned functionality as the most\ncommon factor for dissatisfaction (77% of instances), alongside poor code\nquality (42% of instances) and communication issues (25% of instances). We\ndelve deeper into participants' dissatisfaction to identify six underlying\nchallenges that participants faced when using CBAs, and extracted five barriers\nto incorporating CBAs into their workflows. Finally, we surveyed 21 commercial\nCBAs to compare their capabilities with participant challenges and present\ndesign opportunities for more efficient and useful CBAs.", "AI": {"tldr": "\u8bba\u6587\u7814\u7a76\u4e86\u4ee3\u7801\u5e93AI\u52a9\u624b\uff08CBAs\uff09\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u53d1\u73b0\u5f00\u53d1\u8005\u5bf9\u5176\u751f\u6210\u4ee3\u7801\u7684\u6ee1\u610f\u5ea6\u8f83\u4f4e\uff0c\u4e3b\u8981\u95ee\u9898\u5305\u62ec\u529f\u80fd\u4e0d\u8db3\u3001\u4ee3\u7801\u8d28\u91cf\u5dee\u548c\u6c9f\u901a\u95ee\u9898\u3002", "motivation": "\u63a2\u7d22\u5f00\u53d1\u8005\u5982\u4f55\u4e0eCBAs\u4e92\u52a8\uff0c\u4ee5\u53caCBAs\u672a\u80fd\u6ee1\u8db3\u5f00\u53d1\u8005\u9700\u6c42\u7684\u539f\u56e0\u3002", "method": "\u901a\u8fc7\u7528\u6237\u7814\u7a76\uff08n=16\uff09\u548c\u8bbf\u8c08\uff0c\u5206\u6790\u5f00\u53d1\u8005\u4f7f\u7528CBAs\u65f6\u7684\u884c\u4e3a\u548c\u53cd\u9988\u3002", "result": "\u5f00\u53d1\u8005\u5bf9\u751f\u6210\u4ee3\u7801\u7684\u6ee1\u610f\u5ea6\u4f4e\uff08\u5747\u52062.8/5\uff09\uff0c\u4e3b\u8981\u95ee\u9898\u4e3a\u529f\u80fd\u4e0d\u8db3\uff0877%\uff09\u3001\u4ee3\u7801\u8d28\u91cf\u5dee\uff0842%\uff09\u548c\u6c9f\u901a\u95ee\u9898\uff0825%\uff09\u3002", "conclusion": "\u63d0\u51fa\u4e86\u516d\u9879\u6311\u6218\u548c\u4e94\u9879\u969c\u788d\uff0c\u5e76\u6bd4\u8f83\u4e8621\u6b3e\u5546\u4e1aCBAs\u7684\u80fd\u529b\uff0c\u4e3a\u6539\u8fdbCBAs\u63d0\u4f9b\u4e86\u8bbe\u8ba1\u673a\u4f1a\u3002"}}
{"id": "2508.08171", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.08171", "abs": "https://arxiv.org/abs/2508.08171", "authors": ["Pedro Orvalho", "Marta Kwiatkowska"], "title": "PyVeritas: On Verifying Python via LLM-Based Transpilation and Bounded Model Checking for C", "comment": "14 pages, 6 tables, 1 figure", "summary": "Python has become the dominant language for general-purpose programming, yet\nit lacks robust tools for formal verification. In contrast, programmers working\nin languages such as C benefit from mature model checkers, for example CBMC,\nwhich enable exhaustive symbolic reasoning and fault localisation. The inherent\ncomplexity of Python, coupled with the verbosity and low-level nature of\nexisting transpilers (e.g., Cython), have historically limited the\napplicability of formal verification to Python programs.\n  In this paper, we propose PyVeritas, a novel framework that leverages Large\nLanguage Models (LLMs) for high-level transpilation from Python to C, followed\nby bounded model checking and MaxSAT-based fault localisation in the generated\nC code. PyVeritas enables verification and bug localisation for Python code\nusing existing model checking tools for C. Our empirical evaluation on two\nPython benchmarks demonstrates that LLM-based transpilation can achieve a high\ndegree of accuracy, up to 80--90% for some LLMs, enabling effective development\nenvironment that supports assertion-based verification and interpretable fault\ndiagnosis for small yet non-trivial Python programs.", "AI": {"tldr": "PyVeritas\u5229\u7528LLMs\u5c06Python\u4ee3\u7801\u8f6c\u8bd1\u4e3aC\u8bed\u8a00\uff0c\u7ed3\u5408\u6a21\u578b\u68c0\u67e5\u548cMaxSAT\u6280\u672f\uff0c\u5b9e\u73b0Python\u7a0b\u5e8f\u7684\u9a8c\u8bc1\u548c\u9519\u8bef\u5b9a\u4f4d\u3002", "motivation": "Python\u7f3a\u4e4f\u6210\u719f\u7684\u9a8c\u8bc1\u5de5\u5177\uff0c\u800cC\u8bed\u8a00\u5df2\u6709\u6210\u719f\u5de5\u5177\uff08\u5982CBMC\uff09\u3002PyVeritas\u65e8\u5728\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\u3002", "method": "\u901a\u8fc7LLMs\u5c06Python\u8f6c\u8bd1\u4e3aC\uff0c\u518d\u5229\u7528C\u7684\u6a21\u578b\u68c0\u67e5\u5de5\u5177\u8fdb\u884c\u9a8c\u8bc1\u548c\u9519\u8bef\u5b9a\u4f4d\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0c\u67d0\u4e9bLLMs\u7684\u8f6c\u8bd1\u51c6\u786e\u7387\u53ef\u8fbe80-90%\uff0c\u652f\u6301\u5c0f\u89c4\u6a21Python\u7a0b\u5e8f\u7684\u9a8c\u8bc1\u548c\u8bca\u65ad\u3002", "conclusion": "PyVeritas\u4e3aPython\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u6709\u6548\u7684\u9a8c\u8bc1\u548c\u9519\u8bef\u5b9a\u4f4d\u65b9\u6848\u3002"}}
