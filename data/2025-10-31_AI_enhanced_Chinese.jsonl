{"id": "2510.26428", "categories": ["cs.LO", "cs.FL", "cs.PL"], "pdf": "https://arxiv.org/pdf/2510.26428", "abs": "https://arxiv.org/abs/2510.26428", "authors": ["Gregoire Maire", "Thomas Genet"], "title": "Finding Regular Herbrand Models for CHCs using Answer Set Programming", "comment": "In Proceedings HCVS 2025, arXiv:2510.25468", "summary": "We are interested in proving satisfiability of Constrained Horn Clauses\n(CHCs) over Algebraic Data Types (ADTs). We propose to prove satisfiability by\nbuilding a tree automaton recognizing the Herbrand model of the CHCs. If such\nan automaton exists then the model is said to be regular, i.e., the Herbrand\nmodel is a regular set of atoms. Kostyukov et al. have shown how to derive an\nautomaton when CVC4 finds a finite model of the CHCs. We propose an alternative\nway to build the automaton using an encoding into a SAT problem using Clingo,\nan Answer Set Programming (ASP) tool. We implemented a translation of CHCs with\nADTs into an ASP problem. Combined with Clingo, we obtain a semi-complete\nsatisfiability checker: it finds a tree automaton if a regular Herbrand model\nexists or finds a counter-example if the problem is unsatisfiable.", "AI": {"tldr": "\u63d0\u51fa\u4f7f\u7528Clingo\u5c06\u5e26\u4ee3\u6570\u6570\u636e\u7c7b\u578b\u7684\u7ea6\u675fHorn\u5b50\u53e5\u7f16\u7801\u4e3aSAT\u95ee\u9898\uff0c\u6784\u5efa\u6811\u81ea\u52a8\u673a\u6765\u8bc6\u522bHerbrand\u6a21\u578b\uff0c\u5b9e\u73b0\u534a\u5b8c\u5907\u7684\u53ef\u6ee1\u8db3\u6027\u68c0\u67e5", "motivation": "\u8bc1\u660e\u5e26\u4ee3\u6570\u6570\u636e\u7c7b\u578b\u7684\u7ea6\u675fHorn\u5b50\u53e5\u7684\u53ef\u6ee1\u8db3\u6027\uff0c\u901a\u8fc7\u6784\u5efa\u8bc6\u522bHerbrand\u6a21\u578b\u7684\u6811\u81ea\u52a8\u673a", "method": "\u5c06CHCs\u4e0eADTs\u7f16\u7801\u4e3aASP\u95ee\u9898\uff0c\u4f7f\u7528Clingo\u6c42\u89e3SAT\u95ee\u9898\u6765\u6784\u5efa\u6811\u81ea\u52a8\u673a", "result": "\u5b9e\u73b0\u4e86\u534a\u5b8c\u5907\u7684\u53ef\u6ee1\u8db3\u6027\u68c0\u67e5\u5668\uff0c\u80fd\u627e\u5230\u6b63\u5219Herbrand\u6a21\u578b\u6216\u53cd\u4f8b", "conclusion": "\u8be5\u65b9\u6cd5\u80fd\u6709\u6548\u68c0\u67e5CHCs\u7684\u53ef\u6ee1\u8db3\u6027\uff0c\u5f53\u5b58\u5728\u6b63\u5219Herbrand\u6a21\u578b\u65f6\u80fd\u627e\u5230\u81ea\u52a8\u673a\uff0c\u95ee\u9898\u4e0d\u53ef\u6ee1\u8db3\u65f6\u80fd\u627e\u5230\u53cd\u4f8b"}}
{"id": "2510.26429", "categories": ["cs.LO", "cs.PL", "cs.SC"], "pdf": "https://arxiv.org/pdf/2510.26429", "abs": "https://arxiv.org/abs/2510.26429", "authors": ["Salvador Lucas"], "title": "Semantic Properties of Computations Defined by Elementary Inference Systems", "comment": "In Proceedings HCVS 2025, arXiv:2510.25468", "summary": "We consider sets/relations/computations defined by *Elementary Inference\nSystems* I, which are obtained from Smullyan's *elementary formal systems*\nusing Gentzen's notation for inference rules, and proof trees for atoms\nP(t_1,...,t_n), where predicate P represents the considered\nset/relation/computation. A first-order theory Th(I), actually a set of\ndefinite Horn clauses, is given to I. Properties of objects defined by I are\nexpressed as first-order sentences F, which are proved true or false by\n*satisfaction* M |= F of F in a *canonical* model M of Th(I). For this reason,\nwe call F a *semantic property* of I. Since canonical models are, in general,\nincomputable, we show how to (dis)prove semantic properties by satisfiability\nin an *arbitrary* model A of Th(I). We apply these ideas to the analysis of\nproperties of programming languages and systems whose computations can be\ndescribed by means of an elementary inference system. In particular,\nrewriting-based systems.", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u4e86\u4f7f\u7528\u57fa\u672c\u63a8\u7406\u7cfb\u7edf\u5b9a\u4e49\u96c6\u5408/\u5173\u7cfb/\u8ba1\u7b97\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u4e00\u9636\u7406\u8bbaTh(I)\u548c\u89c4\u8303\u6a21\u578b\u6765\u5206\u6790\u8bed\u4e49\u5c5e\u6027\uff0c\u5e76\u5c55\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u4efb\u610f\u6a21\u578b\u6765\u8bc1\u660e\u6216\u53cd\u9a73\u8fd9\u4e9b\u5c5e\u6027\u3002", "motivation": "\u7814\u7a76\u5982\u4f55\u5206\u6790\u7531\u57fa\u672c\u63a8\u7406\u7cfb\u7edf\u5b9a\u4e49\u7684\u7f16\u7a0b\u8bed\u8a00\u548c\u7cfb\u7edf\u7684\u5c5e\u6027\uff0c\u7279\u522b\u662f\u90a3\u4e9b\u53ef\u4ee5\u901a\u8fc7\u91cd\u5199\u7cfb\u7edf\u63cf\u8ff0\u7684\u8ba1\u7b97\u3002", "method": "\u4f7f\u7528\u65af\u7a46\u5229\u5b89\u7684\u57fa\u672c\u5f62\u5f0f\u7cfb\u7edf\u6784\u5efa\u57fa\u672c\u63a8\u7406\u7cfb\u7edfI\uff0c\u5b9a\u4e49\u4e00\u9636\u7406\u8bbaTh(I)\uff0c\u901a\u8fc7\u89c4\u8303\u6a21\u578b\u6216\u4efb\u610f\u6a21\u578b\u6765\u9a8c\u8bc1\u8bed\u4e49\u5c5e\u6027F\u7684\u6ee1\u8db3\u6027\u3002", "result": "\u5c55\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u4efb\u610f\u6a21\u578bA\u6765\u8bc1\u660e\u6216\u53cd\u9a73\u8bed\u4e49\u5c5e\u6027F\uff0c\u5373\u4f7f\u89c4\u8303\u6a21\u578bM\u662f\u4e0d\u53ef\u8ba1\u7b97\u7684\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u9002\u7528\u4e8e\u5206\u6790\u7f16\u7a0b\u8bed\u8a00\u548c\u7cfb\u7edf\u7684\u5c5e\u6027\uff0c\u7279\u522b\u662f\u91cd\u5199\u7cfb\u7edf\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u5904\u7406\u4e0d\u53ef\u8ba1\u7b97\u89c4\u8303\u6a21\u578b\u7684\u5b9e\u7528\u65b9\u6cd5\u3002"}}
{"id": "2510.26430", "categories": ["cs.LO", "cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26430", "abs": "https://arxiv.org/abs/2510.26430", "authors": ["Levente Bajczi", "Mil\u00e1n Mondok", "Vince Moln\u00e1r"], "title": "Theta as a Horn Solver", "comment": "In Proceedings HCVS 2025, arXiv:2510.25468", "summary": "Theta is a verification framework that has participated in the CHC-COMP\ncompetition since 2023. While its core approach -- based on transforming\nconstrained Horn clauses (CHCs) into control-flow automata (CFAs) for analysis\n-- has remained mostly unchanged, Theta's verification techniques, design\ntrade-offs, and limitations have remained mostly unexplored in the context of\nCHCs. This paper fills that gap: we provide a detailed description of the\nalgorithms employed by Theta, highlighting the unique features that distinguish\nit from other CHC solvers. We also analyze the strengths and weaknesses of the\ntool in the context of CHC-COMP benchmarks. Notably, in the 2025 edition of the\ncompetition, Theta's performance was impacted by a configuration issue, leading\nto suboptimal results. To provide a clearer picture of Theta's actual\ncapabilities, we re-execute the tool on the competition benchmarks under\ncorrected settings and report on the resulting performance.", "AI": {"tldr": "Theta\u662f\u4e00\u4e2aCHC\u9a8c\u8bc1\u6846\u67b6\uff0c\u672c\u6587\u8be6\u7ec6\u63cf\u8ff0\u4e86\u5176\u7b97\u6cd5\u7279\u70b9\u3001\u5728CHC-COMP\u7ade\u8d5b\u4e2d\u7684\u8868\u73b0\uff0c\u5e76\u7ea0\u6b63\u4e86\u914d\u7f6e\u95ee\u9898\u540e\u7684\u91cd\u65b0\u8bc4\u4f30\u7ed3\u679c\u3002", "motivation": "\u586b\u8865Theta\u9a8c\u8bc1\u6846\u67b6\u5728CHC\u6c42\u89e3\u65b9\u9762\u7684\u6280\u672f\u7ec6\u8282\u3001\u8bbe\u8ba1\u6743\u8861\u548c\u5c40\u9650\u6027\u65b9\u9762\u7684\u7814\u7a76\u7a7a\u767d\uff0c\u7279\u522b\u662f\u5728CHC-COMP\u7ade\u8d5b\u80cc\u666f\u4e0b\u7684\u8868\u73b0\u5206\u6790\u3002", "method": "\u5c06\u7ea6\u675fHorn\u5b50\u53e5\u8f6c\u6362\u4e3a\u63a7\u5236\u6d41\u81ea\u52a8\u673a\u8fdb\u884c\u5206\u6790\uff0c\u8be6\u7ec6\u63cf\u8ff0Theta\u91c7\u7528\u7684\u7b97\u6cd5\u53ca\u5176\u533a\u522b\u4e8e\u5176\u4ed6CHC\u6c42\u89e3\u5668\u7684\u72ec\u7279\u7279\u6027\u3002", "result": "\u57282025\u5e74CHC-COMP\u7ade\u8d5b\u4e2d\uff0cTheta\u56e0\u914d\u7f6e\u95ee\u9898\u8868\u73b0\u4e0d\u4f73\uff1b\u91cd\u65b0\u5728\u4fee\u6b63\u8bbe\u7f6e\u4e0b\u6267\u884c\u7ade\u8d5b\u57fa\u51c6\u6d4b\u8bd5\uff0c\u5c55\u793a\u4e86\u5de5\u5177\u7684\u5b9e\u9645\u80fd\u529b\u3002", "conclusion": "Theta\u5728\u6b63\u786e\u914d\u7f6e\u4e0b\u5177\u6709\u5b9e\u9645\u9a8c\u8bc1\u80fd\u529b\uff0c\u672c\u6587\u63d0\u4f9b\u4e86\u5bf9\u5176\u7b97\u6cd5\u7279\u70b9\u548c\u6027\u80fd\u7684\u5168\u9762\u5206\u6790\uff0c\u6709\u52a9\u4e8e\u7406\u89e3\u8be5\u5de5\u5177\u5728CHC\u6c42\u89e3\u9886\u57df\u7684\u5b9a\u4f4d\u3002"}}
{"id": "2510.26016", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2510.26016", "abs": "https://arxiv.org/abs/2510.26016", "authors": ["Michael Arntzenius"], "title": "Fair intersection of seekable iterators", "comment": "8 pages, 2 figures, published in miniKanren 2025", "summary": "miniKanren's key semantic advance over Prolog is to implement a complete yet\nefficient search strategy, fairly interleaving execution between disjuncts.\nThis fairness is accomplished by bounding how much work is done exploring one\ndisjunct before switching to the next. We show that the same idea -- fairness\nvia bounded work -- underlies an elegant compositional approach to implementing\nworst-case optimal joins using a seekable iterator interface, suitable for\nshallow embedding in functional languages.", "AI": {"tldr": "\u8be5\u8bba\u6587\u5c55\u793a\u4e86\u901a\u8fc7\u6709\u754c\u5de5\u4f5c\u5b9e\u73b0\u516c\u5e73\u6027\u7684\u601d\u60f3\u4e0d\u4ec5\u9002\u7528\u4e8eminiKanren\u7684\u641c\u7d22\u7b56\u7565\uff0c\u4e5f\u9002\u7528\u4e8e\u5b9e\u73b0\u6700\u574f\u60c5\u51b5\u6700\u4f18\u8fde\u63a5", "motivation": "\u63a2\u7d22miniKanren\u4e2d\u901a\u8fc7\u6709\u754c\u5de5\u4f5c\u5b9e\u73b0\u516c\u5e73\u6027\u7684\u601d\u60f3\u5728\u5176\u4ed6\u9886\u57df\u7684\u5e94\u7528\u6f5c\u529b", "method": "\u4f7f\u7528\u53ef\u641c\u7d22\u8fed\u4ee3\u5668\u63a5\u53e3\u5b9e\u73b0\u6700\u574f\u60c5\u51b5\u6700\u4f18\u8fde\u63a5\uff0c\u9002\u5408\u5728\u51fd\u6570\u5f0f\u8bed\u8a00\u4e2d\u8fdb\u884c\u6d45\u5c42\u5d4c\u5165", "result": "\u8bc1\u660e\u4e86\u516c\u5e73\u6027\u901a\u8fc7\u6709\u754c\u5de5\u4f5c\u7684\u601d\u60f3\u53ef\u4ee5\u4f18\u96c5\u5730\u7ec4\u5408\u5b9e\u73b0\u6700\u574f\u60c5\u51b5\u6700\u4f18\u8fde\u63a5", "conclusion": "\u516c\u5e73\u6027\u901a\u8fc7\u6709\u754c\u5de5\u4f5c\u7684\u601d\u60f3\u5177\u6709\u5e7f\u6cdb\u9002\u7528\u6027\uff0c\u53ef\u4ee5\u7edf\u4e00miniKanren\u7684\u641c\u7d22\u7b56\u7565\u548c\u6570\u636e\u5e93\u8fde\u63a5\u7b97\u6cd5"}}
{"id": "2510.26654", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2510.26654", "abs": "https://arxiv.org/abs/2510.26654", "authors": ["Andrzej Szalas"], "title": "Bridge and Bound: A Logic-Based Framework for Abstracting (Preliminary Report)", "comment": null, "summary": "At its core, abstraction is the process of generalizing from specific\ninstances to broader concepts or models, with the primary objective of reducing\ncomplexity while preserving properties essential to the intended purpose. It is\na fundamental, often implicit, principle that structures the understanding,\ncommunication, and development of both scientific knowledge and everyday\nbeliefs. Studies on abstraction have evolved from its origins in Ancient Greek\nphilosophy through methodological approaches in psychological and philosophical\ntheories to computational frameworks.\n  Formally, abstraction can be understood as the transformation of a source\nrepresentation into an abstract representation that discards certain details\nwhile retaining desirable features. In real-world modeling and reasoning,\nabstraction is crucial, particularly when managing imperfect or incomplete\ninformation that calls for approximate representations. This paper introduces a\nnovel logic-based framework for modeling abstraction processes that goes beyond\nthe traditional entailment of necessary conditions to encompass sufficient\nconditions as well. We define approximate abstractions, study their tightest\nand exact forms, and extend the approach to layered abstractions, enabling\nhierarchical simplification of complex systems and models. The computational\ncomplexity of the related reasoning tasks is also discussed.\n  For clarity, our framework is developed within classical logic, chosen for\nits simplicity, expressiveness, and computational friendliness.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u4e2a\u65b0\u7684\u57fa\u4e8e\u903b\u8f91\u7684\u62bd\u8c61\u5efa\u6a21\u6846\u67b6\uff0c\u8d85\u8d8a\u4e86\u4f20\u7edf\u7684\u5fc5\u8981\u6761\u4ef6\u8574\u542b\uff0c\u540c\u65f6\u6db5\u76d6\u5145\u5206\u6761\u4ef6\uff0c\u5b9a\u4e49\u4e86\u8fd1\u4f3c\u62bd\u8c61\u5e76\u7814\u7a76\u4e86\u5176\u6700\u7d27\u5f62\u5f0f\u548c\u7cbe\u786e\u5f62\u5f0f\u3002", "motivation": "\u62bd\u8c61\u662f\u51cf\u5c11\u590d\u6742\u6027\u540c\u65f6\u4fdd\u7559\u5173\u952e\u5c5e\u6027\u7684\u57fa\u672c\u8fc7\u7a0b\uff0c\u4f46\u5728\u73b0\u5b9e\u4e16\u754c\u5efa\u6a21\u548c\u63a8\u7406\u4e2d\u5904\u7406\u4e0d\u5b8c\u7f8e\u6216\u4e0d\u5b8c\u6574\u4fe1\u606f\u65f6\uff0c\u4f20\u7edf\u65b9\u6cd5\u5b58\u5728\u5c40\u9650\uff0c\u9700\u8981\u66f4\u5168\u9762\u7684\u62bd\u8c61\u6846\u67b6\u3002", "method": "\u5728\u7ecf\u5178\u903b\u8f91\u4e2d\u5f00\u53d1\u4e86\u4e00\u4e2a\u903b\u8f91\u6846\u67b6\uff0c\u5b9a\u4e49\u8fd1\u4f3c\u62bd\u8c61\u3001\u7814\u7a76\u5176\u6700\u7d27\u5f62\u5f0f\u548c\u7cbe\u786e\u5f62\u5f0f\uff0c\u5e76\u6269\u5c55\u5230\u5206\u5c42\u62bd\u8c61\uff0c\u5b9e\u73b0\u590d\u6742\u7cfb\u7edf\u7684\u5c42\u6b21\u7b80\u5316\u3002", "result": "\u63d0\u51fa\u4e86\u4e00\u4e2a\u8d85\u8d8a\u4f20\u7edf\u5fc5\u8981\u6761\u4ef6\u8574\u542b\u7684\u62bd\u8c61\u5efa\u6a21\u6846\u67b6\uff0c\u80fd\u591f\u5904\u7406\u5145\u5206\u6761\u4ef6\uff0c\u652f\u6301\u5206\u5c42\u62bd\u8c61\u548c\u590d\u6742\u7cfb\u7edf\u7b80\u5316\u3002", "conclusion": "\u8be5\u903b\u8f91\u6846\u67b6\u4e3a\u62bd\u8c61\u8fc7\u7a0b\u63d0\u4f9b\u4e86\u66f4\u5168\u9762\u7684\u5efa\u6a21\u65b9\u6cd5\uff0c\u7279\u522b\u9002\u7528\u4e8e\u5904\u7406\u4e0d\u5b8c\u6574\u4fe1\u606f\u548c\u8fd1\u4f3c\u8868\u793a\u7684\u573a\u666f\uff0c\u5728\u590d\u6742\u7cfb\u7edf\u5efa\u6a21\u4e2d\u5177\u6709\u91cd\u8981\u4ef7\u503c\u3002"}}
{"id": "2510.25882", "categories": ["cs.SE", "D.2.9"], "pdf": "https://arxiv.org/pdf/2510.25882", "abs": "https://arxiv.org/abs/2510.25882", "authors": ["Wenhao Yang", "Minghui Zhou", "Daniel Izquierdo Cort\u00e1zar", "Yehui Wang"], "title": "Internal Vulnerabilities, External Threats: A Grounded Framework for Enterprise Open Source Risk Governance", "comment": null, "summary": "Enterprise engagement with open source has evolved from tactical adoption to\nstrategic deep integration, exposing them to a complex risk landscape far\nbeyond mere code. However, traditional risk management, narrowly focused on\ntechnical tools, is structurally inadequate for systemic threats like upstream\n\"silent fixes\", community conflicts, or sudden license changes, creating a\ndangerous governance blind spot. To address this governance vacuum and enable\nthe necessary shift from tactical risk management to holistic risk governance,\nwe conducted a grounded theory study with 15 practitioners to develop a\nholistic risk governance framework. Our study formalizes an analytical\nframework built on a foundational risk principle: an uncontrollable External\nThreat (e.g., a sudden license change in a key dependency) only becomes a\ncritical risk when it exploits a controllable Internal Vulnerability (e.g., an\nundefined risk appetite for single-vendor projects), which then amplifies the\nimpact.The framework operationalizes this principle through a clear logical\nchain: \"Objectives -> Threats -> Vulnerabilities -> Mitigation\" (OTVM). This\nprovides a holistic decision model that transcends mere technical checklists.\nBased on this logic, our contributions are: (1) a \"Strategic Objectives Matrix\"\nto clarify goals; (2) a systematic dual taxonomy of External Threats (Ex-Tech,\nEx-Comm, Ex-Eco) and Internal Vulnerabilities (In-Strat, In-Ops, In-Tech); and\n(3) an actionable mitigation framework mapping capability-building to these\nvulnerabilities. The framework's analytical utility was validated by three\nindustry experts through retrospective case studies on real-world incidents.\nThis work provides a novel diagnostic lens and a systematic path for\nenterprises to shift from reactive \"firefighting\" to proactively building an\norganizational \"immune system\".", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u4e2a\u4f01\u4e1a\u5f00\u6e90\u98ce\u9669\u6cbb\u7406\u6846\u67b6OTVM\uff0c\u901a\u8fc7\"\u76ee\u6807->\u5a01\u80c1->\u6f0f\u6d1e->\u7f13\u89e3\"\u7684\u903b\u8f91\u94fe\uff0c\u5e2e\u52a9\u4f01\u4e1a\u4ece\u6218\u672f\u98ce\u9669\u7ba1\u7406\u8f6c\u5411\u6574\u4f53\u98ce\u9669\u6cbb\u7406\u3002", "motivation": "\u4f20\u7edf\u98ce\u9669\u7ba1\u7406\u4ec5\u5173\u6ce8\u6280\u672f\u5de5\u5177\uff0c\u65e0\u6cd5\u5e94\u5bf9\u7cfb\u7edf\u6027\u5a01\u80c1\u5982\u4e0a\u6e38\"\u9759\u9ed8\u4fee\u590d\"\u3001\u793e\u533a\u51b2\u7a81\u6216\u8bb8\u53ef\u8bc1\u53d8\u66f4\uff0c\u5b58\u5728\u6cbb\u7406\u76f2\u533a\u3002", "method": "\u57fa\u4e8e\u624e\u6839\u7406\u8bba\u7814\u7a76\uff0c\u4e0e15\u4f4d\u4ece\u4e1a\u8005\u5408\u4f5c\u5f00\u53d1\u6574\u4f53\u98ce\u9669\u6cbb\u7406\u6846\u67b6\uff0c\u5e76\u901a\u8fc7\u4e09\u4f4d\u884c\u4e1a\u4e13\u5bb6\u7684\u56de\u987e\u6027\u6848\u4f8b\u7814\u7a76\u9a8c\u8bc1\u6846\u67b6\u6548\u7528\u3002", "result": "\u5efa\u7acb\u4e86\u5305\u542b\u6218\u7565\u76ee\u6807\u77e9\u9635\u3001\u5916\u90e8\u5a01\u80c1\u4e0e\u5185\u90e8\u6f0f\u6d1e\u53cc\u91cd\u5206\u7c7b\u6cd5\u3001\u4ee5\u53ca\u53ef\u64cd\u4f5c\u7684\u7f13\u89e3\u6846\u67b6\u7684\u5b8c\u6574\u98ce\u9669\u6cbb\u7406\u4f53\u7cfb\u3002", "conclusion": "\u8be5\u5de5\u4f5c\u4e3a\u4f01\u4e1a\u63d0\u4f9b\u4e86\u4ece\u88ab\u52a8\"\u6551\u706b\"\u8f6c\u5411\u4e3b\u52a8\u6784\u5efa\u7ec4\u7ec7\"\u514d\u75ab\u7cfb\u7edf\"\u7684\u8bca\u65ad\u5de5\u5177\u548c\u7cfb\u7edf\u8def\u5f84\u3002"}}
{"id": "2510.26371", "categories": ["cs.FL"], "pdf": "https://arxiv.org/pdf/2510.26371", "abs": "https://arxiv.org/abs/2510.26371", "authors": ["Anton Chernev", "Corina C\u00eerstea", "Helle Hvid Hansen", "Clemens Kupke"], "title": "Unambiguous Acceptance of Thin Coalgebras", "comment": null, "summary": "Automata admitting at most one accepting run per structure, known as\nunambiguous automata, find applications in verification of reactive systems as\nthey extend the class of deterministic automata whilst maintaining some of\ntheir desirable properties. In this paper, we generalise a classical\nconstruction of unambiguous automata from thin trees to thin coalgebras for\nanalytic functors. This achieves two goals: extending the existing construction\nto a larger class of structures, and providing conceptual clarity and\nparametricity to the construction by formalising it in the coalgebraic\nframework. As part of the construction, we link automaton acceptance of\nlanguages of thin coalgebras to language recognition via so-called coherent\nalgebras, which were previously introduced for studying thin coalgebras. This\nlink also allows us to establish an automata-theoretic characterisation of\nlanguages recognised by finite coherent algebras.", "AI": {"tldr": "\u8be5\u8bba\u6587\u5c06\u81ea\u52a8\u673a\u7406\u8bba\u4e2d\u7684\u5355\u4e49\u81ea\u52a8\u673a\u6784\u9020\u4ece\u8584\u6811\u63a8\u5e7f\u5230\u89e3\u6790\u51fd\u5b50\u7684\u8584\u4f59\u4ee3\u6570\uff0c\u6269\u5c55\u4e86\u6784\u9020\u8303\u56f4\u5e76\u63d0\u4f9b\u4e86\u6982\u5ff5\u6e05\u6670\u5ea6\u3002", "motivation": "\u5355\u4e49\u81ea\u52a8\u673a\u5728\u53cd\u5e94\u5f0f\u7cfb\u7edf\u9a8c\u8bc1\u4e2d\u6709\u5e94\u7528\u4ef7\u503c\uff0c\u5b83\u4eec\u6269\u5c55\u4e86\u786e\u5b9a\u6027\u81ea\u52a8\u673a\u7c7b\u522b\u540c\u65f6\u4fdd\u6301\u4e86\u67d0\u4e9b\u7406\u60f3\u7279\u6027\u3002\u73b0\u6709\u6784\u9020\u4ec5\u9650\u4e8e\u8584\u6811\uff0c\u9700\u8981\u63a8\u5e7f\u5230\u66f4\u5e7f\u6cdb\u7684\u4ee3\u6570\u7ed3\u6784\u3002", "method": "\u901a\u8fc7\u4f59\u4ee3\u6570\u6846\u67b6\u5c06\u5355\u4e49\u81ea\u52a8\u673a\u6784\u9020\u4ece\u8584\u6811\u63a8\u5e7f\u5230\u89e3\u6790\u51fd\u5b50\u7684\u8584\u4f59\u4ee3\u6570\uff0c\u5e76\u5c06\u81ea\u52a8\u673a\u63a5\u53d7\u4e0e\u76f8\u5e72\u4ee3\u6570\u7684\u8bed\u8a00\u8bc6\u522b\u8054\u7cfb\u8d77\u6765\u3002", "result": "\u6210\u529f\u6784\u5efa\u4e86\u9002\u7528\u4e8e\u89e3\u6790\u51fd\u5b50\u8584\u4f59\u4ee3\u6570\u7684\u5355\u4e49\u81ea\u52a8\u673a\u6784\u9020\uff0c\u5e76\u5efa\u7acb\u4e86\u6709\u9650\u76f8\u5e72\u4ee3\u6570\u8bc6\u522b\u8bed\u8a00\u7684\u81ea\u52a8\u673a\u7406\u8bba\u7279\u5f81\u3002", "conclusion": "\u8be5\u5de5\u4f5c\u6269\u5c55\u4e86\u5355\u4e49\u81ea\u52a8\u673a\u7684\u5e94\u7528\u8303\u56f4\uff0c\u4e3a\u8584\u4f59\u4ee3\u6570\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u6784\u9020\u6846\u67b6\uff0c\u5e76\u5efa\u7acb\u4e86\u81ea\u52a8\u673a\u7406\u8bba\u4e0e\u76f8\u5e72\u4ee3\u6570\u4e4b\u95f4\u7684\u8054\u7cfb\u3002"}}
{"id": "2510.26431", "categories": ["cs.SE", "cs.LO", "cs.PL"], "pdf": "https://arxiv.org/pdf/2510.26431", "abs": "https://arxiv.org/abs/2510.26431", "authors": ["Mih\u00e1ly Dobos-Kov\u00e1cs", "Levente Bajczi", "Andr\u00e1s V\u00f6r\u00f6s"], "title": "CHCVerif: A Portfolio-Based Solver for Constrained Horn Clauses", "comment": "In Proceedings HCVS 2025, arXiv:2510.25468", "summary": "Constrained Horn Clauses (CHCs) are widely adopted as intermediate\nrepresentations for a variety of verification tasks, including safety checking,\ninvariant synthesis, and interprocedural analysis. This paper introduces\nCHCVERIF, a portfolio-based CHC solver that adopts a software verification\napproach for solving CHCs. This approach enables us to reuse mature software\nverification tools to tackle CHC benchmarks, particularly those involving\nbitvectors and low-level semantics. Our evaluation shows that while the method\nenjoys only moderate success with linear integer arithmetic, it achieves modest\nsuccess on bitvector benchmarks. Moreover, our results demonstrate the\nviability and potential of using software verification tools as backends for\nCHC solving, particularly when supported by a carefully constructed portfolio.", "AI": {"tldr": "CHCVERIF\u662f\u4e00\u4e2a\u57fa\u4e8e\u7ec4\u5408\u7b56\u7565\u7684CHC\u6c42\u89e3\u5668\uff0c\u91c7\u7528\u8f6f\u4ef6\u9a8c\u8bc1\u65b9\u6cd5\u89e3\u51b3\u7ea6\u675fHorn\u5b50\u53e5\u95ee\u9898\uff0c\u80fd\u591f\u91cd\u7528\u6210\u719f\u7684\u8f6f\u4ef6\u9a8c\u8bc1\u5de5\u5177\u5904\u7406\u6d89\u53ca\u4f4d\u5411\u91cf\u548c\u4f4e\u7ea7\u8bed\u4e49\u7684\u57fa\u51c6\u6d4b\u8bd5\u3002", "motivation": "\u7ea6\u675fHorn\u5b50\u53e5\uff08CHCs\uff09\u88ab\u5e7f\u6cdb\u7528\u4f5c\u5404\u79cd\u9a8c\u8bc1\u4efb\u52a1\u7684\u4e2d\u95f4\u8868\u793a\uff0c\u4f46\u73b0\u6709\u6c42\u89e3\u5668\u5728\u5904\u7406\u4f4d\u5411\u91cf\u548c\u4f4e\u7ea7\u8bed\u4e49\u65f6\u9762\u4e34\u6311\u6218\u3002\u4f5c\u8005\u5e0c\u671b\u5229\u7528\u6210\u719f\u7684\u8f6f\u4ef6\u9a8c\u8bc1\u5de5\u5177\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002", "method": "\u5f00\u53d1\u4e86CHCVERIF\uff0c\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e\u7ec4\u5408\u7b56\u7565\u7684CHC\u6c42\u89e3\u5668\uff0c\u91c7\u7528\u8f6f\u4ef6\u9a8c\u8bc1\u65b9\u6cd5\uff0c\u91cd\u7528\u73b0\u6709\u7684\u8f6f\u4ef6\u9a8c\u8bc1\u5de5\u5177\u4f5c\u4e3a\u540e\u7aef\u6765\u5904\u7406CHC\u57fa\u51c6\u6d4b\u8bd5\u3002", "result": "\u5728\u7ebf\u6027\u6574\u6570\u7b97\u672f\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u8868\u73b0\u4e00\u822c\uff0c\u4f46\u5728\u4f4d\u5411\u91cf\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u53d6\u5f97\u4e86\u9002\u5ea6\u7684\u6210\u529f\u3002\u7ed3\u679c\u8868\u660e\u4f7f\u7528\u8f6f\u4ef6\u9a8c\u8bc1\u5de5\u5177\u4f5c\u4e3aCHC\u6c42\u89e3\u540e\u7aef\u7684\u53ef\u884c\u6027\u548c\u6f5c\u529b\u3002", "conclusion": "\u4f7f\u7528\u8f6f\u4ef6\u9a8c\u8bc1\u5de5\u5177\u4f5c\u4e3aCHC\u6c42\u89e3\u7684\u540e\u7aef\u662f\u53ef\u884c\u4e14\u6709\u6f5c\u529b\u7684\uff0c\u7279\u522b\u662f\u5728\u7cbe\u5fc3\u6784\u5efa\u7684\u7ec4\u5408\u7b56\u7565\u652f\u6301\u4e0b\uff0c\u7279\u522b\u9002\u7528\u4e8e\u5904\u7406\u4f4d\u5411\u91cf\u548c\u4f4e\u7ea7\u8bed\u4e49\u7684\u57fa\u51c6\u6d4b\u8bd5\u3002"}}
{"id": "2510.25890", "categories": ["cs.SE", "cs.AI", "D.2.4; I.2.2"], "pdf": "https://arxiv.org/pdf/2510.25890", "abs": "https://arxiv.org/abs/2510.25890", "authors": ["Tong Ma", "Hui Lai", "Hui Wang", "Zhenhu Tian", "Jizhou Wang", "Haichao Wu", "Yongfan Gao", "Chaochao Li", "Fengjie Xu", "Ling Fang"], "title": "PRISM: Proof-Carrying Artifact Generation through LLM x MDE Synergy and Stratified Constraints", "comment": "45 pages, 9 figures", "summary": "PRISM unifies Large Language Models with Model-Driven Engineering to generate\nregulator-ready artifacts and machine-checkable evidence for safety- and\ncompliance-critical domains. PRISM integrates three pillars: a Unified\nMeta-Model (UMM) reconciles heterogeneous schemas and regulatory text into a\nsingle semantic space; an Integrated Constraint Model (ICM) compiles structural\nand semantic requirements into enforcement artifacts including generation-time\nautomata (GBNF, DFA) and post-generation validators (e.g., SHACL, SMT); and\nConstraint-Guided Verifiable Generation (CVG) applies these through two-layer\nenforcement - structural constraints drive prefix-safe decoding while\nsemantic/logical validation produces machine-checkable certificates. When\nviolations occur, PRISM performs audit-guided repair and records generation\ntraces for compliance review. We evaluate PRISM in automotive software\nengineering (AUTOSAR) and cross-border legal jurisdiction (Brussels I bis).\nPRISM produces structurally valid, auditable artifacts that integrate with\nexisting tooling and substantially reduce manual remediation effort, providing\na practical path toward automated artifact generation with built-in assurance.", "AI": {"tldr": "PRISM\u5c06\u5927\u8bed\u8a00\u6a21\u578b\u4e0e\u6a21\u578b\u9a71\u52a8\u5de5\u7a0b\u76f8\u7ed3\u5408\uff0c\u4e3a\u5b89\u5168\u548c\u5408\u89c4\u5173\u952e\u9886\u57df\u751f\u6210\u7b26\u5408\u76d1\u7ba1\u8981\u6c42\u7684\u5de5\u4ef6\u548c\u673a\u5668\u53ef\u9a8c\u8bc1\u8bc1\u636e\u3002", "motivation": "\u89e3\u51b3\u5728\u5b89\u5168\u548c\u5408\u89c4\u5173\u952e\u9886\u57df\u4e2d\uff0c\u4f20\u7edf\u65b9\u6cd5\u96be\u4ee5\u751f\u6210\u7b26\u5408\u76d1\u7ba1\u8981\u6c42\u7684\u53ef\u9a8c\u8bc1\u5de5\u4ef6\u7684\u95ee\u9898\uff0c\u51cf\u5c11\u4eba\u5de5\u4fee\u590d\u5de5\u4f5c\u91cf\u3002", "method": "\u91c7\u7528\u4e09\u652f\u67f1\u65b9\u6cd5\uff1a\u7edf\u4e00\u5143\u6a21\u578b\u6574\u5408\u5f02\u6784\u6a21\u5f0f\uff0c\u96c6\u6210\u7ea6\u675f\u6a21\u578b\u7f16\u8bd1\u7ed3\u6784\u8bed\u4e49\u8981\u6c42\uff0c\u7ea6\u675f\u5f15\u5bfc\u53ef\u9a8c\u8bc1\u751f\u6210\u901a\u8fc7\u4e24\u5c42\u5f3a\u5236\u6267\u884c\u3002", "result": "\u5728\u6c7d\u8f66\u8f6f\u4ef6\u5de5\u7a0b\u548c\u8de8\u5883\u6cd5\u5f8b\u7ba1\u8f96\u573a\u666f\u4e2d\uff0cPRISM\u80fd\u751f\u6210\u7ed3\u6784\u6709\u6548\u3001\u53ef\u5ba1\u8ba1\u7684\u5de5\u4ef6\uff0c\u663e\u8457\u51cf\u5c11\u4eba\u5de5\u4fee\u590d\u5de5\u4f5c\u91cf\u3002", "conclusion": "PRISM\u4e3a\u81ea\u52a8\u5316\u5de5\u4ef6\u751f\u6210\u63d0\u4f9b\u4e86\u5b9e\u7528\u8def\u5f84\uff0c\u5177\u6709\u5185\u7f6e\u4fdd\u8bc1\u673a\u5236\uff0c\u80fd\u591f\u4e0e\u73b0\u6709\u5de5\u5177\u94fe\u96c6\u6210\u3002"}}
{"id": "2510.25935", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.25935", "abs": "https://arxiv.org/abs/2510.25935", "authors": ["Ant\u00eda Dorado", "Iv\u00e1n Folgueira", "Sof\u00eda Mart\u00edn", "Gonzalo Mart\u00edn", "\u00c1lvaro Porto", "Alejandro Ramos", "John Wallace"], "title": "A Process Mining-Based System For The Analysis and Prediction of Software Development Workflows", "comment": "16 pages, 7 figures, 4 tables", "summary": "CodeSight is an end-to-end system designed to anticipate deadline compliance\nin software development workflows. It captures development and deployment data\ndirectly from GitHub, transforming it into process mining logs for detailed\nanalysis. From these logs, the system generates metrics and dashboards that\nprovide actionable insights into PR activity patterns and workflow efficiency.\nBuilding on this structured representation, CodeSight employs an LSTM model\nthat predicts remaining PR resolution times based on sequential activity traces\nand static features, enabling early identification of potential deadline\nbreaches. In tests, the system demonstrates high precision and F1 scores in\npredicting deadline compliance, illustrating the value of integrating process\nmining with machine learning for proactive software project management.", "AI": {"tldr": "CodeSight\u662f\u4e00\u4e2a\u7aef\u5230\u7aef\u7cfb\u7edf\uff0c\u901a\u8fc7\u6574\u5408\u8fc7\u7a0b\u6316\u6398\u548c\u673a\u5668\u5b66\u4e60\u6765\u9884\u6d4b\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u622a\u6b62\u671f\u9650\u5408\u89c4\u6027\uff0c\u4f7f\u7528LSTM\u6a21\u578b\u57fa\u4e8ePR\u6d3b\u52a8\u5e8f\u5217\u9884\u6d4b\u5269\u4f59\u89e3\u51b3\u65f6\u95f4\u3002", "motivation": "\u5728\u8f6f\u4ef6\u5f00\u53d1\u5de5\u4f5c\u6d41\u4e2d\uff0c\u9700\u8981\u4e00\u79cd\u80fd\u591f\u4e3b\u52a8\u9884\u6d4b\u622a\u6b62\u671f\u9650\u5408\u89c4\u6027\u7684\u7cfb\u7edf\uff0c\u4ee5\u4fbf\u53ca\u65e9\u8bc6\u522b\u6f5c\u5728\u7684\u622a\u6b62\u671f\u9650\u8fdd\u89c4\u98ce\u9669\uff0c\u5b9e\u73b0\u66f4\u4e3b\u52a8\u7684\u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406\u3002", "method": "\u7cfb\u7edf\u4eceGitHub\u6355\u83b7\u5f00\u53d1\u548c\u90e8\u7f72\u6570\u636e\uff0c\u8f6c\u6362\u4e3a\u8fc7\u7a0b\u6316\u6398\u65e5\u5fd7\u8fdb\u884c\u5206\u6790\uff0c\u751f\u6210\u6307\u6807\u548c\u4eea\u8868\u677f\uff0c\u7136\u540e\u4f7f\u7528LSTM\u6a21\u578b\u57fa\u4e8e\u5e8f\u5217\u6d3b\u52a8\u8f68\u8ff9\u548c\u9759\u6001\u7279\u5f81\u9884\u6d4bPR\u5269\u4f59\u89e3\u51b3\u65f6\u95f4\u3002", "result": "\u5728\u6d4b\u8bd5\u4e2d\uff0c\u7cfb\u7edf\u5728\u9884\u6d4b\u622a\u6b62\u671f\u9650\u5408\u89c4\u6027\u65b9\u9762\u8868\u73b0\u51fa\u9ad8\u7cbe\u5ea6\u548c\u9ad8F1\u5206\u6570\uff0c\u8bc1\u660e\u4e86\u8fc7\u7a0b\u6316\u6398\u4e0e\u673a\u5668\u5b66\u4e60\u6574\u5408\u7684\u6709\u6548\u6027\u3002", "conclusion": "CodeSight\u5c55\u793a\u4e86\u5c06\u8fc7\u7a0b\u6316\u6398\u4e0e\u673a\u5668\u5b66\u4e60\u76f8\u7ed3\u5408\u5728\u4e3b\u52a8\u8f6f\u4ef6\u9879\u76ee\u7ba1\u7406\u4e2d\u7684\u4ef7\u503c\uff0c\u80fd\u591f\u6709\u6548\u9884\u6d4b\u622a\u6b62\u671f\u9650\u5408\u89c4\u6027\u5e76\u63d0\u4f9b\u53ef\u64cd\u4f5c\u7684\u6d1e\u5bdf\u3002"}}
{"id": "2510.26130", "categories": ["cs.SE", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.26130", "abs": "https://arxiv.org/abs/2510.26130", "authors": ["Musfiqur Rahman", "SayedHassan Khatoonabadi", "Emad Shihab"], "title": "Beyond Synthetic Benchmarks: Evaluating LLM Performance on Real-World Class-Level Code Generation", "comment": "Pre-print prepared for journal submission", "summary": "Large language models (LLMs) have advanced code generation at the function\nlevel, yet their ability to produce correct class-level implementations in\nauthentic software projects remains poorly understood. This work introduces a\nnovel benchmark derived from open-source repositories, comprising real-world\nclasses divided into seen and unseen partitions to evaluate generalization\nunder practical conditions. The evaluation examines multiple LLMs under varied\ninput specifications, retrieval-augmented configurations, and documentation\ncompleteness levels.\n  Results reveal a stark performance disparity: LLMs achieve 84% to 89%\ncorrectness on established synthetic benchmarks but only 25% to 34% on\nreal-world class tasks, with negligible differences between familiar and novel\ncodebases. Comprehensive docstrings yield modest gains of 1% to 3% in\nfunctional accuracy, though statistical significance is rare.\nRetrieval-augmented generation proves most effective with partial\ndocumentation, improving correctness by 4% to 7% by supplying concrete\nimplementation patterns absent from specifications. Error profiling identifies\nAttributeError, TypeError, and AssertionError as dominant failure modes (84% of\ncases), with synthetic tests overemphasizing assertion issues and real-world\nscenarios highlighting type and attribute mismatches. Retrieval augmentation\nreduces logical flaws but can introduce dependency conflicts.\n  The benchmark and analysis expose critical limitations in current LLM\ncapabilities for class-level engineering, offering actionable insights for\nenhancing context modelling, documentation strategies, and retrieval\nintegration in production code assistance tools.", "AI": {"tldr": "LLMs\u5728\u51fd\u6570\u7ea7\u4ee3\u7801\u751f\u6210\u8868\u73b0\u51fa\u8272\uff0c\u4f46\u5728\u771f\u5b9e\u8f6f\u4ef6\u9879\u76ee\u7684\u7c7b\u7ea7\u5b9e\u73b0\u4e2d\u6b63\u786e\u7387\u663e\u8457\u4e0b\u964d\uff0c\u4ece\u5408\u6210\u57fa\u51c6\u768484-89%\u964d\u81f3\u771f\u5b9e\u4e16\u754c\u4efb\u52a1\u768425-34%\u3002\u68c0\u7d22\u589e\u5f3a\u751f\u6210\u5728\u90e8\u5206\u6587\u6863\u60c5\u51b5\u4e0b\u6700\u6709\u6548\uff0c\u9519\u8bef\u5206\u6790\u663e\u793a\u7c7b\u578b\u548c\u5c5e\u6027\u9519\u8bef\u662f\u4e3b\u8981\u5931\u8d25\u6a21\u5f0f\u3002", "motivation": "\u8bc4\u4f30LLMs\u5728\u771f\u5b9e\u8f6f\u4ef6\u9879\u76ee\u4e2d\u751f\u6210\u7c7b\u7ea7\u4ee3\u7801\u7684\u80fd\u529b\uff0c\u73b0\u6709\u7814\u7a76\u4e3b\u8981\u5173\u6ce8\u51fd\u6570\u7ea7\u4ee3\u7801\u751f\u6210\uff0c\u800c\u7c7b\u7ea7\u5b9e\u73b0\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u66f4\u4e3a\u590d\u6742\u4e14\u91cd\u8981\u3002", "method": "\u4ece\u5f00\u6e90\u4ed3\u5e93\u6784\u5efa\u65b0\u57fa\u51c6\uff0c\u5305\u542b\u771f\u5b9e\u4e16\u754c\u7c7b\uff0c\u5206\u4e3a\u5df2\u89c1\u548c\u672a\u89c1\u5206\u533a\uff0c\u8bc4\u4f30\u591a\u79cdLLM\u5728\u4e0d\u540c\u8f93\u5165\u89c4\u8303\u3001\u68c0\u7d22\u589e\u5f3a\u914d\u7f6e\u548c\u6587\u6863\u5b8c\u6574\u6027\u4e0b\u7684\u8868\u73b0\u3002", "result": "LLMs\u5728\u771f\u5b9e\u4e16\u754c\u7c7b\u4efb\u52a1\u4e2d\u6b63\u786e\u7387\u4ec5\u4e3a25-34%\uff0c\u8fdc\u4f4e\u4e8e\u5408\u6210\u57fa\u51c6\u768484-89%\u3002\u68c0\u7d22\u589e\u5f3a\u751f\u6210\u5728\u90e8\u5206\u6587\u6863\u65f6\u80fd\u63d0\u53474-7%\u6b63\u786e\u7387\uff0c\u4f46\u53ef\u80fd\u5f15\u5165\u4f9d\u8d56\u51b2\u7a81\u3002", "conclusion": "\u5f53\u524dLLMs\u5728\u7c7b\u7ea7\u5de5\u7a0b\u80fd\u529b\u5b58\u5728\u4e25\u91cd\u5c40\u9650\uff0c\u9700\u8981\u6539\u8fdb\u4e0a\u4e0b\u6587\u5efa\u6a21\u3001\u6587\u6863\u7b56\u7565\u548c\u68c0\u7d22\u96c6\u6210\u6765\u63d0\u5347\u751f\u4ea7\u4ee3\u7801\u8f85\u52a9\u5de5\u5177\u7684\u6548\u679c\u3002"}}
{"id": "2510.26171", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26171", "abs": "https://arxiv.org/abs/2510.26171", "authors": ["Hasnain Iqbal", "Zerina Begum", "Kazi Sakib"], "title": "Reduction of Test Re-runs by Prioritizing Potential Order Dependent Flaky Tests", "comment": null, "summary": "Flaky tests can make automated software testing unreliable due to their\nunpredictable behavior. These tests can pass or fail on the same code base on\nmultiple runs. However, flaky tests often do not refer to any fault, even\nthough they can cause the continuous integration (CI) pipeline to fail. A\ncommon type of flaky test is the order-dependent (OD) test. The outcome of an\nOD test depends on the order in which it is run with respect to other test\ncases. Several studies have explored the detection and repair of OD tests.\nHowever, their methods require re-runs of tests multiple times, that are not\nrelated to the order dependence. Hence, prioritizing potential OD tests is\nnecessary to reduce the re-runs. In this paper, we propose a method to\nprioritize potential order-dependent tests. By analyzing shared static fields\nin test classes, we identify tests that are more likely to be order-dependent.\nIn our experiment on 27 project modules, our method successfully prioritized\nall OD tests in 23 cases, reducing test executions by an average of 65.92% and\nunnecessary re-runs by 72.19%. These results demonstrate that our approach\nsignificantly improves the efficiency of OD test detection by lowering\nexecution costs.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5171\u4eab\u9759\u6001\u5b57\u6bb5\u5206\u6790\u7684\u65b9\u6cd5\u6765\u4f18\u5148\u6392\u5e8f\u6f5c\u5728\u7684\u987a\u5e8f\u4f9d\u8d56\u6d4b\u8bd5\uff0c\u663e\u8457\u63d0\u9ad8\u4e86OD\u6d4b\u8bd5\u68c0\u6d4b\u6548\u7387", "motivation": "\u987a\u5e8f\u4f9d\u8d56\u6d4b\u8bd5\u4f1a\u5bfc\u81f4\u6301\u7eed\u96c6\u6210\u7ba1\u9053\u5931\u8d25\uff0c\u73b0\u6709\u68c0\u6d4b\u65b9\u6cd5\u9700\u8981\u591a\u6b21\u91cd\u590d\u8fd0\u884c\u6d4b\u8bd5\uff0c\u6210\u672c\u9ad8\u6602\uff0c\u9700\u8981\u4f18\u5148\u8bc6\u522b\u6f5c\u5728OD\u6d4b\u8bd5\u4ee5\u51cf\u5c11\u91cd\u590d\u8fd0\u884c", "method": "\u901a\u8fc7\u5206\u6790\u6d4b\u8bd5\u7c7b\u4e2d\u7684\u5171\u4eab\u9759\u6001\u5b57\u6bb5\u6765\u8bc6\u522b\u66f4\u53ef\u80fd\u5177\u6709\u987a\u5e8f\u4f9d\u8d56\u6027\u7684\u6d4b\u8bd5", "result": "\u572827\u4e2a\u9879\u76ee\u6a21\u5757\u7684\u5b9e\u9a8c\u4e2d\uff0c\u6210\u529f\u572823\u4e2a\u6848\u4f8b\u4e2d\u4f18\u5148\u6392\u5e8f\u6240\u6709OD\u6d4b\u8bd5\uff0c\u5e73\u5747\u51cf\u5c1165.92%\u7684\u6d4b\u8bd5\u6267\u884c\u548c72.19%\u7684\u4e0d\u5fc5\u8981\u91cd\u590d\u8fd0\u884c", "conclusion": "\u8be5\u65b9\u6cd5\u901a\u8fc7\u964d\u4f4e\u6267\u884c\u6210\u672c\uff0c\u663e\u8457\u63d0\u9ad8\u4e86OD\u6d4b\u8bd5\u68c0\u6d4b\u7684\u6548\u7387"}}
{"id": "2510.26174", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26174", "abs": "https://arxiv.org/abs/2510.26174", "authors": ["Liming Dong", "Sung Une Lee", "Zhenchang Xing", "Muhammad Ejaz Ahmed", "Stefan Avgoustakis"], "title": "The \"4W+1H\" of Software Supply Chain Security Checklist for Critical Infrastructure", "comment": "18 pages, 4 figures", "summary": "The increasing frequency and sophistication of software supply chain attacks\npose severe risks to critical infrastructure sectors, threatening national\nsecurity, economic stability, and public safety. Despite growing awareness,\nexisting security practices remain fragmented and insufficient, with most\nframeworks narrowly focused on isolated life cycle stages or lacking alignment\nwith the specific needs of critical infrastructure (CI) sectors. In this paper,\nwe conducted a multivocal literature review across international frameworks,\nAustralian regulatory sources, and academic studies to identify and analyze\nsecurity practices across the software supply chain, especially specific CI\nsector. Our analysis found that few existing frameworks are explicitly tailored\nto CI domains. We systematically leveraged identified software supply chain\nsecurity frameworks, using a \"4W+1H\" analytical approach, we synthesized ten\ncore categories (what) of software supply chain security practices, mapped them\nacross life-cycle phases (when), stakeholder roles (who), and implementation\nlevels (how), and examined their coverage across existing frameworks (where).\nBuilding on these insights, the paper culminates in structured, multi-layered\nchecklist of 80 questions designed to relevant stakeholders evaluate and\nenhance their software supply chain security. Our findings reveal gaps between\nframework guidance and sector-specific needs, highlight the need for\nintegrated, context-aware approaches to safeguard critical infrastructure from\nevolving software supply chain risks.", "AI": {"tldr": "\u672c\u6587\u901a\u8fc7\u591a\u6e90\u6587\u732e\u7efc\u8ff0\u5206\u6790\u4e86\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u5b89\u5168\u5b9e\u8df5\uff0c\u53d1\u73b0\u73b0\u6709\u6846\u67b6\u5bf9\u5173\u952e\u57fa\u7840\u8bbe\u65bd\u9886\u57df\u9488\u5bf9\u6027\u4e0d\u8db3\uff0c\u63d0\u51fa\u4e86\u5305\u542b80\u4e2a\u95ee\u9898\u7684\u7ed3\u6784\u5316\u591a\u5c42\u7ea7\u68c0\u67e5\u8868\u6765\u8bc4\u4f30\u548c\u589e\u5f3a\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u5b89\u5168\u3002", "motivation": "\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u653b\u51fb\u65e5\u76ca\u9891\u7e41\u548c\u590d\u6742\uff0c\u5bf9\u5173\u952e\u57fa\u7840\u8bbe\u65bd\u6784\u6210\u4e25\u91cd\u5a01\u80c1\uff0c\u800c\u73b0\u6709\u5b89\u5168\u5b9e\u8df5\u5206\u6563\u4e14\u4e0d\u8db3\uff0c\u7f3a\u4e4f\u9488\u5bf9\u5173\u952e\u57fa\u7840\u8bbe\u65bd\u9886\u57df\u7684\u4e13\u95e8\u6846\u67b6\u3002", "method": "\u91c7\u7528\u591a\u6e90\u6587\u732e\u7efc\u8ff0\u65b9\u6cd5\uff0c\u5206\u6790\u56fd\u9645\u6846\u67b6\u3001\u6fb3\u5927\u5229\u4e9a\u76d1\u7ba1\u6587\u4ef6\u548c\u5b66\u672f\u7814\u7a76\uff0c\u4f7f\u7528\"4W+1H\"\u5206\u6790\u65b9\u6cd5\uff0c\u7efc\u540810\u4e2a\u6838\u5fc3\u7c7b\u522b\u7684\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u5b89\u5168\u5b9e\u8df5\u3002", "result": "\u53d1\u73b0\u73b0\u6709\u6846\u67b6\u5f88\u5c11\u4e13\u95e8\u9488\u5bf9\u5173\u952e\u57fa\u7840\u8bbe\u65bd\u9886\u57df\uff0c\u8bc6\u522b\u4e86\u6846\u67b6\u6307\u5bfc\u4e0e\u884c\u4e1a\u7279\u5b9a\u9700\u6c42\u4e4b\u95f4\u7684\u5dee\u8ddd\uff0c\u5f00\u53d1\u4e86\u5305\u542b80\u4e2a\u95ee\u9898\u7684\u7ed3\u6784\u5316\u68c0\u67e5\u8868\u3002", "conclusion": "\u9700\u8981\u91c7\u7528\u6574\u5408\u7684\u3001\u60c5\u5883\u611f\u77e5\u7684\u65b9\u6cd5\u6765\u4fdd\u62a4\u5173\u952e\u57fa\u7840\u8bbe\u65bd\u514d\u53d7\u4e0d\u65ad\u6f14\u53d8\u7684\u8f6f\u4ef6\u4f9b\u5e94\u94fe\u98ce\u9669\u5a01\u80c1\u3002"}}
{"id": "2510.26275", "categories": ["cs.SE", "cs.AI", "cs.ET", "cs.LG", "cs.MA"], "pdf": "https://arxiv.org/pdf/2510.26275", "abs": "https://arxiv.org/abs/2510.26275", "authors": ["Domenico Amalfitano", "Andreas Metzger", "Marco Autili", "Tommaso Fulcini", "Tobias Hey", "Jan Keim", "Patrizio Pelliccione", "Vincenzo Scotti", "Anne Koziolek", "Raffaela Mirandola", "Andreas Vogelsang"], "title": "A Research Roadmap for Augmenting Software Engineering Processes and Software Products with Generative AI", "comment": null, "summary": "Generative AI (GenAI) is rapidly transforming software engineering (SE)\npractices, influencing how SE processes are executed, as well as how software\nsystems are developed, operated, and evolved. This paper applies design science\nresearch to build a roadmap for GenAI-augmented SE. The process consists of\nthree cycles that incrementally integrate multiple sources of evidence,\nincluding collaborative discussions from the FSE 2025 \"Software Engineering\n2030\" workshop, rapid literature reviews, and external feedback sessions\ninvolving peers. McLuhan's tetrads were used as a conceptual instrument to\nsystematically capture the transforming effects of GenAI on SE processes and\nsoftware products.The resulting roadmap identifies four fundamental forms of\nGenAI augmentation in SE and systematically characterizes their related\nresearch challenges and opportunities. These insights are then consolidated\ninto a set of future research directions. By grounding the roadmap in a\nrigorous multi-cycle process and cross-validating it among independent author\nteams and peers, the study provides a transparent and reproducible foundation\nfor analyzing how GenAI affects SE processes, methods and tools, and for\nframing future research within this rapidly evolving area. Based on these\nfindings, the article finally makes ten predictions for SE in the year 2030.", "AI": {"tldr": "\u672c\u6587\u5e94\u7528\u8bbe\u8ba1\u79d1\u5b66\u7814\u7a76\u65b9\u6cd5\u6784\u5efa\u4e86GenAI\u589e\u5f3a\u8f6f\u4ef6\u5de5\u7a0b\u7684\u8def\u7ebf\u56fe\uff0c\u901a\u8fc7\u4e09\u8f6e\u5faa\u73af\u6574\u5408\u591a\u65b9\u8bc1\u636e\uff0c\u4f7f\u7528\u9ea6\u514b\u5362\u6c49\u56db\u5143\u6cd5\u7cfb\u7edf\u5206\u6790GenAI\u5bf9SE\u7684\u5f71\u54cd\uff0c\u8bc6\u522b\u4e86\u56db\u79cd\u57fa\u672c\u589e\u5f3a\u5f62\u5f0f\u53ca\u5176\u7814\u7a76\u6311\u6218\u4e0e\u673a\u9047\uff0c\u5e76\u63d0\u51fa\u4e862030\u5e74\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5341\u4e2a\u9884\u6d4b\u3002", "motivation": "\u751f\u6210\u5f0fAI\u6b63\u5728\u5feb\u901f\u6539\u53d8\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\uff0c\u5f71\u54cdSE\u6d41\u7a0b\u7684\u6267\u884c\u65b9\u5f0f\u4ee5\u53ca\u8f6f\u4ef6\u7cfb\u7edf\u7684\u5f00\u53d1\u3001\u8fd0\u8425\u548c\u6f14\u8fdb\u8fc7\u7a0b\u3002\u9700\u8981\u6784\u5efa\u7cfb\u7edf\u5316\u7684\u8def\u7ebf\u56fe\u6765\u6307\u5bfcGenAI\u5728SE\u9886\u57df\u7684\u5e94\u7528\u548c\u53d1\u5c55\u3002", "method": "\u91c7\u7528\u8bbe\u8ba1\u79d1\u5b66\u7814\u7a76\u65b9\u6cd5\uff0c\u901a\u8fc7\u4e09\u8f6e\u5faa\u73af\u9010\u6b65\u6574\u5408\u8bc1\u636e\uff1aFSE 2025\u7814\u8ba8\u4f1a\u8ba8\u8bba\u3001\u5feb\u901f\u6587\u732e\u7efc\u8ff0\u548c\u540c\u884c\u53cd\u9988\u4f1a\u8bae\u3002\u4f7f\u7528\u9ea6\u514b\u5362\u6c49\u56db\u5143\u6cd5\u4f5c\u4e3a\u6982\u5ff5\u5de5\u5177\u7cfb\u7edf\u5206\u6790GenAI\u5bf9SE\u7684\u5f71\u54cd\u3002", "result": "\u8bc6\u522b\u4e86GenAI\u5728SE\u4e2d\u7684\u56db\u79cd\u57fa\u672c\u589e\u5f3a\u5f62\u5f0f\uff0c\u7cfb\u7edf\u63cf\u8ff0\u4e86\u76f8\u5173\u7814\u7a76\u6311\u6218\u548c\u673a\u9047\uff0c\u5e76\u6574\u5408\u4e3a\u672a\u6765\u7814\u7a76\u65b9\u5411\u3002\u901a\u8fc7\u591a\u8f6e\u9a8c\u8bc1\u8fc7\u7a0b\u63d0\u4f9b\u4e86\u900f\u660e\u53ef\u590d\u73b0\u7684\u5206\u6790\u57fa\u7840\u3002", "conclusion": "\u7814\u7a76\u4e3a\u5206\u6790GenAI\u5982\u4f55\u5f71\u54cdSE\u6d41\u7a0b\u3001\u65b9\u6cd5\u548c\u5de5\u5177\u63d0\u4f9b\u4e86\u575a\u5b9e\u57fa\u7840\uff0c\u5e76\u4e3a\u8fd9\u4e00\u5feb\u901f\u53d1\u5c55\u9886\u57df\u7684\u672a\u6765\u7814\u7a76\u6784\u5efa\u4e86\u6846\u67b6\uff0c\u6700\u7ec8\u63d0\u51fa\u4e862030\u5e74\u8f6f\u4ef6\u5de5\u7a0b\u7684\u5341\u4e2a\u9884\u6d4b\u3002"}}
{"id": "2510.26287", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26287", "abs": "https://arxiv.org/abs/2510.26287", "authors": ["Guochang Li", "Yuchen Liu", "Zhen Qin", "Yunkun Wang", "Jianping Zhong", "Chen Zhi", "Binhua Li", "Fei Huang", "Yongbin Li", "Shuiguang Deng"], "title": "Empowering RepoQA-Agent based on Reinforcement Learning Driven by Monte-carlo Tree Search", "comment": null, "summary": "Repository-level software engineering tasks require large language models\n(LLMs) to efficiently navigate and extract information from complex codebases\nthrough multi-turn tool interactions. Existing approaches face significant\nlimitations: training-free, in-context learning methods struggle to guide\nagents effectively in tool utilization and decision-making based on\nenvironmental feedback, while training-based approaches typically rely on\ncostly distillation from larger LLMs, introducing data compliance concerns in\nenterprise environments. To address these challenges, we introduce\nRepoSearch-R1, a novel agentic reinforcement learning framework driven by\nMonte-carlo Tree Search (MCTS). This approach allows agents to generate\ndiverse, high-quality reasoning trajectories via self-training without\nrequiring model distillation or external supervision. Based on RepoSearch-R1,\nwe construct a RepoQA-Agent specifically designed for repository\nquestion-answering tasks. Comprehensive evaluation on repository\nquestion-answering tasks demonstrates that RepoSearch-R1 achieves substantial\nimprovements of answer completeness: 16.0% enhancement over no-retrieval\nmethods, 19.5% improvement over iterative retrieval methods, and 33% increase\nin training efficiency compared to general agentic reinforcement learning\napproaches. Our cold-start training methodology eliminates data compliance\nconcerns while maintaining robust exploration diversity and answer completeness\nacross repository-level reasoning tasks.", "AI": {"tldr": "RepoSearch-R1\u662f\u4e00\u4e2a\u57fa\u4e8e\u8499\u7279\u5361\u6d1b\u6811\u641c\u7d22\u7684\u5f3a\u5316\u5b66\u4e60\u6846\u67b6\uff0c\u7528\u4e8e\u89e3\u51b3\u4ed3\u5e93\u7ea7\u8f6f\u4ef6\u5de5\u7a0b\u4efb\u52a1\u4e2d\u7684\u4ee3\u7801\u5e93\u5bfc\u822a\u548c\u4fe1\u606f\u63d0\u53d6\u95ee\u9898\uff0c\u65e0\u9700\u6a21\u578b\u84b8\u998f\u6216\u5916\u90e8\u76d1\u7763\u3002", "motivation": "\u73b0\u6709\u65b9\u6cd5\u5b58\u5728\u663e\u8457\u9650\u5236\uff1a\u65e0\u8bad\u7ec3\u65b9\u6cd5\u96be\u4ee5\u6709\u6548\u6307\u5bfc\u4ee3\u7406\u5de5\u5177\u4f7f\u7528\u548c\u51b3\u7b56\uff0c\u57fa\u4e8e\u8bad\u7ec3\u7684\u65b9\u6cd5\u4f9d\u8d56\u5927\u6a21\u578b\u84b8\u998f\uff0c\u5b58\u5728\u4f01\u4e1a\u73af\u5883\u4e2d\u7684\u6570\u636e\u5408\u89c4\u95ee\u9898\u3002", "method": "\u5f15\u5165RepoSearch-R1\u6846\u67b6\uff0c\u57fa\u4e8e\u8499\u7279\u5361\u6d1b\u6811\u641c\u7d22\u7684\u5f3a\u5316\u5b66\u4e60\uff0c\u901a\u8fc7\u81ea\u8bad\u7ec3\u751f\u6210\u591a\u6837\u5316\u9ad8\u8d28\u91cf\u63a8\u7406\u8f68\u8ff9\uff0c\u6784\u5efa\u4e13\u95e8\u7528\u4e8e\u4ed3\u5e93\u95ee\u7b54\u4efb\u52a1\u7684RepoQA-Agent\u3002", "result": "\u5728\u4ed3\u5e93\u95ee\u7b54\u4efb\u52a1\u4e0a\uff0cRepoSearch-R1\u76f8\u6bd4\u65e0\u68c0\u7d22\u65b9\u6cd5\u63d0\u534716.0%\u7b54\u6848\u5b8c\u6574\u6027\uff0c\u6bd4\u8fed\u4ee3\u68c0\u7d22\u65b9\u6cd5\u63d0\u534719.5%\uff0c\u8bad\u7ec3\u6548\u7387\u6bd4\u901a\u7528\u5f3a\u5316\u5b66\u4e60\u65b9\u6cd5\u63d0\u9ad833%\u3002", "conclusion": "\u51b7\u542f\u52a8\u8bad\u7ec3\u65b9\u6cd5\u6d88\u9664\u4e86\u6570\u636e\u5408\u89c4\u95ee\u9898\uff0c\u540c\u65f6\u5728\u4ed3\u5e93\u7ea7\u63a8\u7406\u4efb\u52a1\u4e2d\u4fdd\u6301\u4e86\u5f3a\u5927\u7684\u63a2\u7d22\u591a\u6837\u6027\u548c\u7b54\u6848\u5b8c\u6574\u6027\u3002"}}
{"id": "2510.26413", "categories": ["cs.SE", "cs.DC"], "pdf": "https://arxiv.org/pdf/2510.26413", "abs": "https://arxiv.org/abs/2510.26413", "authors": ["Nuno Saavedra", "Alexandra Mendes", "Jo\u00e3o F. Ferreira"], "title": "Environmental Impact of CI/CD Pipelines", "comment": "This work has been submitted to the IEEE for possible publication", "summary": "CI/CD pipelines are widely used in software development, yet their\nenvironmental impact, particularly carbon and water footprints (CWF), remains\nlargely unknown to developers, as CI service providers typically do not\ndisclose such information. With the growing environmental impact of cloud\ncomputing, understanding the CWF of CI/CD services has become increasingly\nimportant.\n  This work investigates the CWF of using GitHub Actions, focusing on\nopen-source repositories where usage is free and unlimited for standard\nrunners. We build upon a methodology from the Cloud Carbon Footprint framework\nand we use the largest dataset of workflow runs reported in the literature to\ndate, comprising over 2.2 million workflow runs from more than 18,000\nrepositories.\n  Our analysis reveals that the GitHub Actions ecosystem results in a\nsubstantial CWF. Our estimates for the carbon footprint in 2024 range from\n150.5 MTCO2e in the most optimistic scenario to 994.9 MTCO2e in the most\npessimistic scenario, while the water footprint ranges from 1,989.6 to 37,664.5\nkiloliters. The most likely scenario estimates are 456.9 MTCO2e for carbon\nfootprint and 5,738.2 kiloliters for water footprint. To provide perspective,\nthe carbon footprint in the most likely scenario is equivalent to the carbon\ncaptured by 7,615 urban trees in a year, and the water footprint is comparable\nto the water consumed by an average American family over 5,053 years.\n  We explore strategies to mitigate this impact, primarily by reducing wasted\ncomputational resources. Key recommendations include deploying runners in\nregions whose energy production has a low environmental impact such as France\nand the United Kingdom, implementing stricter deactivation policies for\nscheduled runs and aligning their execution with periods when the regional\nenergy mix is more environmentally favorable, and reducing the size of\nrepositories.", "AI": {"tldr": "\u7814\u7a76GitHub Actions CI/CD\u7ba1\u9053\u7684\u78b3\u8db3\u8ff9\u548c\u6c34\u8db3\u8ff9\uff0c\u53d1\u73b0\u5176\u73af\u5883\u5f71\u54cd\u663e\u8457\uff0c\u5e76\u63d0\u51fa\u901a\u8fc7\u4f18\u5316\u8d44\u6e90\u914d\u7f6e\u3001\u9009\u62e9\u73af\u4fdd\u533a\u57df\u7b49\u7b56\u7565\u6765\u51cf\u5c11\u6d6a\u8d39\u3002", "motivation": "CI/CD\u7ba1\u9053\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u5e7f\u6cdb\u4f7f\u7528\uff0c\u4f46\u5176\u78b3\u8db3\u8ff9\u548c\u6c34\u8db3\u8ff9\u7b49\u73af\u5883\u5f71\u54cd\u901a\u5e38\u4e0d\u4e3a\u5f00\u53d1\u8005\u6240\u77e5\uff0c\u968f\u7740\u4e91\u8ba1\u7b97\u73af\u5883\u5f71\u54cd\u7684\u589e\u957f\uff0c\u4e86\u89e3\u8fd9\u4e9b\u8db3\u8ff9\u53d8\u5f97\u65e5\u76ca\u91cd\u8981\u3002", "method": "\u57fa\u4e8eCloud Carbon Footprint\u6846\u67b6\u7684\u65b9\u6cd5\u8bba\uff0c\u4f7f\u7528\u6587\u732e\u4e2d\u6700\u5927\u7684\u5de5\u4f5c\u6d41\u8fd0\u884c\u6570\u636e\u96c6\uff0c\u5305\u542b\u8d85\u8fc7220\u4e07\u6b21\u5de5\u4f5c\u6d41\u8fd0\u884c\u548c18,000\u591a\u4e2a\u4ed3\u5e93\u3002", "result": "GitHub Actions\u751f\u6001\u7cfb\u7edf\u4ea7\u751f\u663e\u8457\u7684\u78b3\u8db3\u8ff9\u548c\u6c34\u8db3\u8ff9\uff1a\u6700\u53ef\u80fd\u60c5\u666f\u4e0b\u78b3\u8db3\u8ff9\u4e3a456.9 MTCO2e\uff08\u76f8\u5f53\u4e8e7,615\u68f5\u57ce\u5e02\u6811\u6728\u4e00\u5e74\u7684\u78b3\u6355\u83b7\u91cf\uff09\uff0c\u6c34\u8db3\u8ff9\u4e3a5,738.2\u5343\u5347\uff08\u76f8\u5f53\u4e8e\u7f8e\u56fd\u5bb6\u5ead5,053\u5e74\u7684\u7528\u6c34\u91cf\uff09\u3002", "conclusion": "\u5efa\u8bae\u901a\u8fc7\u51cf\u5c11\u8ba1\u7b97\u8d44\u6e90\u6d6a\u8d39\u6765\u51cf\u8f7b\u73af\u5883\u5f71\u54cd\uff0c\u5305\u62ec\u5728\u6cd5\u56fd\u548c\u82f1\u56fd\u7b49\u4f4e\u73af\u5883\u5f71\u54cd\u533a\u57df\u90e8\u7f72\u8fd0\u884c\u5668\u3001\u4f18\u5316\u8c03\u5ea6\u6267\u884c\u65f6\u95f4\u4ee5\u53ca\u51cf\u5c0f\u4ed3\u5e93\u5927\u5c0f\u3002"}}
{"id": "2510.26423", "categories": ["cs.SE", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.26423", "abs": "https://arxiv.org/abs/2510.26423", "authors": ["Dong Huang", "Mingzhe Du", "Jie M. Zhang", "Zheng Lin", "Meng Luo", "Qianru Zhang", "See-Kiong Ng"], "title": "Nexus: Execution-Grounded Multi-Agent Test Oracle Synthesis", "comment": "Under Review", "summary": "Test oracle generation in non-regression testing is a longstanding challenge\nin software engineering, where the goal is to produce oracles that can\naccurately determine whether a function under test (FUT) behaves as intended\nfor a given input. In this paper, we introduce Nexus, a novel multi-agent\nframework to address this challenge. Nexus generates test oracles by leveraging\na diverse set of specialized agents that synthesize test oracles through a\nstructured process of deliberation, validation, and iterative self-refinement.\nDuring the deliberation phase, a panel of four specialist agents, each\nembodying a distinct testing philosophy, collaboratively critiques and refines\nan initial set of test oracles. Then, in the validation phase, Nexus generates\na plausible candidate implementation of the FUT and executes the proposed\noracles against it in a secure sandbox. For any oracle that fails this\nexecution-based check, Nexus activates an automated selfrefinement loop, using\nthe specific runtime error to debug and correct the oracle before\nre-validation. Our extensive evaluation on seven diverse benchmarks\ndemonstrates that Nexus consistently and substantially outperforms\nstate-of-theart baselines. For instance, Nexus improves the test-level oracle\naccuracy on the LiveCodeBench from 46.30% to 57.73% for GPT-4.1-Mini. The\nimproved accuracy also significantly enhances downstream tasks: the bug\ndetection rate of GPT4.1-Mini generated test oracles on HumanEval increases\nfrom 90.91% to 95.45% for Nexus compared to baselines, and the success rate of\nautomated program repair improves from 35.23% to 69.32%.", "AI": {"tldr": "Nexus\u662f\u4e00\u4e2a\u65b0\u9896\u7684\u591a\u667a\u80fd\u4f53\u6846\u67b6\uff0c\u7528\u4e8e\u751f\u6210\u6d4b\u8bd5\u9884\u8a00\uff0c\u901a\u8fc7\u4e13\u95e8\u5316\u667a\u80fd\u4f53\u7684\u7ed3\u6784\u5316\u5ba1\u8bae\u3001\u9a8c\u8bc1\u548c\u8fed\u4ee3\u81ea\u4f18\u5316\u8fc7\u7a0b\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6d4b\u8bd5\u9884\u8a00\u51c6\u786e\u7387\u548c\u4e0b\u6e38\u4efb\u52a1\u6027\u80fd\u3002", "motivation": "\u89e3\u51b3\u975e\u56de\u5f52\u6d4b\u8bd5\u4e2d\u6d4b\u8bd5\u9884\u8a00\u751f\u6210\u7684\u957f\u671f\u6311\u6218\uff0c\u5373\u5982\u4f55\u4e3a\u88ab\u6d4b\u51fd\u6570\u4ea7\u751f\u80fd\u591f\u51c6\u786e\u5224\u65ad\u5176\u884c\u4e3a\u662f\u5426\u7b26\u5408\u9884\u671f\u7684\u6d4b\u8bd5\u9884\u8a00\u3002", "method": "\u91c7\u7528\u591a\u667a\u80fd\u4f53\u6846\u67b6\uff0c\u5305\u542b\u56db\u4e2a\u4f53\u73b0\u4e0d\u540c\u6d4b\u8bd5\u7406\u5ff5\u7684\u4e13\u95e8\u5316\u667a\u80fd\u4f53\u8fdb\u884c\u534f\u4f5c\u5ba1\u8bae\uff0c\u751f\u6210\u5019\u9009FUT\u5b9e\u73b0\u5e76\u5728\u5b89\u5168\u6c99\u7bb1\u4e2d\u6267\u884c\u9a8c\u8bc1\uff0c\u5bf9\u5931\u8d25\u7684\u9884\u8a00\u8fdb\u884c\u81ea\u52a8\u5316\u8c03\u8bd5\u548c\u4fee\u6b63\u7684\u8fed\u4ee3\u81ea\u4f18\u5316\u5faa\u73af\u3002", "result": "\u5728\u4e03\u4e2a\u4e0d\u540c\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0cNexus\u59cb\u7ec8\u663e\u8457\u4f18\u4e8e\u6700\u5148\u8fdb\u7684\u57fa\u7ebf\u65b9\u6cd5\u3002\u4f8b\u5982\uff0c\u5728LiveCodeBench\u4e0a\u5c06GPT-4.1-Mini\u7684\u6d4b\u8bd5\u7ea7\u9884\u8a00\u51c6\u786e\u7387\u4ece46.30%\u63d0\u5347\u81f357.73%\uff0c\u5728HumanEval\u4e0a\u5c06\u9519\u8bef\u68c0\u6d4b\u7387\u4ece90.91%\u63d0\u5347\u81f395.45%\uff0c\u81ea\u52a8\u7a0b\u5e8f\u4fee\u590d\u6210\u529f\u7387\u4ece35.23%\u63d0\u5347\u81f369.32%\u3002", "conclusion": "Nexus\u6846\u67b6\u901a\u8fc7\u591a\u667a\u80fd\u4f53\u534f\u4f5c\u548c\u8fed\u4ee3\u81ea\u4f18\u5316\u673a\u5236\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u6d4b\u8bd5\u9884\u8a00\u751f\u6210\u95ee\u9898\uff0c\u663e\u8457\u63d0\u5347\u4e86\u9884\u8a00\u51c6\u786e\u7387\u548c\u4e0b\u6e38\u4efb\u52a1\u7684\u6027\u80fd\u8868\u73b0\u3002"}}
{"id": "2510.26457", "categories": ["cs.SE", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2510.26457", "abs": "https://arxiv.org/abs/2510.26457", "authors": ["Fang Liu", "Simiao Liu", "Yinghao Zhu", "Xiaoli Lian", "Li Zhang"], "title": "SecureReviewer: Enhancing Large Language Models for Secure Code Review through Secure-aware Fine-tuning", "comment": "Accepted by ICSE 2026. Code and data:\n  https://github.com/SIMIAO515/SecureReviewer", "summary": "Identifying and addressing security issues during the early phase of the\ndevelopment lifecycle is critical for mitigating the long-term negative impacts\non software systems. Code review serves as an effective practice that enables\ndevelopers to check their teammates' code before integration into the codebase.\nTo streamline the generation of review comments, various automated code review\napproaches have been proposed, where LLM-based methods have significantly\nadvanced the capabilities of automated review generation. However, existing\nmodels primarily focus on general-purpose code review, their effectiveness in\nidentifying and addressing security-related issues remains underexplored.\nMoreover, adapting existing code review approaches to target security issues\nfaces substantial challenges, including data scarcity and inadequate evaluation\nmetrics. To address these limitations, we propose SecureReviewer, a new\napproach designed for enhancing LLMs' ability to identify and resolve\nsecurity-related issues during code review. Specifically, we first construct a\ndataset tailored for training and evaluating secure code review capabilities.\nLeveraging this dataset, we fine-tune LLMs to generate code review comments\nthat can effectively identify security issues and provide fix suggestions with\nour proposed secure-aware fine-tuning strategy. To mitigate hallucination in\nLLMs and enhance the reliability of their outputs, we integrate the RAG\ntechnique, which grounds the generated comments in domain-specific security\nknowledge. Additionally, we introduce SecureBLEU, a new evaluation metric\ndesigned to assess the effectiveness of review comments in addressing security\nissues. Experimental results demonstrate that SecureReviewer outperforms\nstate-of-the-art baselines in both security issue detection accuracy and the\noverall quality and practical utility of generated review comments.", "AI": {"tldr": "SecureReviewer\u662f\u4e00\u4e2a\u9488\u5bf9\u5b89\u5168\u4ee3\u7801\u5ba1\u67e5\u7684LLM\u589e\u5f3a\u65b9\u6cd5\uff0c\u901a\u8fc7\u6784\u5efa\u4e13\u7528\u6570\u636e\u96c6\u3001\u5b89\u5168\u611f\u77e5\u5fae\u8c03\u548cRAG\u6280\u672f\uff0c\u63d0\u5347LLM\u5728\u8bc6\u522b\u548c\u89e3\u51b3\u5b89\u5168\u95ee\u9898\u65b9\u9762\u7684\u80fd\u529b\uff0c\u5e76\u5f15\u5165SecureBLEU\u8bc4\u4f30\u6307\u6807\u3002", "motivation": "\u73b0\u6709\u4ee3\u7801\u5ba1\u67e5\u65b9\u6cd5\u4e3b\u8981\u5173\u6ce8\u901a\u7528\u76ee\u7684\u5ba1\u67e5\uff0c\u5728\u8bc6\u522b\u548c\u89e3\u51b3\u5b89\u5168\u76f8\u5173\u95ee\u9898\u65b9\u9762\u6548\u679c\u6709\u9650\uff0c\u4e14\u9762\u4e34\u6570\u636e\u7a00\u7f3a\u548c\u8bc4\u4f30\u6307\u6807\u4e0d\u8db3\u7684\u6311\u6218\u3002", "method": "\u6784\u5efa\u5b89\u5168\u4ee3\u7801\u5ba1\u67e5\u4e13\u7528\u6570\u636e\u96c6\uff0c\u91c7\u7528\u5b89\u5168\u611f\u77e5\u5fae\u8c03\u7b56\u7565\u8bad\u7ec3LLM\uff0c\u96c6\u6210RAG\u6280\u672f\u51cf\u5c11\u5e7b\u89c9\u5e76\u589e\u5f3a\u8f93\u51fa\u53ef\u9760\u6027\uff0c\u5f15\u5165SecureBLEU\u8bc4\u4f30\u6307\u6807\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u8868\u660eSecureReviewer\u5728\u5b89\u5168\u6f0f\u6d1e\u68c0\u6d4b\u51c6\u786e\u6027\u548c\u751f\u6210\u5ba1\u67e5\u8bc4\u8bba\u7684\u6574\u4f53\u8d28\u91cf\u53ca\u5b9e\u7528\u6027\u65b9\u9762\u4f18\u4e8e\u73b0\u6709\u6700\u4f18\u57fa\u7ebf\u65b9\u6cd5\u3002", "conclusion": "SecureReviewer\u901a\u8fc7\u4e13\u95e8\u7684\u6570\u636e\u96c6\u3001\u5fae\u8c03\u7b56\u7565\u548c\u8bc4\u4f30\u6307\u6807\uff0c\u6709\u6548\u63d0\u5347\u4e86LLM\u5728\u5b89\u5168\u4ee3\u7801\u5ba1\u67e5\u4e2d\u7684\u80fd\u529b\uff0c\u4e3a\u8f6f\u4ef6\u5b89\u5168\u5f00\u53d1\u63d0\u4f9b\u4e86\u6709\u529b\u652f\u6301\u3002"}}
{"id": "2510.26480", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26480", "abs": "https://arxiv.org/abs/2510.26480", "authors": ["Sivajeet Chand", "Melih Kilic", "Roland W\u00fcrsching", "Sushant Kumar Pandey", "Alexander Pretschner"], "title": "Automated Extract Method Refactoring with Open-Source LLMs: A Comparative Study", "comment": "Accepted at AIware'25 - Main Track", "summary": "Automating the Extract Method refactoring (EMR) remains challenging and\nlargely manual despite its importance in improving code readability and\nmaintainability. Recent advances in open-source, resource-efficient Large\nLanguage Models (LLMs) offer promising new approaches for automating such\nhigh-level tasks. In this work, we critically evaluate five state-of-the-art\nopen-source LLMs, spanning 3B to 8B parameter sizes, on the EMR task for Python\ncode. We systematically assess functional correctness and code quality using\nautomated metrics and investigate the impact of prompting strategies by\ncomparing one-shot prompting to a Recursive criticism and improvement (RCI)\napproach. RCI-based prompting consistently outperforms one-shot prompting in\ntest pass rates and refactoring quality. The best-performing models,\nDeepseek-Coder-RCI and Qwen2.5-Coder-RCI, achieve test pass percentage (TPP)\nscores of 0.829 and 0.808, while reducing lines of code (LOC) per method from\n12.103 to 6.192 and 5.577, and cyclomatic complexity (CC) from 4.602 to 3.453\nand 3.294, respectively. A developer survey on RCI-generated refactorings shows\nover 70% acceptance, with Qwen2.5-Coder rated highest across all evaluation\ncriteria. In contrast, the original code scored below neutral, particularly in\nreadability and maintainability, underscoring the benefits of automated\nrefactoring guided by quality prompts. While traditional metrics like CC and\nLOC provide useful signals, they often diverge from human judgments,\nemphasizing the need for human-in-the-loop evaluation. Our open-source\nbenchmark offers a foundation for future research on automated refactoring with\nLLMs.", "AI": {"tldr": "\u8bc4\u4f305\u4e2a\u5f00\u6e90LLM\u5728Python\u4ee3\u7801Extract Method\u91cd\u6784\u4efb\u52a1\u4e0a\u7684\u8868\u73b0\uff0c\u53d1\u73b0RCI\u63d0\u793a\u7b56\u7565\u4f18\u4e8e\u5355\u6b21\u63d0\u793a\uff0c\u6700\u4f73\u6a21\u578b\u6d4b\u8bd5\u901a\u8fc7\u7387\u8fbe82.9%\uff0c\u663e\u8457\u964d\u4f4e\u4ee3\u7801\u884c\u6570\u548c\u590d\u6742\u5ea6\uff0c\u5f00\u53d1\u8005\u8c03\u67e5\u663e\u793a70%\u4ee5\u4e0a\u63a5\u53d7\u5ea6\u3002", "motivation": "\u81ea\u52a8\u5316Extract Method\u91cd\u6784\u4ecd\u7136\u5177\u6709\u6311\u6218\u6027\uff0c\u5f00\u6e90\u9ad8\u6548LLM\u4e3a\u81ea\u52a8\u5316\u6b64\u7c7b\u9ad8\u7ea7\u4efb\u52a1\u63d0\u4f9b\u4e86\u65b0\u65b9\u6cd5\u3002", "method": "\u7cfb\u7edf\u8bc4\u4f305\u4e2a3B-8B\u53c2\u6570\u7684\u5f00\u6e90LLM\uff0c\u4f7f\u7528\u81ea\u52a8\u6307\u6807\u8bc4\u4f30\u529f\u80fd\u6b63\u786e\u6027\u548c\u4ee3\u7801\u8d28\u91cf\uff0c\u6bd4\u8f83\u5355\u6b21\u63d0\u793a\u4e0eRCI\u63d0\u793a\u7b56\u7565\u7684\u6548\u679c\u3002", "result": "RCI\u63d0\u793a\u5728\u6d4b\u8bd5\u901a\u8fc7\u7387\u548c\u91cd\u6784\u8d28\u91cf\u4e0a\u8868\u73b0\u66f4\u597d\uff0c\u6700\u4f73\u6a21\u578b\u6d4b\u8bd5\u901a\u8fc7\u738782.9%\uff0c\u4ee3\u7801\u884c\u6570\u4ece12.1\u964d\u81f35.6\uff0c\u590d\u6742\u5ea6\u4ece4.6\u964d\u81f33.3\uff0c\u5f00\u53d1\u8005\u8c03\u67e570%\u4ee5\u4e0a\u63a5\u53d7\u3002", "conclusion": "RCI\u63d0\u793a\u7b56\u7565\u80fd\u6709\u6548\u63d0\u5347\u81ea\u52a8\u5316\u91cd\u6784\u8d28\u91cf\uff0c\u4f20\u7edf\u6307\u6807\u4e0e\u4eba\u5de5\u8bc4\u4f30\u5b58\u5728\u5dee\u5f02\uff0c\u9700\u8981\u4eba\u673a\u534f\u540c\u8bc4\u4f30\uff0c\u5f00\u6e90\u57fa\u51c6\u4e3a\u672a\u6765LLM\u81ea\u52a8\u5316\u91cd\u6784\u7814\u7a76\u63d0\u4f9b\u57fa\u7840\u3002"}}
{"id": "2510.26516", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26516", "abs": "https://arxiv.org/abs/2510.26516", "authors": ["Truong Hai Dang", "Jingyu Xiao", "Yintong Huo"], "title": "Envisioning Future Interactive Web Development: Editing Webpage with Natural Language", "comment": "accepted by AIWare'25", "summary": "The evolution of web applications relies on iterative code modifications, a\nprocess that is traditionally manual and time-consuming. While Large Language\nModels (LLMs) can generate UI code, their ability to edit existing code from\nnew design requirements (e.g., \"center the logo\") remains a challenge. This is\nlargely due to the absence of large-scale, high-quality tuning data to align\nmodel performance with human expectations. In this paper, we introduce a novel,\nautomated data generation pipeline that uses LLMs to synthesize a high-quality\nfine-tuning dataset for web editing, named Instruct4Edit. Our approach\ngenerates diverse instructions, applies the corresponding code modifications,\nand performs visual verification to ensure correctness. By fine-tuning models\non Instruct4Edit, we demonstrate consistent improvement in translating human\nintent into precise, structurally coherent, and visually accurate code changes.\nThis work provides a scalable and transparent foundation for natural language\nbased web editing, demonstrating that fine-tuning smaller open-source models\ncan achieve competitive performance with proprietary systems. We release all\ndata, code implementations, and model checkpoints for reproduction.", "AI": {"tldr": "\u63d0\u51faInstruct4Edit\u81ea\u52a8\u6570\u636e\u751f\u6210\u7ba1\u9053\uff0c\u4f7f\u7528LLM\u5408\u6210\u9ad8\u8d28\u91cf\u7f51\u9875\u7f16\u8f91\u5fae\u8c03\u6570\u636e\u96c6\uff0c\u901a\u8fc7\u5fae\u8c03\u4f7f\u6a21\u578b\u80fd\u66f4\u597d\u7406\u89e3\u4eba\u7c7b\u610f\u56fe\u5e76\u751f\u6210\u7cbe\u786e\u7684\u4ee3\u7801\u4fee\u6539", "motivation": "\u7f51\u9875\u5e94\u7528\u5f00\u53d1\u4f9d\u8d56\u8fed\u4ee3\u5f0f\u4ee3\u7801\u4fee\u6539\uff0c\u4f20\u7edf\u65b9\u6cd5\u8017\u65f6\u4e14\u624b\u52a8\u3002LLM\u80fd\u751f\u6210UI\u4ee3\u7801\uff0c\u4f46\u6839\u636e\u65b0\u8bbe\u8ba1\u9700\u6c42\u7f16\u8f91\u73b0\u6709\u4ee3\u7801\u4ecd\u5177\u6311\u6218\uff0c\u4e3b\u8981\u7f3a\u4e4f\u5927\u89c4\u6a21\u9ad8\u8d28\u91cf\u5fae\u8c03\u6570\u636e", "method": "\u6784\u5efa\u81ea\u52a8\u5316\u6570\u636e\u751f\u6210\u7ba1\u9053\uff1a\u751f\u6210\u591a\u6837\u5316\u6307\u4ee4\u3001\u5e94\u7528\u76f8\u5e94\u4ee3\u7801\u4fee\u6539\u3001\u8fdb\u884c\u89c6\u89c9\u9a8c\u8bc1\u786e\u4fdd\u6b63\u786e\u6027\uff0c\u521b\u5efaInstruct4Edit\u6570\u636e\u96c6\u7528\u4e8e\u5fae\u8c03", "result": "\u5728Instruct4Edit\u4e0a\u5fae\u8c03\u7684\u6a21\u578b\u5728\u5c06\u4eba\u7c7b\u610f\u56fe\u8f6c\u5316\u4e3a\u7cbe\u786e\u3001\u7ed3\u6784\u8fde\u8d2f\u4e14\u89c6\u89c9\u51c6\u786e\u7684\u4ee3\u7801\u4fee\u6539\u65b9\u9762\u8868\u73b0\u4e00\u81f4\u63d0\u5347", "conclusion": "\u4e3a\u57fa\u4e8e\u81ea\u7136\u8bed\u8a00\u7684\u7f51\u9875\u7f16\u8f91\u63d0\u4f9b\u4e86\u53ef\u6269\u5c55\u4e14\u900f\u660e\u7684\u57fa\u7840\uff0c\u8bc1\u660e\u5fae\u8c03\u8f83\u5c0f\u7684\u5f00\u6e90\u6a21\u578b\u80fd\u8fbe\u5230\u4e0e\u4e13\u6709\u7cfb\u7edf\u7ade\u4e89\u7684\u6027\u80fd"}}
{"id": "2510.26538", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26538", "abs": "https://arxiv.org/abs/2510.26538", "authors": ["David Williams", "Max Hort", "Maria Kechagia", "Aldeida Aleti", "Justyna Petke", "Federica Sarro"], "title": "Reflecting on Empirical and Sustainability Aspects of Software Engineering Research in the Era of Large Language Models", "comment": "5 pages", "summary": "Software Engineering (SE) research involving the use of Large Language Models\n(LLMs) has introduced several new challenges related to rigour in benchmarking,\ncontamination, replicability, and sustainability. In this paper, we invite the\nresearch community to reflect on how these challenges are addressed in SE. Our\nresults provide a structured overview of current LLM-based SE research at ICSE,\nhighlighting both encouraging practices and persistent shortcomings. We\nconclude with recommendations to strengthen benchmarking rigour, improve\nreplicability, and address the financial and environmental costs of LLM-based\nSE.", "AI": {"tldr": "\u672c\u6587\u5206\u6790\u4e86\u8f6f\u4ef6\u5de5\u7a0b\u7814\u7a76\u4e2d\u4f7f\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b\u5e26\u6765\u7684\u6311\u6218\uff0c\u5305\u62ec\u57fa\u51c6\u6d4b\u8bd5\u4e25\u8c28\u6027\u3001\u6570\u636e\u6c61\u67d3\u3001\u53ef\u590d\u73b0\u6027\u548c\u53ef\u6301\u7eed\u6027\u95ee\u9898\uff0c\u5e76\u63d0\u51fa\u4e86\u6539\u8fdb\u5efa\u8bae\u3002", "motivation": "\u8f6f\u4ef6\u5de5\u7a0b\u7814\u7a76\u4e2d\u4f7f\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b\u5f15\u5165\u4e86\u57fa\u51c6\u6d4b\u8bd5\u4e25\u8c28\u6027\u3001\u6570\u636e\u6c61\u67d3\u3001\u53ef\u590d\u73b0\u6027\u548c\u53ef\u6301\u7eed\u6027\u7b49\u65b0\u6311\u6218\uff0c\u9700\u8981\u7814\u7a76\u793e\u533a\u53cd\u601d\u8fd9\u4e9b\u95ee\u9898\u3002", "method": "\u901a\u8fc7\u7ed3\u6784\u5316\u5206\u6790\u5f53\u524dICSE\u4f1a\u8bae\u4e0a\u7684LLM-based\u8f6f\u4ef6\u5de5\u7a0b\u7814\u7a76\uff0c\u8bc6\u522b\u826f\u597d\u5b9e\u8df5\u548c\u6301\u7eed\u5b58\u5728\u7684\u7f3a\u9677\u3002", "result": "\u7814\u7a76\u7ed3\u679c\u63d0\u4f9b\u4e86\u5f53\u524dLLM-based\u8f6f\u4ef6\u5de5\u7a0b\u7814\u7a76\u7684\u7ed3\u6784\u5316\u6982\u89c8\uff0c\u7a81\u51fa\u4e86\u4ee4\u4eba\u9f13\u821e\u7684\u5b9e\u8df5\u548c\u6301\u7eed\u5b58\u5728\u7684\u4e0d\u8db3\u3002", "conclusion": "\u5efa\u8bae\u52a0\u5f3a\u57fa\u51c6\u6d4b\u8bd5\u4e25\u8c28\u6027\u3001\u63d0\u9ad8\u53ef\u590d\u73b0\u6027\uff0c\u5e76\u89e3\u51b3LLM-based\u8f6f\u4ef6\u5de5\u7a0b\u7684\u8d22\u52a1\u548c\u73af\u5883\u6210\u672c\u95ee\u9898\u3002"}}
{"id": "2510.26576", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26576", "abs": "https://arxiv.org/abs/2510.26576", "authors": ["Filippo Scaramuzza", "Renato Cordeiro Ferreira", "Tomaz Maia Suller", "Giovanni Quattrocchi", "Damian Andrew Tamburri", "Willem-Jan van den Heuvel"], "title": "\"Show Me You Comply... Without Showing Me Anything\": Zero-Knowledge Software Auditing for AI-Enabled Systems", "comment": "This work has been submitted to the ACM Transactions on Software\n  Engineering and Methodology for possible publication", "summary": "The increasing exploitation of Artificial Intelligence (AI) enabled systems\nin critical domains has made trustworthiness concerns a paramount showstopper,\nrequiring verifiable accountability, often by regulation (e.g., the EU AI Act).\nClassical software verification and validation techniques, such as procedural\naudits, formal methods, or model documentation, are the mechanisms used to\nachieve this. However, these methods are either expensive or heavily manual and\nill-suited for the opaque, \"black box\" nature of most AI models. An intractable\nconflict emerges: high auditability and verifiability are required by law, but\nsuch transparency conflicts with the need to protect assets being audited-e.g.,\nconfidential data and proprietary models-leading to weakened accountability. To\naddress this challenge, this paper introduces ZKMLOps, a novel MLOps\nverification framework that operationalizes Zero-Knowledge Proofs\n(ZKPs)-cryptographic protocols allowing a prover to convince a verifier that a\nstatement is true without revealing additional information-within\nMachine-Learning Operations lifecycles. By integrating ZKPs with established\nsoftware engineering patterns, ZKMLOps provides a modular and repeatable\nprocess for generating verifiable cryptographic proof of compliance. We\nevaluate the framework's practicality through a study of regulatory compliance\nin financial risk auditing and assess feasibility through an empirical\nevaluation of top ZKP protocols, analyzing performance trade-offs for ML models\nof increasing complexity.", "AI": {"tldr": "ZKMLOps\u662f\u4e00\u4e2a\u57fa\u4e8e\u96f6\u77e5\u8bc6\u8bc1\u660e\u7684MLOps\u9a8c\u8bc1\u6846\u67b6\uff0c\u901a\u8fc7\u5bc6\u7801\u5b66\u534f\u8bae\u5728\u4e0d\u6cc4\u9732\u654f\u611f\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\u9a8c\u8bc1AI\u7cfb\u7edf\u7684\u5408\u89c4\u6027\uff0c\u89e3\u51b3\u4e86AI\u5ba1\u8ba1\u4e2d\u7684\u900f\u660e\u5ea6\u4e0e\u9690\u79c1\u4fdd\u62a4\u51b2\u7a81\u3002", "motivation": "AI\u7cfb\u7edf\u5728\u5173\u952e\u9886\u57df\u7684\u5e94\u7528\u9762\u4e34\u53ef\u4fe1\u5ea6\u6311\u6218\uff0c\u4f20\u7edf\u9a8c\u8bc1\u65b9\u6cd5\u6210\u672c\u9ad8\u4e14\u4e0d\u9002\u5408AI\u9ed1\u76d2\u7279\u6027\uff0c\u540c\u65f6\u900f\u660e\u5ea6\u8981\u6c42\u4e0e\u6570\u636e/\u6a21\u578b\u4fdd\u62a4\u4e4b\u95f4\u5b58\u5728\u51b2\u7a81\u3002", "method": "\u5c06\u96f6\u77e5\u8bc6\u8bc1\u660e\u96c6\u6210\u5230\u673a\u5668\u5b66\u4e60\u8fd0\u7ef4\u751f\u547d\u5468\u671f\u4e2d\uff0c\u7ed3\u5408\u8f6f\u4ef6\u5de5\u7a0b\u6a21\u5f0f\uff0c\u63d0\u4f9b\u6a21\u5757\u5316\u3001\u53ef\u91cd\u590d\u7684\u5408\u89c4\u6027\u5bc6\u7801\u8bc1\u660e\u751f\u6210\u6d41\u7a0b\u3002", "result": "\u901a\u8fc7\u91d1\u878d\u98ce\u9669\u5ba1\u8ba1\u6848\u4f8b\u9a8c\u8bc1\u4e86\u6846\u67b6\u5b9e\u7528\u6027\uff0c\u5e76\u5bf9\u4e3b\u6d41ZKP\u534f\u8bae\u8fdb\u884c\u4e86\u5b9e\u8bc1\u8bc4\u4f30\uff0c\u5206\u6790\u4e86\u4e0d\u540c\u590d\u6742\u5ea6ML\u6a21\u578b\u7684\u6027\u80fd\u6743\u8861\u3002", "conclusion": "ZKMLOps\u6846\u67b6\u4e3aAI\u7cfb\u7edf\u63d0\u4f9b\u4e86\u53ef\u9a8c\u8bc1\u7684\u95ee\u8d23\u673a\u5236\uff0c\u5728\u4fdd\u62a4\u654f\u611f\u8d44\u4ea7\u7684\u540c\u65f6\u6ee1\u8db3\u76d1\u7ba1\u5408\u89c4\u8981\u6c42\u3002"}}
{"id": "2510.26579", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26579", "abs": "https://arxiv.org/abs/2510.26579", "authors": ["Nathanael Nussbaumer", "Markus B\u00f6ck", "J\u00fcrgen Cito"], "title": "Online and Interactive Bayesian Inference Debugging", "comment": "Accepted by ICSE 2026", "summary": "Probabilistic programming is a rapidly developing programming paradigm which\nenables the formulation of Bayesian models as programs and the automation of\nposterior inference. It facilitates the development of models and conducting\nBayesian inference, which makes these techniques available to practitioners\nfrom multiple fields. Nevertheless, probabilistic programming is notoriously\ndifficult as identifying and repairing issues with inference requires a lot of\ntime and deep knowledge. Through this work, we introduce a novel approach to\ndebugging Bayesian inference that reduces time and required knowledge\nsignificantly. We discuss several requirements a Bayesian inference debugging\nframework has to fulfill, and propose a new tool that meets these key\nrequirements directly within the development environment. We evaluate our\nresults in a study with 18 experienced participants and show that our approach\nto online and interactive debugging of Bayesian inference significantly reduces\ntime and difficulty on inference debugging tasks.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u9896\u7684\u8d1d\u53f6\u65af\u63a8\u65ad\u8c03\u8bd5\u65b9\u6cd5\uff0c\u901a\u8fc7\u5728\u5f00\u53d1\u73af\u5883\u4e2d\u76f4\u63a5\u96c6\u6210\u8c03\u8bd5\u5de5\u5177\uff0c\u663e\u8457\u51cf\u5c11\u4e86\u8c03\u8bd5\u65f6\u95f4\u548c\u6240\u9700\u4e13\u4e1a\u77e5\u8bc6\u3002", "motivation": "\u6982\u7387\u7f16\u7a0b\u867d\u7136\u4fbf\u4e8e\u6784\u5efa\u8d1d\u53f6\u65af\u6a21\u578b\u548c\u8fdb\u884c\u540e\u9a8c\u63a8\u65ad\uff0c\u4f46\u63a8\u65ad\u8c03\u8bd5\u8fc7\u7a0b\u975e\u5e38\u56f0\u96be\uff0c\u9700\u8981\u5927\u91cf\u65f6\u95f4\u548c\u6df1\u539a\u77e5\u8bc6\u3002", "method": "\u63d0\u51fa\u4e86\u6ee1\u8db3\u8d1d\u53f6\u65af\u63a8\u65ad\u8c03\u8bd5\u6846\u67b6\u8981\u6c42\u7684\u5728\u7ebf\u4ea4\u4e92\u5f0f\u8c03\u8bd5\u5de5\u5177\uff0c\u76f4\u63a5\u5728\u5f00\u53d1\u73af\u5883\u4e2d\u5b9e\u73b0\u3002", "result": "\u572818\u4f4d\u6709\u7ecf\u9a8c\u53c2\u4e0e\u8005\u7684\u7814\u7a76\u4e2d\uff0c\u8be5\u65b9\u6cd5\u663e\u8457\u51cf\u5c11\u4e86\u63a8\u65ad\u8c03\u8bd5\u4efb\u52a1\u7684\u65f6\u95f4\u548c\u96be\u5ea6\u3002", "conclusion": "\u8fd9\u79cd\u5728\u7ebf\u4ea4\u4e92\u5f0f\u8d1d\u53f6\u65af\u63a8\u65ad\u8c03\u8bd5\u65b9\u6cd5\u80fd\u591f\u6709\u6548\u964d\u4f4e\u8c03\u8bd5\u95e8\u69db\uff0c\u63d0\u9ad8\u6548\u7387\u3002"}}
{"id": "2510.26634", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26634", "abs": "https://arxiv.org/abs/2510.26634", "authors": ["Yuan Si", "Kyle Qi", "Daming Li", "Hanyuan Shi", "Jialu Zhang"], "title": "Stitch: Step-by-step LLM Guided Tutoring for Scratch", "comment": null, "summary": "Block-based environments such as Scratch are increasingly popular in\nprogramming education. While block syntax reduces surface errors, semantic bugs\nremain common and challenging for novices to resolve. Existing debugging\nworkflows typically show the correct program directly to learners, a strategy\nthat may fix errors but undermines the development of problem-solving skills.\n  We present Stitch, an interactive tutoring system that replaces \"showing the\nanswer\" with step-by-step scaffolding. The system's Diff-Analyze module\ncontrasts a student's project with a reference implementation, identifies the\nmost critical differences, and uses a large language model to explain why these\nchanges matter. Learners inspect highlighted blocks through a custom rendering\nengine, understand the explanations, and selectively apply partial fixes. This\niterative process continues until the intended functionality is achieved.\n  We evaluate Stitch in an empirical study, comparing it against a\nstate-of-the-art automated feedback generation tool for Scratch. Our key\ninsight is that simply presenting the correct program is pedagogically\nineffective. In contrast, our interactive, step-by-step guided system promotes\na more effective learning experience. More broadly, what constitutes effective\nfeedback in block-based programming remains an open question. Our evaluation\nprovides new evidence that step-by-step tutoring significantly enhances\nlearning outcomes, outperforming both direct-answer approaches and current\nautomated feedback generation tools.", "AI": {"tldr": "Stitch\u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7f16\u7a0b\u6559\u5b66\u7cfb\u7edf\uff0c\u901a\u8fc7\u9010\u6b65\u5f15\u5bfc\u800c\u975e\u76f4\u63a5\u5c55\u793a\u6b63\u786e\u7b54\u6848\u6765\u5e2e\u52a9\u521d\u5b66\u8005\u8c03\u8bd5Scratch\u7a0b\u5e8f\u4e2d\u7684\u8bed\u4e49\u9519\u8bef\u3002", "motivation": "\u73b0\u6709\u7684\u8c03\u8bd5\u65b9\u6cd5\u901a\u5e38\u76f4\u63a5\u5411\u5b66\u4e60\u8005\u5c55\u793a\u6b63\u786e\u7a0b\u5e8f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u867d\u7136\u80fd\u4fee\u590d\u9519\u8bef\uff0c\u4f46\u524a\u5f31\u4e86\u95ee\u9898\u89e3\u51b3\u80fd\u529b\u7684\u57f9\u517b\u3002\u9700\u8981\u4e00\u79cd\u66f4\u6709\u6548\u7684\u6559\u5b66\u53cd\u9988\u65b9\u5f0f\u3002", "method": "\u7cfb\u7edf\u901a\u8fc7Diff-Analyze\u6a21\u5757\u5bf9\u6bd4\u5b66\u751f\u9879\u76ee\u4e0e\u53c2\u8003\u5b9e\u73b0\uff0c\u8bc6\u522b\u5173\u952e\u5dee\u5f02\uff0c\u4f7f\u7528\u5927\u8bed\u8a00\u6a21\u578b\u89e3\u91ca\u8fd9\u4e9b\u53d8\u5316\u7684\u91cd\u8981\u6027\u3002\u5b66\u4e60\u8005\u901a\u8fc7\u81ea\u5b9a\u4e49\u6e32\u67d3\u5f15\u64ce\u68c0\u67e5\u9ad8\u4eae\u5757\uff0c\u7406\u89e3\u89e3\u91ca\u5e76\u9009\u62e9\u6027\u5e94\u7528\u90e8\u5206\u4fee\u590d\u3002", "result": "\u4e0e\u6700\u5148\u8fdb\u7684\u81ea\u52a8\u53cd\u9988\u751f\u6210\u5de5\u5177\u76f8\u6bd4\uff0cStitch\u7684\u9010\u6b65\u5f15\u5bfc\u7cfb\u7edf\u63d0\u4f9b\u4e86\u66f4\u6709\u6548\u7684\u5b66\u4e60\u4f53\u9a8c\uff0c\u663e\u8457\u63d0\u5347\u4e86\u5b66\u4e60\u6548\u679c\u3002", "conclusion": "\u5728\u57fa\u4e8e\u5757\u7684\u7f16\u7a0b\u73af\u5883\u4e2d\uff0c\u9010\u6b65\u8f85\u5bfc\u6bd4\u76f4\u63a5\u5c55\u793a\u7b54\u6848\u548c\u73b0\u6709\u81ea\u52a8\u53cd\u9988\u5de5\u5177\u66f4\u80fd\u6709\u6548\u4fc3\u8fdb\u5b66\u4e60\uff0c\u4e3a\u7f16\u7a0b\u6559\u80b2\u53cd\u9988\u7684\u6709\u6548\u6027\u63d0\u4f9b\u4e86\u65b0\u8bc1\u636e\u3002"}}
{"id": "2510.26676", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26676", "abs": "https://arxiv.org/abs/2510.26676", "authors": ["Samiha Shimmi", "Nicholas M. Synovic", "Mona Rahimi", "George K. Thiruvathukal"], "title": "Process-based Indicators of Vulnerability Re-Introducing Code Changes: An Exploratory Case Study", "comment": "9 pages, 6 figures; Samiha Shimmi and Nicholas M. Synovic contributed\n  equally to this work (co-first authors); Mona Rahimi and George K.\n  Thiruvathukal contributed equally to this work (co-supervisors)", "summary": "Software vulnerabilities often persist or re-emerge even after being fixed,\nrevealing the complex interplay between code evolution and socio-technical\nfactors. While source code metrics provide useful indicators of\nvulnerabilities, software engineering process metrics can uncover patterns that\nlead to their introduction. Yet few studies have explored whether process\nmetrics can reveal risky development activities over time -- insights that are\nessential for anticipating and mitigating software vulnerabilities. This work\nhighlights the critical role of process metrics along with code changes in\nunderstanding and mitigating vulnerability reintroduction. We move beyond\nfile-level prediction and instead analyze security fixes at the commit level,\nfocusing not only on whether a single fix introduces a vulnerability but also\non the longer sequences of changes through which vulnerabilities evolve and\nre-emerge. Our approach emphasizes that reintroduction is rarely the result of\none isolated action, but emerges from cumulative development activities and\nsocio-technical conditions. To support this analysis, we conducted a case study\non the ImageMagick project by correlating longitudinal process metrics such as\nbus factor, issue density, and issue spoilage with vulnerability reintroduction\nactivities, encompassing 76 instances of reintroduced vulnerabilities. Our\nfindings show that reintroductions often align with increased issue spoilage\nand fluctuating issue density, reflecting short-term inefficiencies in issue\nmanagement and team responsiveness. These observations provide a foundation for\nbroader studies that combine process and code metrics to predict risky fixes\nand strengthen software security.", "AI": {"tldr": "\u8be5\u7814\u7a76\u901a\u8fc7\u5206\u6790ImageMagick\u9879\u76ee\u4e2d76\u4e2a\u6f0f\u6d1e\u91cd\u65b0\u5f15\u5165\u6848\u4f8b\uff0c\u53d1\u73b0\u8fc7\u7a0b\u6307\u6807\uff08\u5982\u95ee\u9898\u8150\u8d25\u5ea6\u548c\u95ee\u9898\u5bc6\u5ea6\uff09\u4e0e\u6f0f\u6d1e\u91cd\u65b0\u5f15\u5165\u5bc6\u5207\u76f8\u5173\uff0c\u5f3a\u8c03\u6f0f\u6d1e\u91cd\u65b0\u5f15\u5165\u662f\u7d2f\u79ef\u5f00\u53d1\u6d3b\u52a8\u548c\u793e\u4f1a\u6280\u672f\u6761\u4ef6\u7684\u7ed3\u679c\u3002", "motivation": "\u8f6f\u4ef6\u6f0f\u6d1e\u5373\u4f7f\u5728\u4fee\u590d\u540e\u4ecd\u4f1a\u6301\u7eed\u5b58\u5728\u6216\u91cd\u65b0\u51fa\u73b0\uff0c\u73b0\u6709\u7814\u7a76\u5f88\u5c11\u63a2\u7d22\u8fc7\u7a0b\u6307\u6807\u662f\u5426\u80fd\u63ed\u793a\u968f\u65f6\u95f4\u63a8\u79fb\u7684\u98ce\u9669\u5f00\u53d1\u6d3b\u52a8\uff0c\u8fd9\u5bf9\u4e8e\u9884\u6d4b\u548c\u7f13\u89e3\u8f6f\u4ef6\u6f0f\u6d1e\u81f3\u5173\u91cd\u8981\u3002", "method": "\u5728ImageMagick\u9879\u76ee\u4e2d\u8fdb\u884c\u6848\u4f8b\u7814\u7a76\uff0c\u5c06\u7eb5\u5411\u8fc7\u7a0b\u6307\u6807\uff08\u5982\u5df4\u58eb\u56e0\u5b50\u3001\u95ee\u9898\u5bc6\u5ea6\u3001\u95ee\u9898\u8150\u8d25\u5ea6\uff09\u4e0e\u6f0f\u6d1e\u91cd\u65b0\u5f15\u5165\u6d3b\u52a8\u76f8\u5173\u8054\uff0c\u91cd\u70b9\u5206\u6790\u63d0\u4ea4\u7ea7\u522b\u7684\u5b89\u5168\u4fee\u590d\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u6587\u4ef6\u7ea7\u9884\u6d4b\u3002", "result": "\u7814\u7a76\u53d1\u73b0\u91cd\u65b0\u5f15\u5165\u901a\u5e38\u4e0e\u589e\u52a0\u7684\u95ee\u9898\u8150\u8d25\u5ea6\u548c\u6ce2\u52a8\u7684\u95ee\u9898\u5bc6\u5ea6\u76f8\u4e00\u81f4\uff0c\u53cd\u6620\u4e86\u95ee\u9898\u7ba1\u7406\u548c\u56e2\u961f\u54cd\u5e94\u80fd\u529b\u7684\u77ed\u671f\u4f4e\u6548\u3002", "conclusion": "\u8fc7\u7a0b\u6307\u6807\u4e0e\u4ee3\u7801\u6307\u6807\u76f8\u7ed3\u5408\u53ef\u4ee5\u4e3a\u9884\u6d4b\u98ce\u9669\u4fee\u590d\u548c\u52a0\u5f3a\u8f6f\u4ef6\u5b89\u5168\u63d0\u4f9b\u57fa\u7840\uff0c\u6f0f\u6d1e\u91cd\u65b0\u5f15\u5165\u5f88\u5c11\u662f\u5b64\u7acb\u884c\u52a8\u7684\u7ed3\u679c\uff0c\u800c\u662f\u6e90\u4e8e\u7d2f\u79ef\u5f00\u53d1\u6d3b\u52a8\u548c\u793e\u4f1a\u6280\u672f\u6761\u4ef6\u3002"}}
{"id": "2510.26699", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26699", "abs": "https://arxiv.org/abs/2510.26699", "authors": ["Aylton Almeida", "Laerte Xavier", "Marco Tulio Valente"], "title": "Using Copilot Agent Mode to Automate Library Migration: A Quantitative Assessment", "comment": null, "summary": "Keeping software systems up to date is essential to avoid technical debt,\nsecurity vulnerabilities, and the rigidity typical of legacy systems. However,\nupdating libraries and frameworks remains a time consuming and error-prone\nprocess. Recent advances in Large Language Models (LLMs) and agentic coding\nsystems offer new opportunities for automating such maintenance tasks. In this\npaper, we evaluate the update of a well-known Python library, SQLAlchemy,\nacross a dataset of ten client applications. For this task, we use the Github's\nCopilot Agent Mode, an autonomous AI systema capable of planning and executing\nmulti-step migration workflows. To assess the effectiveness of the automated\nmigration, we also introduce Migration Coverage, a metric that quantifies the\nproportion of API usage points correctly migrated. The results of our study\nshow that the LLM agent was capable of migrating functionalities and API usages\nbetween SQLAlchemy versions (migration coverage: 100%, median), but failed to\nmaintain the application functionality, leading to a low test-pass rate\n(39.75%, median).", "AI": {"tldr": "\u8bc4\u4f30\u4f7f\u7528GitHub Copilot Agent Mode\u81ea\u52a8\u8fc1\u79fbSQLAlchemy\u5e93\u7248\u672c\u7684\u6548\u679c\uff0c\u8be5\u4ee3\u7406\u5728API\u8fc1\u79fb\u65b9\u9762\u8868\u73b0\u826f\u597d\uff08\u8fc1\u79fb\u8986\u76d6\u7387100%\uff09\uff0c\u4f46\u5728\u4fdd\u6301\u5e94\u7528\u529f\u80fd\u65b9\u9762\u8868\u73b0\u4e0d\u4f73\uff08\u6d4b\u8bd5\u901a\u8fc7\u7387\u4ec539.75%\uff09\u3002", "motivation": "\u8f6f\u4ef6\u7cfb\u7edf\u66f4\u65b0\u5bf9\u4e8e\u907f\u514d\u6280\u672f\u503a\u52a1\u3001\u5b89\u5168\u6f0f\u6d1e\u548c\u9057\u7559\u7cfb\u7edf\u50f5\u5316\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u624b\u52a8\u66f4\u65b0\u5e93\u548c\u6846\u67b6\u8017\u65f6\u4e14\u5bb9\u6613\u51fa\u9519\u3002LLM\u548c\u4ee3\u7406\u7f16\u7801\u7cfb\u7edf\u4e3a\u81ea\u52a8\u5316\u6b64\u7c7b\u7ef4\u62a4\u4efb\u52a1\u63d0\u4f9b\u4e86\u65b0\u673a\u4f1a\u3002", "method": "\u4f7f\u7528GitHub\u7684Copilot Agent Mode\uff08\u4e00\u4e2a\u80fd\u591f\u89c4\u5212\u548c\u6267\u884c\u591a\u6b65\u8fc1\u79fb\u5de5\u4f5c\u6d41\u7684\u81ea\u4e3bAI\u7cfb\u7edf\uff09\uff0c\u572810\u4e2a\u5ba2\u6237\u7aef\u5e94\u7528\u7684\u6570\u636e\u96c6\u4e0a\u8bc4\u4f30SQLAlchemy\u5e93\u7684\u66f4\u65b0\u3002\u5f15\u5165\u8fc1\u79fb\u8986\u76d6\u7387\u6307\u6807\u6765\u91cf\u5316\u6b63\u786e\u8fc1\u79fb\u7684API\u4f7f\u7528\u70b9\u6bd4\u4f8b\u3002", "result": "LLM\u4ee3\u7406\u80fd\u591f\u6210\u529f\u8fc1\u79fbSQLAlchemy\u7248\u672c\u95f4\u7684\u529f\u80fd\u548cAPI\u4f7f\u7528\uff08\u8fc1\u79fb\u8986\u76d6\u7387\u4e2d\u4f4d\u6570100%\uff09\uff0c\u4f46\u672a\u80fd\u4fdd\u6301\u5e94\u7528\u7a0b\u5e8f\u529f\u80fd\uff0c\u5bfc\u81f4\u6d4b\u8bd5\u901a\u8fc7\u7387\u8f83\u4f4e\uff08\u4e2d\u4f4d\u657039.75%\uff09\u3002", "conclusion": "\u867d\u7136LLM\u4ee3\u7406\u5728API\u8fc1\u79fb\u65b9\u9762\u8868\u73b0\u4f18\u5f02\uff0c\u4f46\u5728\u4fdd\u6301\u5e94\u7528\u6574\u4f53\u529f\u80fd\u65b9\u9762\u4ecd\u6709\u4e0d\u8db3\uff0c\u8868\u660e\u81ea\u52a8\u5316\u8fc1\u79fb\u5de5\u5177\u5728\u529f\u80fd\u5b8c\u6574\u6027\u65b9\u9762\u9700\u8981\u8fdb\u4e00\u6b65\u6539\u8fdb\u3002"}}
{"id": "2510.26793", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.26793", "abs": "https://arxiv.org/abs/2510.26793", "authors": ["Nafid Enan", "Gias Uddin"], "title": "Optimized Log Parsing with Syntactic Modifications", "comment": null, "summary": "Logs provide valuable insights into system runtime and assist in software\ndevelopment and maintenance. Log parsing, which converts semi-structured log\ndata into structured log data, is often the first step in automated log\nanalysis. Given the wide range of log parsers utilizing diverse techniques, it\nis essential to evaluate them to understand their characteristics and\nperformance. In this paper, we conduct a comprehensive empirical study\ncomparing syntax- and semantic-based log parsers, as well as single-phase and\ntwo-phase parsing architectures. Our experiments reveal that semantic-based\nmethods perform better at identifying the correct templates and syntax-based\nlog parsers are 10 to 1,000 times more efficient and provide better grouping\naccuracy although they fall short in accurate template identification.\nMoreover, two-phase architecture consistently improves accuracy compared to\nsingle-phase architecture. Based on the findings of this study, we propose\nSynLog+, a template identification module that acts as the second phase in a\ntwo-phase log parsing architecture. SynLog+ improves the parsing accuracy of\nsyntax-based and semantic-based log parsers by 236\\% and 20\\% on average,\nrespectively, with virtually no additional runtime cost.", "AI": {"tldr": "\u8be5\u8bba\u6587\u5bf9\u57fa\u4e8e\u8bed\u6cd5\u548c\u8bed\u4e49\u7684\u65e5\u5fd7\u89e3\u6790\u5668\u8fdb\u884c\u4e86\u5168\u9762\u7684\u5b9e\u8bc1\u7814\u7a76\uff0c\u53d1\u73b0\u8bed\u4e49\u65b9\u6cd5\u5728\u6a21\u677f\u8bc6\u522b\u65b9\u9762\u8868\u73b0\u66f4\u597d\uff0c\u800c\u8bed\u6cd5\u65b9\u6cd5\u6548\u7387\u66f4\u9ad8\u4e14\u5206\u7ec4\u51c6\u786e\u7387\u66f4\u597d\u3002\u57fa\u4e8e\u7814\u7a76\u7ed3\u679c\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86SynLog+\u4f5c\u4e3a\u4e24\u9636\u6bb5\u65e5\u5fd7\u89e3\u6790\u67b6\u6784\u7684\u7b2c\u4e8c\u9636\u6bb5\uff0c\u663e\u8457\u63d0\u9ad8\u4e86\u89e3\u6790\u51c6\u786e\u7387\u3002", "motivation": "\u65e5\u5fd7\u89e3\u6790\u662f\u81ea\u52a8\u5316\u65e5\u5fd7\u5206\u6790\u7684\u7b2c\u4e00\u6b65\uff0c\u4f46\u73b0\u6709\u65e5\u5fd7\u89e3\u6790\u5668\u91c7\u7528\u591a\u79cd\u4e0d\u540c\u6280\u672f\uff0c\u9700\u8981\u8bc4\u4f30\u5b83\u4eec\u7684\u7279\u6027\u548c\u6027\u80fd\uff0c\u4ee5\u5e2e\u52a9\u7406\u89e3\u5404\u79cd\u65b9\u6cd5\u7684\u4f18\u7f3a\u70b9\u3002", "method": "\u901a\u8fc7\u5168\u9762\u7684\u5b9e\u8bc1\u7814\u7a76\u6bd4\u8f83\u8bed\u6cd5\u548c\u8bed\u4e49\u65e5\u5fd7\u89e3\u6790\u5668\uff0c\u4ee5\u53ca\u5355\u9636\u6bb5\u548c\u4e24\u9636\u6bb5\u89e3\u6790\u67b6\u6784\u3002\u57fa\u4e8e\u7814\u7a76\u53d1\u73b0\uff0c\u63d0\u51fa\u4e86SynLog+\u6a21\u677f\u8bc6\u522b\u6a21\u5757\u4f5c\u4e3a\u4e24\u9636\u6bb5\u67b6\u6784\u7684\u7b2c\u4e8c\u9636\u6bb5\u3002", "result": "\u8bed\u4e49\u65b9\u6cd5\u5728\u6b63\u786e\u8bc6\u522b\u6a21\u677f\u65b9\u9762\u8868\u73b0\u66f4\u597d\uff0c\u8bed\u6cd5\u65e5\u5fd7\u89e3\u6790\u5668\u6548\u7387\u9ad810\u52301000\u500d\u4e14\u5206\u7ec4\u51c6\u786e\u7387\u66f4\u597d\u3002\u4e24\u9636\u6bb5\u67b6\u6784\u76f8\u6bd4\u5355\u9636\u6bb5\u67b6\u6784\u6301\u7eed\u63d0\u9ad8\u51c6\u786e\u7387\u3002SynLog+\u4f7f\u8bed\u6cd5\u548c\u8bed\u4e49\u65e5\u5fd7\u89e3\u6790\u5668\u7684\u89e3\u6790\u51c6\u786e\u7387\u5206\u522b\u5e73\u5747\u63d0\u9ad8236%\u548c20%\uff0c\u4e14\u51e0\u4e4e\u6ca1\u6709\u989d\u5916\u8fd0\u884c\u65f6\u6210\u672c\u3002", "conclusion": "\u4e24\u9636\u6bb5\u65e5\u5fd7\u89e3\u6790\u67b6\u6784\u80fd\u663e\u8457\u63d0\u9ad8\u89e3\u6790\u51c6\u786e\u7387\uff0cSynLog+\u4f5c\u4e3a\u7b2c\u4e8c\u9636\u6bb5\u6a21\u5757\u80fd\u6709\u6548\u63d0\u5347\u73b0\u6709\u89e3\u6790\u5668\u7684\u6027\u80fd\uff0c\u4e3a\u65e5\u5fd7\u5206\u6790\u63d0\u4f9b\u4e86\u66f4\u4f18\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
