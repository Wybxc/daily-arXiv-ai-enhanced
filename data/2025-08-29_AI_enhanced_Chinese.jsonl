{"id": "2508.20119", "categories": ["cs.SE", "cs.LG", "68T42", "I.2.6; I.2.2; D.2.2"], "pdf": "https://arxiv.org/pdf/2508.20119", "abs": "https://arxiv.org/abs/2508.20119", "authors": ["Daniel M. Yellin"], "title": "Evaluating LLMs on microservice-based applications: how complex is your specification?", "comment": "20 pages + 7 pages appendices. 7 Figures. 8 Tables", "summary": "In this paper we evaluate how far LLMs have advanced in generating code for\nreal-world problems. Specifically, we explore code synthesis for\nmicroservice-based applications, a widely used architecture pattern. We define\na standard template for specifying these applications, and we propose a metric\nfor judging the difficulty level of a specification. The higher the score, the\nmore difficult it is to generate code for the specification. We develop a\nframework to automate the process of testing LLM-synthesized code for a\nmicroservice using unit tests. Our experimental results show that strong LLMs\n(like GPT-3o-mini) do fairly well on medium difficulty specifications but do\nvery poorly on those of higher difficulty levels. This is due to more intricate\nbusiness logic, a greater use of external services, database integration and\ninclusion of non-functional capabilities such as authentication. We analyzed\nthe errors in LLM-synthesized code and report on the key challenges LLMs face\nin generating code for these specifications thereby suggesting future research\ndirections to improve code synthesis for real-world problems.", "AI": {"tldr": "\u672c\u6587\u8bc4\u4f30\u4e86LLM\u5728\u771f\u5b9e\u4e16\u754c\u5fae\u670d\u52a1\u5e94\u7528\u4ee3\u7801\u751f\u6210\u65b9\u9762\u7684\u80fd\u529b\uff0c\u63d0\u51fa\u4e86\u96be\u5ea6\u8bc4\u5206\u6807\u51c6\u548c\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\uff0c\u53d1\u73b0\u5f3aLLM\u5728\u4e2d\u7b49\u96be\u5ea6\u4efb\u52a1\u8868\u73b0\u826f\u597d\u4f46\u5728\u9ad8\u96be\u5ea6\u4efb\u52a1\u8868\u73b0\u5f88\u5dee\u3002", "motivation": "\u8bc4\u4f30LLM\u5728\u771f\u5b9e\u4e16\u754c\u5fae\u670d\u52a1\u67b6\u6784\u4ee3\u7801\u751f\u6210\u65b9\u9762\u7684\u8fdb\u5c55\uff0c\u63a2\u7d22\u5176\u5728\u590d\u6742\u4e1a\u52a1\u573a\u666f\u4e0b\u7684\u80fd\u529b\u8fb9\u754c\u3002", "method": "\u5b9a\u4e49\u4e86\u5fae\u670d\u52a1\u5e94\u7528\u7684\u6807\u51c6\u6a21\u677f\u548c\u96be\u5ea6\u8bc4\u5206\u6307\u6807\uff0c\u5f00\u53d1\u4e86\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\u6765\u8bc4\u4f30LLM\u751f\u6210\u7684\u4ee3\u7801\u8d28\u91cf\u3002", "result": "\u5f3aLLM\uff08\u5982GPT-3o-mini\uff09\u5728\u4e2d\u7b49\u96be\u5ea6\u89c4\u8303\u4e0a\u8868\u73b0\u826f\u597d\uff0c\u4f46\u5728\u9ad8\u96be\u5ea6\u89c4\u8303\u4e0a\u8868\u73b0\u5f88\u5dee\uff0c\u4e3b\u8981\u7531\u4e8e\u590d\u6742\u4e1a\u52a1\u903b\u8f91\u3001\u5916\u90e8\u670d\u52a1\u96c6\u6210\u3001\u6570\u636e\u5e93\u64cd\u4f5c\u548c\u975e\u529f\u80fd\u6027\u9700\u6c42\uff08\u5982\u8ba4\u8bc1\uff09\u7684\u6311\u6218\u3002", "conclusion": "LLM\u5728\u771f\u5b9e\u4e16\u754c\u4ee3\u7801\u751f\u6210\u65b9\u9762\u4ecd\u6709\u663e\u8457\u5c40\u9650\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u590d\u6742\u4e1a\u52a1\u903b\u8f91\u548c\u7cfb\u7edf\u96c6\u6210\u65f6\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u7814\u7a76\u6539\u8fdb\u4ee3\u7801\u5408\u6210\u6280\u672f\u3002"}}
{"id": "2508.20124", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.20124", "abs": "https://arxiv.org/abs/2508.20124", "authors": ["Yunlong Feng", "Yang Xu", "Xiao Xu", "Binyuan Hui", "Junyang Lin"], "title": "Towards Better Correctness and Efficiency in Code Generation", "comment": null, "summary": "While code large language models have demonstrated remarkable progress in\ncode generation, the generated code often exhibits poor runtime efficiency,\nlimiting its practical application in performance-sensitive scenarios. To\naddress this limitation, we propose an efficiency-oriented reinforcement\nlearning framework guided by a novel performance reward. Based on this\nframework, we take a deeper dive into the code efficiency problem, identifying\nthen proposing methods to overcome key bottlenecks: (1) Dynamic exploration\novercomes the static data constraints of offline fine-tuning, enabling the\ndiscovery of more efficient code implementations. (2) The error-insensitive\nreinforcement learning method and high-contrast efficiency signals are crucial\nfor mitigating systematic errors and achieving effective optimization. (3)\nOnline exploration is most effective when starting from a high-correctness\nbaseline, as this allows for efficiency improvements without sacrificing\naccuracy. With these discoveries, we finally propose a two-stage tuning method,\nwhich achieves high and balanced performance across correctness and efficiency.\nThe results of experiments show the effectiveness of the method, which improves\ncode correctness by 10.18\\% and runtime efficiency by 7.75\\% on a 7B model,\nachieving performance comparable to much larger model.", "AI": {"tldr": "\u63d0\u51fa\u57fa\u4e8e\u5f3a\u5316\u5b66\u4e60\u7684\u6548\u7387\u5bfc\u5411\u6846\u67b6\uff0c\u901a\u8fc7\u52a8\u6001\u63a2\u7d22\u548c\u8bef\u5dee\u4e0d\u654f\u611f\u65b9\u6cd5\uff0c\u5728\u4fdd\u6301\u4ee3\u7801\u6b63\u786e\u6027\u7684\u540c\u65f6\u663e\u8457\u63d0\u5347\u8fd0\u884c\u6548\u7387", "motivation": "\u73b0\u6709\u4ee3\u7801\u5927\u8bed\u8a00\u6a21\u578b\u751f\u6210\u7684\u4ee3\u7801\u8fd0\u884c\u6548\u7387\u8f83\u5dee\uff0c\u9650\u5236\u4e86\u5728\u6027\u80fd\u654f\u611f\u573a\u666f\u7684\u5b9e\u9645\u5e94\u7528", "method": "\u4e24\u9636\u6bb5\u8c03\u4f18\u65b9\u6cd5\uff1a\u7b2c\u4e00\u9636\u6bb5\u786e\u4fdd\u4ee3\u7801\u6b63\u786e\u6027\uff0c\u7b2c\u4e8c\u9636\u6bb5\u901a\u8fc7\u52a8\u6001\u63a2\u7d22\u548c\u6027\u80fd\u5956\u52b1\u8fdb\u884c\u6548\u7387\u4f18\u5316\uff0c\u91c7\u7528\u8bef\u5dee\u4e0d\u654f\u611f\u7684\u5f3a\u5316\u5b66\u4e60\u65b9\u6cd5", "result": "\u57287B\u6a21\u578b\u4e0a\uff0c\u4ee3\u7801\u6b63\u786e\u6027\u63d0\u534710.18%\uff0c\u8fd0\u884c\u6548\u7387\u63d0\u53477.75%\uff0c\u6027\u80fd\u8fbe\u5230\u4e0e\u66f4\u5927\u6a21\u578b\u76f8\u5f53\u7684\u6c34\u5e73", "conclusion": "\u8be5\u6846\u67b6\u6709\u6548\u89e3\u51b3\u4e86\u4ee3\u7801\u6548\u7387\u95ee\u9898\uff0c\u901a\u8fc7\u5e73\u8861\u6b63\u786e\u6027\u548c\u6548\u7387\uff0c\u4e3a\u4ee3\u7801\u751f\u6210\u6a21\u578b\u7684\u5b9e\u9645\u5e94\u7528\u63d0\u4f9b\u4e86\u53ef\u884c\u65b9\u6848"}}
{"id": "2508.20340", "categories": ["cs.SE", "cs.AI", "cs.PL"], "pdf": "https://arxiv.org/pdf/2508.20340", "abs": "https://arxiv.org/abs/2508.20340", "authors": ["Maolin Sun", "Yibiao Yang", "Yuming Zhou"], "title": "Boosting Skeleton-Driven SMT Solver Fuzzing by Leveraging LLM to Produce Formula Generators", "comment": null, "summary": "Satisfiability Modulo Theory (SMT) solvers are foundational to modern systems\nand programming languages research, providing the foundation for tasks like\nsymbolic execution and automated verification. Because these solvers sit on the\ncritical path, their correctness is essential, and high-quality test formulas\nare key to uncovering bugs. However, while prior testing techniques performed\nwell on earlier solver versions, they struggle to keep pace with rapidly\nevolving features. Recent approaches based on Large Language Models (LLMs) show\npromise in exploring advanced solver capabilities, but two obstacles remain:\nnearly half of the generated formulas are syntactically invalid, and iterative\ninteractions with the LLMs introduce substantial computational overhead. In\nthis study, we present Chimera, a novel LLM-assisted fuzzing framework that\naddresses both issues by shifting from direct formula generation to the\nsynthesis of reusable term (i.e., logical expression) generators. Particularly,\nChimera uses LLMs to (1) automatically extract context-free grammars (CFGs) for\nSMT theories, including solver-specific extensions, from documentation, and (2)\nsynthesize composable Boolean term generators that adhere to these grammars.\nDuring fuzzing, Chimera populates structural skeletons derived from existing\nformulas with the terms iteratively produced by the LLM-synthesized generators.\nThis design ensures syntactic validity while promoting semantic diversity.\nNotably, Chimera requires only one-time LLM interaction investment,\ndramatically reducing runtime cost. We evaluated Chimera on two leading SMT\nsolvers: Z3 and cvc5. Our experiments show that Chimera has identified 43\nconfirmed bugs, 40 of which have already been fixed by developers.", "AI": {"tldr": "Chimera\u662f\u4e00\u4e2a\u57fa\u4e8eLLM\u7684SMT\u6c42\u89e3\u5668\u6a21\u7cca\u6d4b\u8bd5\u6846\u67b6\uff0c\u901a\u8fc7\u751f\u6210\u53ef\u91cd\u7528\u7684\u9879\u751f\u6210\u5668\u800c\u975e\u76f4\u63a5\u751f\u6210\u516c\u5f0f\uff0c\u89e3\u51b3\u4e86\u73b0\u6709\u65b9\u6cd5\u4e2d\u8bed\u6cd5\u65e0\u6548\u548c\u8ba1\u7b97\u5f00\u9500\u5927\u7684\u95ee\u9898\u3002", "motivation": "SMT\u6c42\u89e3\u5668\u5728\u73b0\u4ee3\u7cfb\u7edf\u548c\u7f16\u7a0b\u8bed\u8a00\u7814\u7a76\u4e2d\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u73b0\u6709\u6d4b\u8bd5\u6280\u672f\u96be\u4ee5\u8ddf\u4e0a\u5feb\u901f\u53d1\u5c55\u7684\u6c42\u89e3\u5668\u7279\u6027\u3002\u57fa\u4e8eLLM\u7684\u65b9\u6cd5\u867d\u7136\u663e\u793a\u51fa\u6f5c\u529b\uff0c\u4f46\u5b58\u5728\u8bed\u6cd5\u65e0\u6548\u7387\u9ad8\u548c\u8ba1\u7b97\u5f00\u9500\u5927\u7684\u95ee\u9898\u3002", "method": "Chimera\u4f7f\u7528LLM\u4ece\u6587\u6863\u4e2d\u81ea\u52a8\u63d0\u53d6SMT\u7406\u8bba\u7684\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\uff0c\u5e76\u5408\u6210\u7b26\u5408\u8fd9\u4e9b\u6587\u6cd5\u7684\u53ef\u7ec4\u5408\u5e03\u5c14\u9879\u751f\u6210\u5668\u3002\u5728\u6a21\u7cca\u6d4b\u8bd5\u65f6\uff0c\u7528LLM\u5408\u6210\u7684\u751f\u6210\u5668\u4ea7\u751f\u7684\u9879\u586b\u5145\u73b0\u6709\u516c\u5f0f\u7684\u7ed3\u6784\u9aa8\u67b6\u3002", "result": "\u5728Z3\u548ccvc5\u4e24\u4e2a\u4e3b\u6d41SMT\u6c42\u89e3\u5668\u4e0a\u6d4b\u8bd5\uff0cChimera\u53d1\u73b0\u4e8643\u4e2a\u5df2\u786e\u8ba4\u7684bug\uff0c\u5176\u4e2d40\u4e2a\u5df2\u88ab\u5f00\u53d1\u8005\u4fee\u590d\u3002", "conclusion": "Chimera\u901a\u8fc7\u4e00\u6b21\u6027LLM\u4ea4\u4e92\u6295\u8d44\uff0c\u663e\u8457\u964d\u4f4e\u4e86\u8fd0\u884c\u65f6\u6210\u672c\uff0c\u540c\u65f6\u786e\u4fdd\u4e86\u8bed\u6cd5\u6709\u6548\u6027\u5e76\u4fc3\u8fdb\u4e86\u8bed\u4e49\u591a\u6837\u6027\uff0c\u4e3aSMT\u6c42\u89e3\u5668\u7684\u6d4b\u8bd5\u63d0\u4f9b\u4e86\u9ad8\u6548\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2508.20370", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.20370", "abs": "https://arxiv.org/abs/2508.20370", "authors": ["Lingzhe Zhang", "Tong Jia", "Kangjin Wang", "Weijie Hong", "Chiming Duan", "Minghua He", "Ying Li"], "title": "Adaptive Root Cause Localization for Microservice Systems with Multi-Agent Recursion-of-Thought", "comment": null, "summary": "As contemporary microservice systems become increasingly popular and\ncomplex-often comprising hundreds or even thousands of fine-grained,\ninterdependent subsystems-they are facing more frequent failures. Ensuring\nsystem reliability thus demands accurate root cause localization. While traces\nand metrics have proven to be effective data sources for this task, existing\nmethods either heavily rely on pre-defined schemas, which struggle to adapt to\nevolving operational contexts, or lack interpretability in their reasoning\nprocess, thereby leaving Site Reliability Engineers (SREs) confused. In this\npaper, we conduct a comprehensive study on how SREs localize the root cause of\nfailures, drawing insights from multiple professional SREs across different\norganizations. Our investigation reveals that human root cause analysis\nexhibits three key characteristics: recursiveness, multi-dimensional expansion,\nand cross-modal reasoning. Motivated by these findings, we introduce RCLAgent,\nan adaptive root cause localization method for microservice systems that\nleverages a multi-agent recursion-of-thought framework. RCLAgent employs a\nnovel recursion-of-thought strategy to guide the LLM's reasoning process,\neffectively integrating data from multiple agents and tool-assisted analysis to\naccurately pinpoint the root cause. Experimental evaluations on various public\ndatasets demonstrate that RCLAgent achieves superior performance by localizing\nthe root cause using only a single request-outperforming state-of-the-art\nmethods that depend on aggregating multiple requests. These results underscore\nthe effectiveness of RCLAgent in enhancing the efficiency and precision of root\ncause localization in complex microservice environments.", "AI": {"tldr": "RCLAgent\u662f\u4e00\u4e2a\u57fa\u4e8e\u591a\u667a\u80fd\u4f53\u9012\u5f52\u601d\u7ef4\u6846\u67b6\u7684\u81ea\u9002\u5e94\u6839\u56e0\u5b9a\u4f4d\u65b9\u6cd5\uff0c\u901a\u8fc7\u6a21\u62dfSRE\u7684\u9012\u5f52\u3001\u591a\u7ef4\u6269\u5c55\u548c\u8de8\u6a21\u6001\u63a8\u7406\u7279\u6027\uff0c\u5728\u5355\u6b21\u8bf7\u6c42\u4e2d\u5b9e\u73b0\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u7684\u6839\u56e0\u5b9a\u4f4d\u6027\u80fd\u3002", "motivation": "\u5fae\u670d\u52a1\u7cfb\u7edf\u65e5\u76ca\u590d\u6742\uff0c\u6545\u969c\u9891\u53d1\uff0c\u73b0\u6709\u6839\u56e0\u5b9a\u4f4d\u65b9\u6cd5\u8981\u4e48\u4f9d\u8d56\u9884\u5b9a\u4e49\u6a21\u5f0f\u96be\u4ee5\u9002\u5e94\u53d8\u5316\uff0c\u8981\u4e48\u7f3a\u4e4f\u53ef\u89e3\u91ca\u6027\u3002\u901a\u8fc7\u7814\u7a76SRE\u7684\u4eba\u5de5\u6839\u56e0\u5206\u6790\u8fc7\u7a0b\uff0c\u53d1\u73b0\u5176\u5177\u6709\u9012\u5f52\u6027\u3001\u591a\u7ef4\u6269\u5c55\u548c\u8de8\u6a21\u6001\u63a8\u7406\u4e09\u4e2a\u5173\u952e\u7279\u5f81\u3002", "method": "\u63d0\u51faRCLAgent\u65b9\u6cd5\uff0c\u91c7\u7528\u591a\u667a\u80fd\u4f53\u9012\u5f52\u601d\u7ef4\u6846\u67b6\uff0c\u4f7f\u7528\u65b0\u9896\u7684\u9012\u5f52\u601d\u7ef4\u7b56\u7565\u6307\u5bfcLLM\u63a8\u7406\u8fc7\u7a0b\uff0c\u6574\u5408\u591a\u667a\u80fd\u4f53\u6570\u636e\u548c\u5de5\u5177\u8f85\u52a9\u5206\u6790\u6765\u7cbe\u786e\u5b9a\u4f4d\u6839\u56e0\u3002", "result": "\u5728\u591a\u4e2a\u516c\u5f00\u6570\u636e\u96c6\u4e0a\u7684\u5b9e\u9a8c\u8bc4\u4f30\u8868\u660e\uff0cRCLAgent\u4ec5\u9700\u5355\u6b21\u8bf7\u6c42\u5c31\u80fd\u5b9e\u73b0\u6839\u56e0\u5b9a\u4f4d\uff0c\u6027\u80fd\u4f18\u4e8e\u4f9d\u8d56\u591a\u6b21\u8bf7\u6c42\u805a\u5408\u7684\u6700\u5148\u8fdb\u65b9\u6cd5\u3002", "conclusion": "RCLAgent\u6709\u6548\u63d0\u5347\u4e86\u590d\u6742\u5fae\u670d\u52a1\u73af\u5883\u4e2d\u6839\u56e0\u5b9a\u4f4d\u7684\u6548\u7387\u548c\u7cbe\u5ea6\uff0c\u8bc1\u660e\u4e86\u5176\u5728\u81ea\u9002\u5e94\u6839\u56e0\u5206\u6790\u4e2d\u7684\u6709\u6548\u6027\u3002"}}
{"id": "2508.20365", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2508.20365", "abs": "https://arxiv.org/abs/2508.20365", "authors": ["Naoki Kobayashi", "Ryosuke Sato", "Ayumi Shinohara", "Ryo Yoshinaka"], "title": "Solvable Tuple Patterns and Their Applications to Program Verification", "comment": null, "summary": "Despite the recent progress of automated program verification techniques,\nfully automated verification of programs manipulating recursive data structures\nremains a challenge. We introduce the notion of solvable tuple patterns (STPs)\nto express invariants between list-like recursive data structures. A\ndistinguishing feature of STPs is that they can be efficiently inferred from\nonly a small number of positive samples; no negative samples are required. An\nSMT solver that supports the sequence theory can be used to check that an\ninferred STP is indeed an inductive invariant. After presenting basic\nproperties of STPs and an STP inference algorithm, we show how to incorporate\nthe STP inference into a CHC (Constrained Horn Clauses) solver supporting\nlist-like data structures, which serves as a uniform backend for automated\nprogram verification tools. A CHC solver incorporating the STP inference has\nwon the ADT-LIN category of CHC-COMP 2025 by a big margin.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u53ef\u89e3\u5143\u7ec4\u6a21\u5f0f(STPs)\u7684\u6982\u5ff5\uff0c\u7528\u4e8e\u8868\u8fbe\u5217\u8868\u5f0f\u9012\u5f52\u6570\u636e\u7ed3\u6784\u7684\u7a0b\u5e8f\u4e0d\u53d8\u91cf\uff0c\u65e0\u9700\u8d1f\u6837\u672c\u5373\u53ef\u4ece\u5c0f\u91cf\u6b63\u6837\u672c\u4e2d\u9ad8\u6548\u63a8\u65ad\uff0c\u5e76\u96c6\u6210\u5230CHC\u6c42\u89e3\u5668\u4e2d\u5b9e\u73b0\u81ea\u52a8\u5316\u7a0b\u5e8f\u9a8c\u8bc1\u3002", "motivation": "\u5c3d\u7ba1\u7a0b\u5e8f\u9a8c\u8bc1\u6280\u672f\u6709\u6240\u8fdb\u5c55\uff0c\u4f46\u9012\u5f52\u6570\u636e\u7ed3\u6784\u7a0b\u5e8f\u7684\u5b8c\u5168\u81ea\u52a8\u5316\u9a8c\u8bc1\u4ecd\u5177\u6311\u6218\u6027\uff0c\u9700\u8981\u65b0\u7684\u65b9\u6cd5\u6765\u9ad8\u6548\u63a8\u65ad\u7a0b\u5e8f\u4e0d\u53d8\u91cf\u3002", "method": "\u5f15\u5165\u53ef\u89e3\u5143\u7ec4\u6a21\u5f0f(STPs)\u8868\u8fbe\u6570\u636e\u7ed3\u6784\u95f4\u7684\u4e0d\u53d8\u91cf\u5173\u7cfb\uff0c\u5f00\u53d1STP\u63a8\u65ad\u7b97\u6cd5\u4ec5\u9700\u6b63\u6837\u672c\uff0c\u5229\u7528\u652f\u6301\u5e8f\u5217\u7406\u8bba\u7684SMT\u6c42\u89e3\u5668\u9a8c\u8bc1\u63a8\u65ad\u7684STP\u662f\u5426\u4e3a\u5f52\u7eb3\u4e0d\u53d8\u91cf\uff0c\u5e76\u5c06STP\u63a8\u65ad\u96c6\u6210\u5230\u652f\u6301\u5217\u8868\u5f0f\u6570\u636e\u7ed3\u6784\u7684CHC\u6c42\u89e3\u5668\u4e2d\u3002", "result": "\u96c6\u6210STP\u63a8\u65ad\u7684CHC\u6c42\u89e3\u5668\u5728CHC-COMP 2025\u7684ADT-LIN\u7c7b\u522b\u4e2d\u4ee5\u663e\u8457\u4f18\u52bf\u83b7\u80dc\uff0c\u8bc1\u660e\u4e86\u8be5\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002", "conclusion": "STPs\u4e3a\u9012\u5f52\u6570\u636e\u7ed3\u6784\u7684\u7a0b\u5e8f\u9a8c\u8bc1\u63d0\u4f9b\u4e86\u9ad8\u6548\u7684\u4e0d\u53d8\u91cf\u63a8\u65ad\u65b9\u6cd5\uff0c\u4ec5\u9700\u6b63\u6837\u672c\u5373\u53ef\u5de5\u4f5c\uff0c\u4e0eCHC\u6c42\u89e3\u5668\u7684\u96c6\u6210\u5c55\u793a\u4e86\u5176\u5728\u81ea\u52a8\u5316\u7a0b\u5e8f\u9a8c\u8bc1\u4e2d\u7684\u5b9e\u7528\u4ef7\u503c\u3002"}}
{"id": "2508.20671", "categories": ["cs.FL", "cs.LO", "math.OC", "math.PR"], "pdf": "https://arxiv.org/pdf/2508.20671", "abs": "https://arxiv.org/abs/2508.20671", "authors": ["Ga\u00ebtan Serr\u00e9"], "title": "Formal equivalence between global optimization consistency and random search", "comment": null, "summary": "We formalize a proof that any stochastic and iterative global optimization\nalgorithm is consistent over Lipschitz continuous functions if and only if it\nsamples the whole search space. To achieve this, we use the\nL$\\exists$$\\forall$N theorem prover and the Mathlib library. The major\nchallenge of this formalization, apart from the technical aspects of the proof\nitself, is to converge to a definition of a stochastic and iterative global\noptimization algorithm that is both general enough to encompass all algorithms\nof this type and specific enough to be used in a formal proof. We define such\nan algorithm as a pair of an initial probability measure and a sequence of\nMarkov kernels that describe the distribution of the next point sampled by the\nalgorithm given the previous points and their evaluations. We then construct a\nprobability measure on finite and infinite sequences of iterations of the\nalgorithm using the Ionescu-Tulcea theorem.", "AI": {"tldr": "\u672c\u6587\u901a\u8fc7L\u2203\u2200N\u5b9a\u7406\u8bc1\u660e\u5668\u548cMathlib\u5e93\u5f62\u5f0f\u5316\u8bc1\u660e\u4e86\uff1a\u4efb\u4f55\u968f\u673a\u8fed\u4ee3\u5168\u5c40\u4f18\u5316\u7b97\u6cd5\u5728Lipschitz\u8fde\u7eed\u51fd\u6570\u4e0a\u4e00\u81f4\u7684\u5145\u8981\u6761\u4ef6\u662f\u8be5\u7b97\u6cd5\u5fc5\u987b\u5bf9\u6574\u4e2a\u641c\u7d22\u7a7a\u95f4\u8fdb\u884c\u91c7\u6837\u3002", "motivation": "\u4e3a\u4e86\u5f62\u5f0f\u5316\u8bc1\u660e\u968f\u673a\u8fed\u4ee3\u5168\u5c40\u4f18\u5316\u7b97\u6cd5\u7684\u6536\u655b\u6027\u7406\u8bba\uff0c\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u65e2\u5177\u6709\u8db3\u591f\u901a\u7528\u6027\uff08\u6db5\u76d6\u6240\u6709\u6b64\u7c7b\u7b97\u6cd5\uff09\u53c8\u8db3\u591f\u5177\u4f53\uff08\u53ef\u7528\u4e8e\u5f62\u5f0f\u5316\u8bc1\u660e\uff09\u7684\u7b97\u6cd5\u5b9a\u4e49\u6846\u67b6\u3002", "method": "\u5c06\u968f\u673a\u8fed\u4ee3\u5168\u5c40\u4f18\u5316\u7b97\u6cd5\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u521d\u59cb\u6982\u7387\u6d4b\u5ea6\u548c\u4e00\u7cfb\u5217\u9a6c\u5c14\u53ef\u592b\u6838\u7684\u7ec4\u5408\uff0c\u8fd9\u4e9b\u6838\u63cf\u8ff0\u4e86\u7ed9\u5b9a\u5148\u524d\u91c7\u6837\u70b9\u53ca\u5176\u51fd\u6570\u503c\u65f6\u4e0b\u4e00\u4e2a\u91c7\u6837\u70b9\u7684\u5206\u5e03\u3002\u4f7f\u7528Ionescu-Tulcea\u5b9a\u7406\u6784\u5efa\u7b97\u6cd5\u6709\u9650\u548c\u65e0\u9650\u8fed\u4ee3\u5e8f\u5217\u7684\u6982\u7387\u6d4b\u5ea6\u3002", "result": "\u6210\u529f\u5f62\u5f0f\u5316\u8bc1\u660e\u4e86\u968f\u673a\u8fed\u4ee3\u5168\u5c40\u4f18\u5316\u7b97\u6cd5\u5728Lipschitz\u8fde\u7eed\u51fd\u6570\u4e0a\u4e00\u81f4\u7684\u5145\u8981\u6761\u4ef6\u662f\u8be5\u7b97\u6cd5\u5fc5\u987b\u5bf9\u6574\u4e2a\u641c\u7d22\u7a7a\u95f4\u8fdb\u884c\u91c7\u6837\u3002", "conclusion": "\u8be5\u7814\u7a76\u4e3a\u968f\u673a\u4f18\u5316\u7b97\u6cd5\u7684\u7406\u8bba\u5206\u6790\u63d0\u4f9b\u4e86\u4e25\u683c\u7684\u5f62\u5f0f\u5316\u57fa\u7840\uff0c\u5efa\u7acb\u4e86\u7b97\u6cd5\u4e00\u81f4\u6027\u4e0e\u5168\u5c40\u91c7\u6837\u4e4b\u95f4\u7684\u7b49\u4ef7\u5173\u7cfb\uff0c\u4e3a\u540e\u7eed\u7b97\u6cd5\u8bbe\u8ba1\u548c\u5206\u6790\u63d0\u4f9b\u4e86\u7406\u8bba\u4fdd\u8bc1\u3002"}}
{"id": "2508.20738", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2508.20738", "abs": "https://arxiv.org/abs/2508.20738", "authors": ["Lukas Bartl", "Jasmin Blanchette", "Tobias Nipkow"], "title": "Exploiting Instantiations from Paramodulation Proofs in Isabelle/HOL", "comment": "This version of the contribution has been accepted for publication in\n  CADE-30, after peer review but is not the Version of Record and does not\n  reflect post-acceptance improvements, or any corrections", "summary": "Metis is an ordered paramodulation prover built into the Isabelle/HOL proof\nassistant. It attempts to close the current goal using a given list of lemmas.\nTypically these lemmas are found by Sledgehammer, a tool that integrates\nexternal automatic provers. We present a new tool that analyzes successful\nMetis proofs to derive variable instantiations. These increase Sledgehammer's\nsuccess rate, improve the speed of Sledgehammer-generated proofs, and help\nusers understand why a goal follows from the lemmas.", "AI": {"tldr": "Metis\u662fIsabelle/HOL\u4e2d\u7684\u6709\u5e8f\u53c2\u6570\u5316\u8bc1\u660e\u5668\uff0c\u65b0\u5de5\u5177\u901a\u8fc7\u5206\u6790\u6210\u529f\u8bc1\u660e\u6765\u63a8\u5bfc\u53d8\u91cf\u5b9e\u4f8b\u5316\uff0c\u63d0\u9ad8Sledgehammer\u7684\u6210\u529f\u7387\u548c\u8bc1\u660e\u901f\u5ea6", "motivation": "\u63d0\u9ad8Sledgehammer\u5de5\u5177\u7684\u6210\u529f\u7387\uff0c\u52a0\u901f\u751f\u6210\u7684\u8bc1\u660e\u8fc7\u7a0b\uff0c\u5e76\u5e2e\u52a9\u7528\u6237\u7406\u89e3\u76ee\u6807\u5982\u4f55\u4ece\u5f15\u7406\u63a8\u5bfc", "method": "\u5206\u6790Metis\u6210\u529f\u8bc1\u660e\u6765\u63a8\u5bfc\u53d8\u91cf\u5b9e\u4f8b\u5316", "result": "\u589e\u52a0\u4e86Sledgehammer\u7684\u6210\u529f\u7387\uff0c\u63d0\u9ad8\u4e86\u8bc1\u660e\u751f\u6210\u901f\u5ea6\uff0c\u5e2e\u52a9\u7528\u6237\u7406\u89e3\u8bc1\u660e\u8fc7\u7a0b", "conclusion": "\u901a\u8fc7\u5206\u6790\u6210\u529f\u8bc1\u660e\u63a8\u5bfc\u53d8\u91cf\u5b9e\u4f8b\u5316\u7684\u65b9\u6cd5\u662f\u6709\u6548\u7684\uff0c\u80fd\u591f\u663e\u8457\u63d0\u5347\u8bc1\u660e\u8f85\u52a9\u5de5\u5177\u7684\u6027\u80fd\u548c\u53ef\u7528\u6027"}}
{"id": "2508.20563", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.20563", "abs": "https://arxiv.org/abs/2508.20563", "authors": ["Zheying Zhang", "Tomas Herda", "Victoria Pichler", "Pekka Abrahamsson", "Geir K. Hanssen", "Joshua Kerievsky", "Alex Polyakov", "Mohit Chandna", "Marius Irgens", "Kai-Kristian Kemell", "Ayman Asad Khan", "Crystal Kwok", "Evan Leybourn", "Munish Malik", "Dorota Mleczko", "Morteza Moalagh", "Christopher Morales", "Yuliia Pieskova", "Daniel Plan\u00f6tscher", "Mika Saari", "Anastasiia Tkalich", "Karl Josef Gstettner", "Xiaofeng Wang"], "title": "AI and Agile Software Development: A Research Roadmap from the XP2025 Workshop", "comment": null, "summary": "This paper synthesizes the key findings from a full-day XP2025 workshop on\n\"AI and Agile: From Frustration to Success\", held in Brugg-Windisch,\nSwitzerland. The workshop brought together over 30 interdisciplinary academic\nresearchers and industry practitioners to tackle the concrete challenges and\nemerging opportunities at the intersection of Generative Artificial\nIntelligence (GenAI) and agile software development. Through structured,\ninteractive breakout sessions, participants identified shared pain points like\ntool fragmentation, governance, data quality, and critical skills gaps in AI\nliteracy and prompt engineering. These issues were further analyzed, revealing\nunderlying causes and cross-cutting concerns. The workshop concluded by\ncollaboratively co-creating a multi-thematic research roadmap, articulating\nboth short-term, implementable actions and visionary, long-term research\ndirections. This cohesive agenda aims to guide future investigation and drive\nthe responsible, human-centered integration of GenAI into agile practices.", "AI": {"tldr": "XP2025\u7814\u8ba8\u4f1a\u603b\u7ed3\u62a5\u544a\uff0c\u6c47\u96c630\u591a\u4f4d\u5b66\u8005\u548c\u4ece\u4e1a\u8005\u63a2\u8ba8GenAI\u4e0e\u654f\u6377\u5f00\u53d1\u7684\u6311\u6218\u4e0e\u673a\u9047\uff0c\u8bc6\u522b\u4e86\u5de5\u5177\u788e\u7247\u5316\u3001\u6cbb\u7406\u3001\u6570\u636e\u8d28\u91cf\u7b49\u75db\u70b9\uff0c\u5e76\u5236\u5b9a\u4e86\u591a\u4e3b\u9898\u7814\u7a76\u8def\u7ebf\u56fe", "motivation": "\u89e3\u51b3\u751f\u6210\u5f0f\u4eba\u5de5\u667a\u80fd(GenAI)\u4e0e\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u4ea4\u53c9\u9886\u57df\u7684\u5177\u4f53\u6311\u6218\u548c\u65b0\u5174\u673a\u9047\uff0c\u4fc3\u8fdb\u4e24\u8005\u7684\u8d1f\u8d23\u4efb\u3001\u4ee5\u4eba\u4e3a\u672c\u7684\u6574\u5408", "method": "\u901a\u8fc7\u7ed3\u6784\u5316\u3001\u4e92\u52a8\u5f0f\u5206\u7ec4\u8ba8\u8bba\u4f1a\u8bae\uff0c\u6c47\u96c6\u8de8\u5b66\u79d1\u5b66\u672f\u7814\u7a76\u4eba\u5458\u548c\u884c\u4e1a\u4ece\u4e1a\u8005\uff0c\u5171\u540c\u5206\u6790\u95ee\u9898\u5e76\u5236\u5b9a\u7814\u7a76\u8def\u7ebf\u56fe", "result": "\u8bc6\u522b\u4e86\u5de5\u5177\u788e\u7247\u5316\u3001\u6cbb\u7406\u3001\u6570\u636e\u8d28\u91cf\u3001AI\u7d20\u517b\u548c\u63d0\u793a\u5de5\u7a0b\u6280\u80fd\u5dee\u8ddd\u7b49\u5173\u952e\u75db\u70b9\uff0c\u5206\u6790\u4e86\u6839\u672c\u539f\u56e0\u548c\u4ea4\u53c9\u5173\u6ce8\u70b9", "conclusion": "\u534f\u4f5c\u5236\u5b9a\u4e86\u5305\u542b\u77ed\u671f\u53ef\u5b9e\u65bd\u884c\u52a8\u548c\u957f\u671f\u613f\u666f\u7814\u7a76\u65b9\u5411\u7684\u591a\u4e3b\u9898\u7814\u7a76\u8def\u7ebf\u56fe\uff0c\u65e8\u5728\u6307\u5bfc\u672a\u6765\u7814\u7a76\u5e76\u63a8\u52a8GenAI\u5728\u654f\u6377\u5b9e\u8df5\u4e2d\u7684\u8d1f\u8d23\u4efb\u6574\u5408"}}
{"id": "2508.20922", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2508.20922", "abs": "https://arxiv.org/abs/2508.20922", "authors": ["Markus B\u00f6ck", "J\u00fcrgen Cito"], "title": "Static Factorisation of Probabilistic Programs With User-Labelled Sample Statements and While Loops", "comment": null, "summary": "It is commonly known that any Bayesian network can be implemented as a\nprobabilistic program, but the reverse direction is not so clear. In this work,\nwe address the open question to what extent a probabilistic program with\nuser-labelled sample statements and while loops - features found in languages\nlike Gen, Turing, and Pyro - can be represented graphically. To this end, we\nextend existing operational semantics to support these language features. By\ntranslating a program to its control-flow graph, we define a sound static\nanalysis that approximates the dependency structure of the random variables in\nthe program. As a result, we obtain a static factorisation of the implicitly\ndefined program density, which is equivalent to the known Bayesian network\nfactorisation for programs without loops and constant labels, but constitutes a\nnovel graphical representation for programs that define an unbounded number of\nrandom variables via loops or dynamic labels. We further develop a sound\nprogram slicing technique to leverage this structure to statically enable three\nwell-known optimisations for the considered program class: we reduce the\nvariance of gradient estimates in variational inference and we speed up both\nsingle-site Metropolis Hastings and sequential Monte Carlo. These optimisations\nare proven correct and empirically shown to match or outperform existing\ntechniques.", "AI": {"tldr": "\u8be5\u8bba\u6587\u7814\u7a76\u4e86\u5982\u4f55\u5c06\u5305\u542b\u6837\u672c\u8bed\u53e5\u548cwhile\u5faa\u73af\u7684\u6982\u7387\u7a0b\u5e8f\u8868\u793a\u4e3a\u8d1d\u53f6\u65af\u7f51\u7edc\uff0c\u63d0\u51fa\u4e86\u57fa\u4e8e\u63a7\u5236\u6d41\u56fe\u7684\u9759\u6001\u5206\u6790\u65b9\u6cd5\u6765\u8fd1\u4f3c\u7a0b\u5e8f\u4e2d\u7684\u968f\u673a\u53d8\u91cf\u4f9d\u8d56\u7ed3\u6784\uff0c\u5e76\u5f00\u53d1\u4e86\u7a0b\u5e8f\u5207\u7247\u6280\u672f\u6765\u4f18\u5316\u53d8\u5206\u63a8\u65ad\u3001Metropolis Hastings\u548c\u987a\u5e8f\u8499\u7279\u5361\u6d1b\u7b97\u6cd5\u3002", "motivation": "\u89e3\u51b3\u6982\u7387\u7a0b\u5e8f\uff08\u7279\u522b\u662f\u5305\u542b\u7528\u6237\u6807\u8bb0\u6837\u672c\u8bed\u53e5\u548cwhile\u5faa\u73af\u7684\u7a0b\u5e8f\uff09\u80fd\u5426\u4ee5\u53ca\u5982\u4f55\u7528\u56fe\u5f62\u5316\u65b9\u5f0f\u8868\u793a\u7684\u95ee\u9898\uff0c\u8fd9\u7c7b\u7a0b\u5e8f\u5728Gen\u3001Turing\u548cPyro\u7b49\u6982\u7387\u7f16\u7a0b\u8bed\u8a00\u4e2d\u5f88\u5e38\u89c1\uff0c\u4f46\u73b0\u6709\u7684\u8d1d\u53f6\u65af\u7f51\u7edc\u8868\u793a\u65b9\u6cd5\u5bf9\u6b64\u7c7b\u7a0b\u5e8f\u7684\u652f\u6301\u6709\u9650\u3002", "method": "\u6269\u5c55\u73b0\u6709\u64cd\u4f5c\u8bed\u4e49\u4ee5\u652f\u6301\u8bed\u8a00\u7279\u6027\uff0c\u901a\u8fc7\u5c06\u7a0b\u5e8f\u8f6c\u6362\u4e3a\u63a7\u5236\u6d41\u56fe\u6765\u5b9a\u4e49\u9759\u6001\u5206\u6790\uff0c\u8fd1\u4f3c\u7a0b\u5e8f\u4e2d\u968f\u673a\u53d8\u91cf\u7684\u4f9d\u8d56\u7ed3\u6784\uff0c\u83b7\u5f97\u7a0b\u5e8f\u5bc6\u5ea6\u7684\u9759\u6001\u56e0\u5b50\u5206\u89e3\uff0c\u5e76\u5f00\u53d1\u7a0b\u5e8f\u5207\u7247\u6280\u672f\u3002", "result": "\u83b7\u5f97\u4e86\u7a0b\u5e8f\u5bc6\u5ea6\u7684\u9759\u6001\u56e0\u5b50\u5206\u89e3\u8868\u793a\uff0c\u5bf9\u4e8e\u65e0\u5faa\u73af\u548c\u5e38\u91cf\u6807\u7b7e\u7684\u7a0b\u5e8f\u7b49\u4ef7\u4e8e\u8d1d\u53f6\u65af\u7f51\u7edc\u56e0\u5b50\u5206\u89e3\uff0c\u5bf9\u4e8e\u901a\u8fc7\u5faa\u73af\u6216\u52a8\u6001\u6807\u7b7e\u5b9a\u4e49\u65e0\u9650\u968f\u673a\u53d8\u91cf\u7684\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u65b0\u9896\u7684\u56fe\u5f62\u8868\u793a\u3002\u7a0b\u5e8f\u5207\u7247\u6280\u672f\u6210\u529f\u5b9e\u73b0\u4e86\u4e09\u79cd\u4f18\u5316\uff0c\u7ecf\u9a8c\u8bc1\u6027\u80fd\u5339\u914d\u6216\u4f18\u4e8e\u73b0\u6709\u6280\u672f\u3002", "conclusion": "\u8be5\u5de5\u4f5c\u4e3a\u5305\u542b\u6837\u672c\u8bed\u53e5\u548cwhile\u5faa\u73af\u7684\u6982\u7387\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u7cfb\u7edf\u7684\u56fe\u5f62\u8868\u793a\u65b9\u6cd5\uff0c\u5e76\u8bc1\u660e\u4e86\u57fa\u4e8e\u6b64\u7ed3\u6784\u7684\u4f18\u5316\u6280\u672f\u7684\u6b63\u786e\u6027\u548c\u6709\u6548\u6027\uff0c\u4e3a\u6982\u7387\u7a0b\u5e8f\u7684\u9759\u6001\u5206\u6790\u548c\u4f18\u5316\u63d0\u4f9b\u4e86\u65b0\u9014\u5f84\u3002"}}
{"id": "2508.20735", "categories": ["cs.FL", "68Q45, 68Q10", "F.4.3; D.1.3"], "pdf": "https://arxiv.org/pdf/2508.20735", "abs": "https://arxiv.org/abs/2508.20735", "authors": ["Jan Heemstra", "Jan Martens", "Anton Wijs"], "title": "Evaluating Massively Parallel Algorithms for DFA Minimisation, Equivalence Checking and Inclusion Checking", "comment": "28 pages, 10 figures, 5 tables", "summary": "We study parallel algorithms for the minimisation and equivalence checking of\nDeterministic Finite Automata (DFAs). Regarding DFA minimisation, we implement\nfour different massively parallel algorithms on Graphics Processing\nUnits~(GPUs). Our results confirm the expectations that the algorithm with the\ntheoretically best time complexity is not practically suitable to run on GPUs\ndue to the large amount of resources needed. We empirically verify that\nparallel partition refinement algorithms from the literature perform better in\npractice, even though their time complexity is worse. Furthermore, we introduce\na novel algorithm based on partition refinement with an extra parallel partial\ntransitive closure step and show that on specific benchmarks it has better\nrun-time complexity and performs better in practice.\n  In addition, we address checking the language equivalence and inclusion of\ntwo DFAs. We consider the Hopcroft-Karp algorithm, and explain how a variant of\nit can be parallelised for GPUs. We note that these problems can be encoded for\nthe GPU-accelerated model checker \\GPUexplore, allowing the use its lockless\nhash table and fine-grained parallel work distribution mechanism.", "AI": {"tldr": "\u672c\u6587\u7814\u7a76\u4e86\u5728GPU\u4e0a\u5e76\u884c\u5316\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a(DFA)\u6700\u5c0f\u5316\u548c\u7b49\u4ef7\u6027\u68c0\u67e5\u7684\u7b97\u6cd5\uff0c\u6bd4\u8f83\u4e86\u56db\u79cd\u5e76\u884c\u6700\u5c0f\u5316\u7b97\u6cd5\u7684\u6027\u80fd\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u57fa\u4e8e\u5206\u533a\u7ec6\u5316\u548c\u90e8\u5206\u4f20\u9012\u95ed\u5305\u7684\u6df7\u5408\u7b97\u6cd5\u3002", "motivation": "\u968f\u7740GPU\u8ba1\u7b97\u80fd\u529b\u7684\u53d1\u5c55\uff0c\u9700\u8981\u7814\u7a76\u5982\u4f55\u5229\u7528GPU\u7684\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\u6765\u52a0\u901fDFA\u5904\u7406\u7b97\u6cd5\uff0c\u7279\u522b\u662f\u6700\u5c0f\u5316\u548c\u7b49\u4ef7\u6027\u68c0\u67e5\u8fd9\u4e9b\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u3002", "method": "\u5b9e\u73b0\u4e86\u56db\u79cdGPU\u4e0a\u7684\u5e76\u884cDFA\u6700\u5c0f\u5316\u7b97\u6cd5\uff0c\u5305\u62ec\u57fa\u4e8e\u5206\u533a\u7ec6\u5316\u7684\u7b97\u6cd5\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408\u5206\u533a\u7ec6\u5316\u548c\u5e76\u884c\u90e8\u5206\u4f20\u9012\u95ed\u5305\u7684\u65b0\u6df7\u5408\u7b97\u6cd5\u3002\u5bf9\u4e8eDFA\u7b49\u4ef7\u6027\u68c0\u67e5\uff0c\u91c7\u7528\u4e86Hopcroft-Karp\u7b97\u6cd5\u7684\u5e76\u884c\u53d8\u4f53\uff0c\u5e76\u5229\u7528GPUexplore\u6a21\u578b\u68c0\u67e5\u5668\u7684\u5e76\u884c\u673a\u5236\u3002", "result": "\u7406\u8bba\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u4f18\u7684\u7b97\u6cd5\u5728\u5b9e\u9645GPU\u8fd0\u884c\u65f6\u8d44\u6e90\u6d88\u8017\u8fc7\u5927\uff0c\u800c\u5e76\u884c\u5206\u533a\u7ec6\u5316\u7b97\u6cd5\u5728\u5b9e\u8df5\u4e2d\u8868\u73b0\u66f4\u597d\u3002\u65b0\u63d0\u51fa\u7684\u6df7\u5408\u7b97\u6cd5\u5728\u7279\u5b9a\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u5177\u6709\u66f4\u597d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5b9e\u9645\u6027\u80fd\u3002", "conclusion": "GPU\u5e76\u884c\u5316DFA\u5904\u7406\u7b97\u6cd5\u5177\u6709\u5b9e\u9645\u53ef\u884c\u6027\uff0c\u4f46\u9700\u8981\u5e73\u8861\u7406\u8bba\u590d\u6742\u5ea6\u548c\u5b9e\u9645\u8d44\u6e90\u7ea6\u675f\u3002\u65b0\u63d0\u51fa\u7684\u6df7\u5408\u7b97\u6cd5\u5c55\u793a\u4e86\u5728\u7279\u5b9a\u573a\u666f\u4e0b\u7684\u4f18\u52bf\uff0c\u4e3aDFA\u5e76\u884c\u5904\u7406\u63d0\u4f9b\u4e86\u65b0\u7684\u601d\u8def\u3002"}}
{"id": "2508.20737", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.20737", "abs": "https://arxiv.org/abs/2508.20737", "authors": ["Wei Ma", "Yixiao Yang", "Qiang Hu", "Shi Ying", "Zhi Jin", "Bo Du", "Zhenchang Xing", "Tianlin Li", "Junjie Shi", "Yang Liu", "Linxiao Jiang"], "title": "Rethinking Testing for LLM Applications: Characteristics, Challenges, and a Lightweight Interaction Protocol", "comment": null, "summary": "Applications of Large Language Models~(LLMs) have evolved from simple text\ngenerators into complex software systems that integrate retrieval augmentation,\ntool invocation, and multi-turn interactions. Their inherent non-determinism,\ndynamism, and context dependence pose fundamental challenges for quality\nassurance. This paper decomposes LLM applications into a three-layer\narchitecture: \\textbf{\\textit{System Shell Layer}}, \\textbf{\\textit{Prompt\nOrchestration Layer}}, and \\textbf{\\textit{LLM Inference Core}}. We then assess\nthe applicability of traditional software testing methods in each layer:\ndirectly applicable at the shell layer, requiring semantic reinterpretation at\nthe orchestration layer, and necessitating paradigm shifts at the inference\ncore. A comparative analysis of Testing AI methods from the software\nengineering community and safety analysis techniques from the AI community\nreveals structural disconnects in testing unit abstraction, evaluation metrics,\nand lifecycle management. We identify four fundamental differences that\nunderlie 6 core challenges. To address these, we propose four types of\ncollaborative strategies (\\emph{Retain}, \\emph{Translate}, \\emph{Integrate},\nand \\emph{Runtime}) and explore a closed-loop, trustworthy quality assurance\nframework that combines pre-deployment validation with runtime monitoring.\nBased on these strategies, we offer practical guidance and a protocol proposal\nto support the standardization and tooling of LLM application testing. We\npropose a protocol \\textbf{\\textit{Agent Interaction Communication Language}}\n(AICL) that is used to communicate between AI agents. AICL has the\ntest-oriented features and is easily integrated in the current agent framework.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u5927\u8bed\u8a00\u6a21\u578b\u5e94\u7528\u7684\u4e09\u5c42\u6d4b\u8bd5\u67b6\u6784\uff0c\u5206\u6790\u4e86\u4f20\u7edf\u6d4b\u8bd5\u65b9\u6cd5\u5728\u5404\u5c42\u7684\u9002\u7528\u6027\uff0c\u5e76\u63d0\u51fa\u56db\u79cd\u534f\u540c\u7b56\u7565\u548c\u53ef\u4fe1\u8d28\u91cf\u4fdd\u969c\u6846\u67b6\u3002", "motivation": "\u5927\u8bed\u8a00\u6a21\u578b\u5e94\u7528\u7684\u975e\u786e\u5b9a\u6027\u3001\u52a8\u6001\u6027\u548c\u4e0a\u4e0b\u6587\u4f9d\u8d56\u6027\u7ed9\u8d28\u91cf\u4fdd\u969c\u5e26\u6765\u6839\u672c\u6311\u6218\uff0c\u9700\u8981\u65b0\u7684\u6d4b\u8bd5\u65b9\u6cd5\u6765\u5e94\u5bf9\u8fd9\u4e9b\u6311\u6218\u3002", "method": "\u5c06LLM\u5e94\u7528\u89e3\u6784\u4e3a\u4e09\u5c42\u67b6\u6784\uff1a\u7cfb\u7edf\u58f3\u5c42\u3001\u63d0\u793a\u7ec4\u7ec7\u5c42\u548cLLM\u63a8\u7406\u6838\u5fc3\u5c42\uff0c\u5206\u6790\u5404\u5c42\u7684\u6d4b\u8bd5\u9700\u6c42\uff0c\u63d0\u51fa\u56db\u79cd\u534f\u540c\u7b56\u7565\uff08\u4fdd\u7559\u3001\u8f6c\u6362\u3001\u96c6\u6210\u3001\u8fd0\u884c\u65f6\uff09\u548c\u53ef\u4fe1\u8d28\u91cf\u4fdd\u969c\u6846\u67b6\u3002", "result": "\u8bc6\u522b\u4e86\u8f6f\u4ef6\u5de5\u7a0b\u548cAI\u5b89\u5168\u5206\u6790\u6280\u672f\u4e4b\u95f4\u7684\u7ed3\u6784\u6027\u65ad\u5c42\uff0c\u63d0\u51fa\u4e86\u56db\u4e2a\u6839\u672c\u5dee\u5f02\u548c6\u4e2a\u6838\u5fc3\u6311\u6218\uff0c\u5e76\u63d0\u51fa\u4e86\u5b9e\u8df5\u6307\u5357\u548c\u6d4b\u8bd5\u534f\u8baeAICL\u3002", "conclusion": "\u901a\u8fc7\u591a\u5c42\u6d4b\u8bd5\u67b6\u6784\u548c\u534f\u540c\u7b56\u7565\uff0c\u53ef\u4ee5\u5efa\u7acb\u66f4\u6709\u6548\u7684LLM\u5e94\u7528\u8d28\u91cf\u4fdd\u969c\u4f53\u7cfb\uff0c\u4e3a\u6807\u51c6\u5316\u548c\u5de5\u5177\u5316\u63d0\u4f9b\u57fa\u7840\u3002"}}
{"id": "2508.20744", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.20744", "abs": "https://arxiv.org/abs/2508.20744", "authors": ["Shabnam Hassani", "Mehrdad Sabetzadeh", "Daniel Amyot"], "title": "From Law to Gherkin: A Human-Centred Quasi-Experiment on the Quality of LLM-Generated Behavioural Specifications from Food-Safety Regulations", "comment": null, "summary": "Context: Laws and regulations increasingly affect software design and quality\nassurance, but legal texts are written in technology-neutral language. This\ncreates challenges for engineers who must develop compliance artifacts such as\nrequirements and acceptance criteria. Manual creation is labor-intensive,\nerror-prone, and requires domain expertise. Advances in Generative AI (GenAI),\nespecially Large Language Models (LLMs), offer a way to automate deriving such\nartifacts.\n  Objective: We present the first systematic human-subject study of LLMs'\nability to derive behavioral specifications from legal texts using a\nquasi-experimental design. These specifications translate legal requirements\ninto a developer-friendly form.\n  Methods: Ten participants evaluated specifications generated from food-safety\nregulations by Claude and Llama. Using Gherkin, a structured BDD language, 60\nspecifications were produced. Each participant assessed 12 across five\ncriteria: Relevance, Clarity, Completeness, Singularity, and Time Savings. Each\nspecification was reviewed by two participants, yielding 120 assessments.\n  Results: For Relevance, 75% of ratings were highest and 20% second-highest.\nClarity reached 90% highest. Completeness: 75% highest, 19% second.\nSingularity: 82% highest, 12% second. Time Savings: 68% highest, 24% second. No\nlowest ratings occurred. Mann-Whitney U tests showed no significant differences\nacross participants or models. Llama slightly outperformed Claude in Clarity,\nCompleteness, and Time Savings, while Claude was stronger in Singularity.\nFeedback noted hallucinations and omissions but confirmed the utility of the\nspecifications.\n  Conclusion: LLMs can generate high-quality Gherkin specifications from legal\ntexts, reducing manual effort and providing structured artifacts useful for\nimplementation, assurance, and test generation.", "AI": {"tldr": "LLMs\u80fd\u591f\u4ece\u6cd5\u5f8b\u6587\u672c\u4e2d\u751f\u6210\u9ad8\u8d28\u91cf\u7684Gherkin\u884c\u4e3a\u89c4\u8303\uff0c\u663e\u8457\u51cf\u5c11\u4eba\u5de5\u5de5\u4f5c\u91cf\uff0c\u4e3a\u8f6f\u4ef6\u5408\u89c4\u6027\u63d0\u4f9b\u7ed3\u6784\u5316\u652f\u6301", "motivation": "\u6cd5\u5f8b\u6587\u672c\u91c7\u7528\u6280\u672f\u4e2d\u6027\u8bed\u8a00\u7f16\u5199\uff0c\u5de5\u7a0b\u5e08\u624b\u52a8\u521b\u5efa\u5408\u89c4\u9700\u6c42\u6587\u6863\u5de5\u4f5c\u91cf\u5927\u4e14\u6613\u51fa\u9519\uff0c\u9700\u8981\u5229\u7528GenAI\u6280\u672f\u81ea\u52a8\u5316\u8fd9\u4e00\u8fc7\u7a0b", "method": "\u91c7\u7528\u51c6\u5b9e\u9a8c\u8bbe\u8ba1\uff0c10\u540d\u53c2\u4e0e\u8005\u8bc4\u4f30Claude\u548cLlama\u4ece\u98df\u54c1\u5b89\u5168\u6cd5\u89c4\u751f\u6210\u768460\u4e2aGherkin\u89c4\u8303\uff0c\u6bcf\u4e2a\u89c4\u8303\u75312\u4eba\u8bc4\u4f305\u4e2a\u6807\u51c6\uff0c\u5171120\u6b21\u8bc4\u4f30", "result": "\u76f8\u5173\u602775%\u6700\u9ad8\u8bc4\u5206\uff0c\u6e05\u6670\u5ea690%\u6700\u9ad8\uff0c\u5b8c\u6574\u602775%\u6700\u9ad8\uff0c\u5355\u4e00\u602782%\u6700\u9ad8\uff0c\u65f6\u95f4\u8282\u770168%\u6700\u9ad8\u3002Llama\u5728\u6e05\u6670\u5ea6\u3001\u5b8c\u6574\u6027\u548c\u65f6\u95f4\u8282\u7701\u65b9\u9762\u7565\u4f18\uff0cClaude\u5728\u5355\u4e00\u6027\u65b9\u9762\u66f4\u5f3a", "conclusion": "LLMs\u80fd\u591f\u4ece\u6cd5\u5f8b\u6587\u672c\u751f\u6210\u9ad8\u8d28\u91cf\u7684Gherkin\u89c4\u8303\uff0c\u51cf\u5c11\u4eba\u5de5\u5de5\u4f5c\u91cf\uff0c\u4e3a\u5b9e\u65bd\u3001\u4fdd\u8bc1\u548c\u6d4b\u8bd5\u751f\u6210\u63d0\u4f9b\u6709\u7528\u7684\u7ed3\u6784\u5316\u6210\u679c"}}
{"id": "2508.20774", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.20774", "abs": "https://arxiv.org/abs/2508.20774", "authors": ["Markus Funke", "Patricia Lago"], "title": "Towards an Architectural Perspective for Sustainability: Bundle the Needs from Industry", "comment": null, "summary": "Sustainability is increasingly recognized as an emerging quality property in\nsoftware-intensive systems, yet architects lack structured guidance to address\nit effectively throughout the software design phase. Architectural\nperspectives-an architectural knowledge artifact composed of concerns,\nactivities, tactics, pitfalls, and checklists-offer a promising approach to\ntackle such emerging quality properties across architectural views and are also\nindependent of architecture frameworks and industry contexts. In this paper, we\npresent a sustainability perspective vision, i.e., a revised notion of\narchitectural perspective meant to be filled with its own elements to target\nsustainability concerns. We formulate our sustainability perspective vision\nthrough evidence from applying snowballing to seminal literature and from\nconducting a focus group with experts in the field. Our findings confirm the\nrelevance of the different perspective elements in practice and highlight\nimplications for shaping a sustainability perspective that meets industrial\nneeds.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u53ef\u6301\u7eed\u6027\u89c6\u89d2\u613f\u666f\uff0c\u901a\u8fc7\u7cfb\u7edf\u6587\u732e\u56de\u987e\u548c\u4e13\u5bb6\u7126\u70b9\u5c0f\u7ec4\u7814\u7a76\uff0c\u4e3a\u8f6f\u4ef6\u67b6\u6784\u5e08\u63d0\u4f9b\u7ed3\u6784\u5316\u6307\u5bfc\u6765\u5904\u7406\u53ef\u6301\u7eed\u6027\u8d28\u91cf\u5c5e\u6027", "motivation": "\u8f6f\u4ef6\u5bc6\u96c6\u578b\u7cfb\u7edf\u4e2d\u53ef\u6301\u7eed\u6027\u4f5c\u4e3a\u65b0\u5174\u8d28\u91cf\u5c5e\u6027\u65e5\u76ca\u91cd\u8981\uff0c\u4f46\u67b6\u6784\u5e08\u5728\u8bbe\u8ba1\u9636\u6bb5\u7f3a\u4e4f\u6709\u6548\u7684\u7ed3\u6784\u5316\u6307\u5bfc\u65b9\u6cd5", "method": "\u91c7\u7528\u96ea\u7403\u6cd5\u5bf9\u5f00\u521b\u6027\u6587\u732e\u8fdb\u884c\u7cfb\u7edf\u56de\u987e\uff0c\u5e76\u7ec4\u7ec7\u9886\u57df\u4e13\u5bb6\u7126\u70b9\u5c0f\u7ec4\u8ba8\u8bba\uff0c\u5236\u5b9a\u53ef\u6301\u7eed\u6027\u89c6\u89d2\u6846\u67b6", "result": "\u786e\u8ba4\u4e86\u4e0d\u540c\u89c6\u89d2\u5143\u7d20\u5728\u5b9e\u8df5\u4e2d\u7684\u76f8\u5173\u6027\uff0c\u5e76\u660e\u786e\u4e86\u6ee1\u8db3\u5de5\u4e1a\u9700\u6c42\u7684\u53ef\u6301\u7eed\u6027\u89c6\u89d2\u7684\u5173\u952e\u8981\u7d20", "conclusion": "\u53ef\u6301\u7eed\u6027\u89c6\u89d2\u613f\u666f\u4e3a\u8f6f\u4ef6\u67b6\u6784\u63d0\u4f9b\u4e86\u72ec\u7acb\u4e8e\u67b6\u6784\u6846\u67b6\u548c\u884c\u4e1a\u80cc\u666f\u7684\u7ed3\u6784\u5316\u65b9\u6cd5\uff0c\u80fd\u591f\u6709\u6548\u6307\u5bfc\u53ef\u6301\u7eed\u6027\u8d28\u91cf\u5c5e\u6027\u7684\u5904\u7406"}}
{"id": "2508.20902", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.20902", "abs": "https://arxiv.org/abs/2508.20902", "authors": ["Baharin A. Jodat", "Khouloud Gaaloul", "Mehrdad Sabetzadeh", "Shiva Nejati"], "title": "Automated Test Oracles for Flaky Cyber-Physical System Simulators: Approach and Evaluation", "comment": null, "summary": "Simulation-based testing of cyber-physical systems (CPS) is costly due to the\ntime-consuming execution of CPS simulators. In addition, CPS simulators may be\nflaky, leading to inconsistent test outcomes and requiring repeated test\nre-execution for reliable test verdicts. Automated test oracles that do not\nrequire system execution are therefore crucial for reducing testing costs.\nIdeally, such test oracles should be interpretable to facilitate human\nunderstanding of test verdicts, and they must be robust against the potential\nflakiness of CPS simulators. In this article, we propose assertion-based test\noracles for CPS as sets of logical and arithmetic predicates defined over the\ninputs of the system under test. Given a test input, our assertion-based test\noracle determines, without requiring test execution, whether the test passes,\nfails, or if the oracle is inconclusive in predicting a verdict. We describe\ntwo methods for generating assertion-based test oracles: one using genetic\nprogramming~(GP) that employs well-known spectrum-based fault localization\n(SBFL) ranking formulas, namely Ochiai, Tarantula, and Naish, as fitness\nfunctions; and the other using decision trees (DT) and decision rules (DR). We\nevaluate our assertion-based test oracles through case studies in the domains\nof aerospace, networking and autonomous driving. We show that test oracles\ngenerated using GP with Ochiai are significantly more accurate than those\nobtained using GP with Tarantula and Naish or using DT or DR. Moreover, this\naccuracy advantage remains even when accounting for the flakiness of the system\nunder test. We further show that the assertion-based test oracles generated by\nGP with Ochiai are robust against flakiness with only 4% average variation in\ntheir accuracy results across four different network and autonomous driving\nsystems with flaky behaviours.", "AI": {"tldr": "\u63d0\u51fa\u57fa\u4e8e\u65ad\u8a00\u7684\u6d4b\u8bd5\u9884\u8a00\u65b9\u6cd5\uff0c\u4f7f\u7528\u9057\u4f20\u7f16\u7a0b\u548c\u51b3\u7b56\u6811\u6280\u672f\u4e3a\u4fe1\u606f\u7269\u7406\u7cfb\u7edf\u751f\u6210\u65e0\u9700\u6267\u884c\u6d4b\u8bd5\u5373\u53ef\u5224\u65ad\u7ed3\u679c\u7684\u6d4b\u8bd5\u9884\u8a00\uff0c\u5176\u4e2d\u9057\u4f20\u7f16\u7a0b\u914d\u5408Ochiai\u516c\u5f0f\u5728\u51c6\u786e\u6027\u548c\u6297\u5e72\u6270\u6027\u65b9\u9762\u8868\u73b0\u6700\u4f73", "motivation": "\u4fe1\u606f\u7269\u7406\u7cfb\u7edf\u4eff\u771f\u6d4b\u8bd5\u6210\u672c\u9ad8\u4e14\u5b58\u5728\u7ed3\u679c\u4e0d\u4e00\u81f4\u95ee\u9898\uff0c\u9700\u8981\u65e0\u9700\u7cfb\u7edf\u6267\u884c\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u9884\u8a00\u6765\u964d\u4f4e\u6d4b\u8bd5\u6210\u672c\uff0c\u540c\u65f6\u8981\u6c42\u6d4b\u8bd5\u9884\u8a00\u5177\u6709\u53ef\u89e3\u91ca\u6027\u5e76\u80fd\u62b5\u6297\u4eff\u771f\u5668\u7684\u4e0d\u7a33\u5b9a\u6027", "method": "\u63d0\u51fa\u57fa\u4e8e\u65ad\u8a00\u7684\u6d4b\u8bd5\u9884\u8a00\u65b9\u6cd5\uff0c\u4f7f\u7528\u4e24\u79cd\u751f\u6210\u6280\u672f\uff1a1\uff09\u9057\u4f20\u7f16\u7a0b\uff08GP\uff09\u7ed3\u5408\u9891\u8c31\u6545\u969c\u5b9a\u4f4d\u6392\u540d\u516c\u5f0f\uff08Ochiai\u3001Tarantula\u3001Naish\uff09\u4f5c\u4e3a\u9002\u5e94\u5ea6\u51fd\u6570\uff1b2\uff09\u51b3\u7b56\u6811\uff08DT\uff09\u548c\u51b3\u7b56\u89c4\u5219\uff08DR\uff09", "result": "\u7814\u7a76\u8868\u660e\uff0c\u4f7f\u7528GP\u914d\u5408Ochiai\u516c\u5f0f\u751f\u6210\u7684\u6d4b\u8bd5\u9884\u8a00\u51c6\u786e\u7387\u663e\u8457\u9ad8\u4e8e\u5176\u4ed6\u65b9\u6cd5\uff0c\u5373\u4f7f\u5728\u7cfb\u7edf\u5b58\u5728\u4e0d\u7a33\u5b9a\u6027\u60c5\u51b5\u4e0b\u4ecd\u4fdd\u6301\u4f18\u52bf\uff0c\u5e73\u5747\u51c6\u786e\u7387\u53d8\u5316\u4ec5\u4e3a4%\uff0c\u8868\u73b0\u51fa\u826f\u597d\u7684\u6297\u5e72\u6270\u6027", "conclusion": "\u57fa\u4e8e\u65ad\u8a00\u7684\u6d4b\u8bd5\u9884\u8a00\u65b9\u6cd5\u80fd\u6709\u6548\u964d\u4f4e\u4fe1\u606f\u7269\u7406\u7cfb\u7edf\u6d4b\u8bd5\u6210\u672c\uff0cGP\u914d\u5408Ochiai\u516c\u5f0f\u662f\u6700\u4f18\u9009\u62e9\uff0c\u751f\u6210\u7684\u6d4b\u8bd5\u9884\u8a00\u5177\u6709\u9ad8\u51c6\u786e\u6027\u548c\u5f3a\u9c81\u68d2\u6027\uff0c\u9002\u7528\u4e8e\u822a\u7a7a\u822a\u5929\u3001\u7f51\u7edc\u548c\u81ea\u52a8\u9a7e\u9a76\u7b49\u9886\u57df"}}
{"id": "2508.20911", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.20911", "abs": "https://arxiv.org/abs/2508.20911", "authors": ["Zuocheng Feng", "Kaiwen Zhang", "Miaomiao Wang", "Yiming Cheng", "Yuandao Cai", "Xiaofeng Li", "Guanjun Liu"], "title": "Deep Learning Based Concurrency Bug Detection and Localization", "comment": null, "summary": "Concurrency bugs, caused by improper synchronization of shared resources in\nmulti-threaded or distributed systems, are notoriously hard to detect and thus\ncompromise software reliability and security. The existing deep learning\nmethods face three main limitations. First, there is an absence of large and\ndedicated datasets of diverse concurrency bugs for them. Second, they lack\nsufficient representation of concurrency semantics. Third, binary\nclassification results fail to provide finer-grained debug information such as\nprecise bug lines. To address these problems, we propose a novel method for\neffective concurrency bug detection as well as localization. We construct a\ndedicated concurrency bug dataset to facilitate model training and evaluation.\nWe then integrate a pre-trained model with a heterogeneous graph neural network\n(GNN), by incorporating a new Concurrency-Aware Code Property Graph (CCPG) that\nconcisely and effectively characterizes concurrency semantics. To further\nfacilitate debugging, we employ SubgraphX, a GNN-based interpretability method,\nwhich explores the graphs to precisely localize concurrency bugs, mapping them\nto specific lines of source code. On average, our method demonstrates an\nimprovement of 10\\% in accuracy and precision and 26\\% in recall compared to\nstate-of-the-art methods across diverse evaluation settings.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc\u548c\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u65b0\u65b9\u6cd5\uff0c\u7528\u4e8e\u5e76\u53d1bug\u68c0\u6d4b\u548c\u5b9a\u4f4d\uff0c\u901a\u8fc7\u6784\u5efa\u4e13\u7528\u6570\u636e\u96c6\u548c\u5e76\u53d1\u611f\u77e5\u4ee3\u7801\u5c5e\u6027\u56fe\u6765\u63d0\u5347\u68c0\u6d4b\u6548\u679c\u3002", "motivation": "\u73b0\u6709\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u5728\u5e76\u53d1bug\u68c0\u6d4b\u65b9\u9762\u5b58\u5728\u4e09\u4e2a\u4e3b\u8981\u9650\u5236\uff1a\u7f3a\u4e4f\u5927\u89c4\u6a21\u4e13\u7528\u6570\u636e\u96c6\u3001\u5e76\u53d1\u8bed\u4e49\u8868\u793a\u4e0d\u8db3\u3001\u4e8c\u8fdb\u5236\u5206\u7c7b\u65e0\u6cd5\u63d0\u4f9b\u7ec6\u7c92\u5ea6\u8c03\u8bd5\u4fe1\u606f\u3002", "method": "\u6784\u5efa\u4e13\u7528\u5e76\u53d1bug\u6570\u636e\u96c6\uff0c\u96c6\u6210\u9884\u8bad\u7ec3\u6a21\u578b\u548c\u5f02\u6784\u56fe\u795e\u7ecf\u7f51\u7edc\uff0c\u4f7f\u7528\u65b0\u7684\u5e76\u53d1\u611f\u77e5\u4ee3\u7801\u5c5e\u6027\u56fe(CCPG)\u6765\u8868\u5f81\u5e76\u53d1\u8bed\u4e49\uff0c\u5e76\u91c7\u7528SubgraphX\u65b9\u6cd5\u8fdb\u884c\u7cbe\u786e\u5b9a\u4f4d\u3002", "result": "\u5728\u591a\u79cd\u8bc4\u4f30\u8bbe\u7f6e\u4e0b\uff0c\u76f8\u6bd4\u6700\u5148\u8fdb\u65b9\u6cd5\uff0c\u5e73\u5747\u51c6\u786e\u7387\u548c\u7cbe\u786e\u5ea6\u63d0\u534710%\uff0c\u53ec\u56de\u7387\u63d0\u534726%\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u6709\u6548\u89e3\u51b3\u4e86\u5e76\u53d1bug\u68c0\u6d4b\u548c\u5b9a\u4f4d\u95ee\u9898\uff0c\u901a\u8fc7\u7ed3\u5408\u9884\u8bad\u7ec3\u6a21\u578b\u548c\u56fe\u795e\u7ecf\u7f51\u7edc\uff0c\u663e\u8457\u63d0\u5347\u4e86\u68c0\u6d4b\u6027\u80fd\u548c\u8c03\u8bd5\u6548\u7387\u3002"}}
{"id": "2508.20977", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.20977", "abs": "https://arxiv.org/abs/2508.20977", "authors": ["Shiwen Shan", "Yintong Huo", "Yuxin Su", "Zhining Wang", "Dan Li", "Zibin Zheng"], "title": "ConfLogger: Enhance Systems' Configuration Diagnosability through Configuration Logging", "comment": "13 pages, 6 figures, accpeted by ICSE '26 (The 48th IEEE/ACM\n  International Conference on Software Engineering)", "summary": "Modern configurable systems offer customization via intricate configuration\nspaces, yet such flexibility introduces pervasive configuration-related issues\nsuch as misconfigurations and latent softwarebugs. Existing diagnosability\nsupports focus on post-failure analysis of software behavior to identify\nconfiguration issues, but none of these approaches look into whether the\nsoftware clue sufficient failure information for diagnosis. To fill in the\nblank, we propose the idea of configuration logging to enhance existing logging\npractices at the source code level. We develop ConfLogger, the first tool that\nunifies configuration-aware static taint analysis with LLM-based log generation\nto enhance software configuration diagnosability. Specifically, our method 1)\nidentifies configuration-sensitive code segments by tracing\nconfiguration-related data flow in the whole project, and 2) generates\ndiagnostic log statements by analyzing configuration code contexts. Evaluation\nresults on eight popular software systems demonstrate the effectiveness of\nConfLogger to enhance configuration diagnosability. Specifically,\nConfLogger-enhanced logs successfully aid a log-based misconfiguration\ndiagnosis tool to achieve 100% accuracy on error localization in 30 silent\nmisconfiguration scenarios, with 80% directly resolvable through explicit\nconfiguration information exposed. In addition, ConfLogger achieves 74%\ncoverage of existing logging points, outperforming baseline LLM-based loggers\nby 12% and 30%. It also gains 8.6% higher in precision, 79.3% higher in recall,\nand 26.2% higher in F1 compared to the state-of-the-art baseline in terms of\nvariable logging while also augmenting diagnostic value. A controlled user\nstudy on 22 cases further validated its utility, speeding up diagnostic time by\n1.25x and improving troubleshooting accuracy by 251.4%.", "AI": {"tldr": "\u63d0\u51faConfLogger\u5de5\u5177\uff0c\u901a\u8fc7\u914d\u7f6e\u611f\u77e5\u7684\u9759\u6001\u6c61\u70b9\u5206\u6790\u548cLLM\u65e5\u5fd7\u751f\u6210\uff0c\u589e\u5f3a\u8f6f\u4ef6\u914d\u7f6e\u53ef\u8bca\u65ad\u6027\uff0c\u57288\u4e2a\u7cfb\u7edf\u4e2d\u9a8c\u8bc1\u6709\u6548\uff0c\u663e\u8457\u63d0\u5347\u9519\u8bef\u5b9a\u4f4d\u51c6\u786e\u6027\u548c\u8bca\u65ad\u6548\u7387", "motivation": "\u73b0\u4ee3\u53ef\u914d\u7f6e\u7cfb\u7edf\u867d\u7136\u63d0\u4f9b\u7075\u6d3b\u6027\uff0c\u4f46\u5e26\u6765\u4e86\u914d\u7f6e\u76f8\u5173\u95ee\u9898\u3002\u73b0\u6709\u8bca\u65ad\u65b9\u6cd5\u4e13\u6ce8\u4e8e\u6545\u969c\u540e\u5206\u6790\uff0c\u4f46\u7f3a\u4e4f\u5bf9\u8f6f\u4ef6\u662f\u5426\u63d0\u4f9b\u8db3\u591f\u6545\u969c\u4fe1\u606f\u8fdb\u884c\u8bca\u65ad\u7684\u5173\u6ce8", "method": "1) \u901a\u8fc7\u8ffd\u8e2a\u6574\u4e2a\u9879\u76ee\u4e2d\u7684\u914d\u7f6e\u76f8\u5173\u6570\u636e\u6d41\u6765\u8bc6\u522b\u914d\u7f6e\u654f\u611f\u4ee3\u7801\u6bb5\uff1b2) \u901a\u8fc7\u5206\u6790\u914d\u7f6e\u4ee3\u7801\u4e0a\u4e0b\u6587\u751f\u6210\u8bca\u65ad\u65e5\u5fd7\u8bed\u53e5\uff1b\u7ed3\u5408\u914d\u7f6e\u611f\u77e5\u9759\u6001\u6c61\u70b9\u5206\u6790\u548c\u57fa\u4e8eLLM\u7684\u65e5\u5fd7\u751f\u6210", "result": "\u57288\u4e2a\u6d41\u884c\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\u9a8c\u8bc1\u6709\u6548\uff1aConfLogger\u589e\u5f3a\u7684\u65e5\u5fd7\u5e2e\u52a9\u8bca\u65ad\u5de5\u5177\u572830\u4e2a\u9759\u9ed8\u914d\u7f6e\u9519\u8bef\u573a\u666f\u4e2d\u8fbe\u5230100%\u9519\u8bef\u5b9a\u4f4d\u51c6\u786e\u5ea6\uff0c80%\u53ef\u901a\u8fc7\u66b4\u9732\u7684\u663e\u5f0f\u914d\u7f6e\u4fe1\u606f\u76f4\u63a5\u89e3\u51b3\uff1b\u8986\u76d6\u73b0\u6709\u65e5\u5fd7\u70b974%\uff0c\u4f18\u4e8e\u57fa\u7ebfLLM\u65e5\u5fd7\u566812-30%\uff1b\u5728\u53d8\u91cf\u65e5\u5fd7\u65b9\u9762\u7cbe\u5ea6\u63d0\u53478.6%\uff0c\u53ec\u56de\u7387\u63d0\u534779.3%\uff0cF1\u63d0\u534726.2%\uff1b\u7528\u6237\u7814\u7a76\u663e\u793a\u8bca\u65ad\u65f6\u95f4\u52a0\u5feb1.25\u500d\uff0c\u6545\u969c\u6392\u9664\u51c6\u786e\u7387\u63d0\u5347251.4%", "conclusion": "ConfLogger\u901a\u8fc7\u7edf\u4e00\u7684\u914d\u7f6e\u611f\u77e5\u9759\u6001\u5206\u6790\u548cLLM\u65e5\u5fd7\u751f\u6210\u65b9\u6cd5\uff0c\u6709\u6548\u589e\u5f3a\u4e86\u8f6f\u4ef6\u914d\u7f6e\u53ef\u8bca\u65ad\u6027\uff0c\u4e3a\u914d\u7f6e\u76f8\u5173\u95ee\u9898\u7684\u8bca\u65ad\u63d0\u4f9b\u4e86\u5b9e\u7528\u89e3\u51b3\u65b9\u6848"}}
{"id": "2508.21050", "categories": ["cs.SE", "cs.CY", "K.2; K.6.3; K.4; K.7"], "pdf": "https://arxiv.org/pdf/2508.21050", "abs": "https://arxiv.org/abs/2508.21050", "authors": ["Thomas J. Misa"], "title": "Dynamics of Gender Bias in Software Engineering", "comment": "26 pages, 3 figures", "summary": "The field of software engineering is embedded in both engineering and\ncomputer science, and may embody gender biases endemic to both. This paper\nsurveys software engineering's origins and its long-running attention to\nengineering professionalism, profiling five leaders; it then examines the\nfield's recent attention to gender issues and gender bias. It next\nquantitatively analyzes women's participation as research authors in the\nfield's leading International Conference of Software Engineering (1976-2010),\nfinding a dozen years with statistically significant gender exclusion. Policy\ndimensions of research on gender bias in computing are suggested.", "AI": {"tldr": "\u8be5\u8bba\u6587\u5206\u6790\u4e86\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\u7684\u6027\u522b\u504f\u89c1\u95ee\u9898\uff0c\u5305\u62ec\u8be5\u9886\u57df\u7684\u8d77\u6e90\u3001\u5de5\u7a0b\u4e13\u4e1a\u6027\u4ee5\u53ca\u5728ICSE\u4f1a\u8bae\u4e2d\u5973\u6027\u53c2\u4e0e\u5ea6\u7684\u7edf\u8ba1\u5206\u6790\uff0c\u53d1\u73b0\u4e86\u957f\u8fbe12\u5e74\u7684\u6027\u522b\u6392\u9664\u73b0\u8c61\u3002", "motivation": "\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\u6839\u6df1\u8482\u56fa\u5730\u5d4c\u5165\u4e86\u5de5\u7a0b\u5b66\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\uff0c\u53ef\u80fd\u5b58\u5728\u4e24\u4e2a\u9886\u57df\u90fd\u5e38\u89c1\u7684\u6027\u522b\u504f\u89c1\u95ee\u9898\u3002\u7814\u7a76\u52a8\u673a\u5728\u4e8e\u63a2\u7d22\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\u4e2d\u7684\u6027\u522b\u504f\u89c1\u73b0\u8c61\u548c\u5973\u6027\u53c2\u4e0e\u60c5\u51b5\u3002", "method": "\u91c7\u7528\u4e86\u591a\u79cd\u7814\u7a76\u65b9\u6cd5\uff1a1\uff09\u8c03\u67e5\u8f6f\u4ef6\u5de5\u7a0b\u7684\u8d77\u6e90\u548c\u5de5\u7a0b\u4e13\u4e1a\u6027\u53d1\u5c55\uff1b2\uff09\u5206\u6790\u8be5\u9886\u57df\u6700\u8fd1\u5bf9\u6027\u522b\u95ee\u9898\u7684\u5173\u6ce8\uff1b3\uff09\u5bf9\u9886\u519b\u56fd\u9645\u8f6f\u4ef6\u5de5\u7a0b\u4f1a\u8bae\uff08ICSE\uff091976-2010\u5e74\u95f4\u7684\u7814\u7a76\u4f5c\u8005\u8fdb\u884c\u5b9a\u91cf\u5206\u6790\uff0c\u8bc6\u522b\u7edf\u8ba1\u4e0a\u663e\u8457\u7684\u6027\u522b\u6392\u9664\u5e74\u4efd\u3002", "result": "\u7814\u7a76\u53d1\u73b0\u5728ICSE\u4f1a\u8bae\u4e2d\u5b58\u5728\u957f\u8fbe12\u5e74\u7684\u7edf\u8ba1\u4e0a\u663e\u8457\u7684\u6027\u522b\u6392\u9664\u73b0\u8c61\uff0c\u8bf4\u660e\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\u786e\u5b9e\u5b58\u5728\u6027\u522b\u504f\u89c1\u95ee\u9898\u3002", "conclusion": "\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\u5b58\u5728\u7cfb\u7edf\u6027\u7684\u6027\u522b\u504f\u89c1\uff0c\u9700\u8981\u901a\u8fc7\u653f\u7b56\u5c42\u9762\u7684\u7814\u7a76\u548c\u5e72\u9884\u63aa\u65bd\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\uff0c\u4ee5\u4fc3\u8fdb\u9886\u57df\u7684\u6027\u522b\u5e73\u7b49\u548c\u591a\u5143\u5316\u3002"}}
