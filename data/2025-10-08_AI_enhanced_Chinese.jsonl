{"id": "2510.05147", "categories": ["cs.SE", "cs.LG", "stat.ML"], "pdf": "https://arxiv.org/pdf/2510.05147", "abs": "https://arxiv.org/abs/2510.05147", "authors": ["Yu Zhu"], "title": "Adaptive Reinforcement Learning for Dynamic Configuration Allocation in Pre-Production Testing", "comment": null, "summary": "Ensuring reliability in modern software systems requires rigorous\npre-production testing across highly heterogeneous and evolving environments.\nBecause exhaustive evaluation is infeasible, practitioners must decide how to\nallocate limited testing resources across configurations where failure\nprobabilities may drift over time. Existing combinatorial optimization\napproaches are static, ad hoc, and poorly suited to such non-stationary\nsettings. We introduce a novel reinforcement learning (RL) framework that\nrecasts configuration allocation as a sequential decision-making problem. Our\nmethod is the first to integrate Q-learning with a hybrid reward design that\nfuses simulated outcomes and real-time feedback, enabling both sample\nefficiency and robustness. In addition, we develop an adaptive online-offline\ntraining scheme that allows the agent to quickly track abrupt probability\nshifts while maintaining long-run stability. Extensive simulation studies\ndemonstrate that our approach consistently outperforms static and\noptimization-based baselines, approaching oracle performance. This work\nestablishes RL as a powerful new paradigm for adaptive configuration\nallocation, advancing beyond traditional methods and offering broad\napplicability to dynamic testing and resource scheduling domains.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5f3a\u5316\u5b66\u4e60\u7684\u81ea\u9002\u5e94\u914d\u7f6e\u5206\u914d\u6846\u67b6\uff0c\u7528\u4e8e\u89e3\u51b3\u975e\u5e73\u7a33\u73af\u5883\u4e0b\u8f6f\u4ef6\u6d4b\u8bd5\u8d44\u6e90\u914d\u7f6e\u7684\u4f18\u5316\u95ee\u9898\u3002", "motivation": "\u73b0\u4ee3\u8f6f\u4ef6\u7cfb\u7edf\u9700\u8981\u5728\u9ad8\u5ea6\u5f02\u6784\u548c\u52a8\u6001\u53d8\u5316\u7684\u73af\u5883\u4e2d\u8fdb\u884c\u4e25\u683c\u7684\u9884\u751f\u4ea7\u6d4b\u8bd5\uff0c\u4f46\u4f20\u7edf\u7ec4\u5408\u4f18\u5316\u65b9\u6cd5\u65e0\u6cd5\u6709\u6548\u5e94\u5bf9\u6982\u7387\u6f02\u79fb\u7684\u975e\u5e73\u7a33\u73af\u5883\u3002", "method": "\u91c7\u7528Q-learning\u5f3a\u5316\u5b66\u4e60\u6846\u67b6\uff0c\u7ed3\u5408\u6df7\u5408\u5956\u52b1\u8bbe\u8ba1\uff08\u878d\u5408\u6a21\u62df\u7ed3\u679c\u548c\u5b9e\u65f6\u53cd\u9988\uff09\uff0c\u5e76\u5f00\u53d1\u4e86\u81ea\u9002\u5e94\u5728\u7ebf-\u79bb\u7ebf\u8bad\u7ec3\u65b9\u6848\u6765\u5feb\u901f\u8ddf\u8e2a\u6982\u7387\u53d8\u5316\u3002", "result": "\u5e7f\u6cdb\u7684\u4eff\u771f\u7814\u7a76\u8868\u660e\uff0c\u8be5\u65b9\u6cd5\u6301\u7eed\u4f18\u4e8e\u9759\u6001\u548c\u57fa\u4e8e\u4f18\u5316\u7684\u57fa\u7ebf\u65b9\u6cd5\uff0c\u63a5\u8fd1oracle\u6027\u80fd\u3002", "conclusion": "\u8fd9\u9879\u5de5\u4f5c\u786e\u7acb\u4e86\u5f3a\u5316\u5b66\u4e60\u4f5c\u4e3a\u81ea\u9002\u5e94\u914d\u7f6e\u5206\u914d\u7684\u65b0\u8303\u5f0f\uff0c\u8d85\u8d8a\u4e86\u4f20\u7edf\u65b9\u6cd5\uff0c\u5728\u52a8\u6001\u6d4b\u8bd5\u548c\u8d44\u6e90\u8c03\u5ea6\u9886\u57df\u5177\u6709\u5e7f\u6cdb\u9002\u7528\u6027\u3002"}}
{"id": "2510.05156", "categories": ["cs.SE", "cs.AI", "cs.CR", "I.2.7"], "pdf": "https://arxiv.org/pdf/2510.05156", "abs": "https://arxiv.org/abs/2510.05156", "authors": ["Lesly Miculicich", "Mihir Parmar", "Hamid Palangi", "Krishnamurthy Dj Dvijotham", "Mirko Montanari", "Tomas Pfister", "Long T. Le"], "title": "VeriGuard: Enhancing LLM Agent Safety via Verified Code Generation", "comment": "22 pages", "summary": "The deployment of autonomous AI agents in sensitive domains, such as\nhealthcare, introduces critical risks to safety, security, and privacy. These\nagents may deviate from user objectives, violate data handling policies, or be\ncompromised by adversarial attacks. Mitigating these dangers necessitates a\nmechanism to formally guarantee that an agent's actions adhere to predefined\nsafety constraints, a challenge that existing systems do not fully address. We\nintroduce VeriGuard, a novel framework that provides formal safety guarantees\nfor LLM-based agents through a dual-stage architecture designed for robust and\nverifiable correctness. The initial offline stage involves a comprehensive\nvalidation process. It begins by clarifying user intent to establish precise\nsafety specifications. VeriGuard then synthesizes a behavioral policy and\nsubjects it to both testing and formal verification to prove its compliance\nwith these specifications. This iterative process refines the policy until it\nis deemed correct. Subsequently, the second stage provides online action\nmonitoring, where VeriGuard operates as a runtime monitor to validate each\nproposed agent action against the pre-verified policy before execution. This\nseparation of the exhaustive offline validation from the lightweight online\nmonitoring allows formal guarantees to be practically applied, providing a\nrobust safeguard that substantially improves the trustworthiness of LLM agents.", "AI": {"tldr": "VeriGuard\u662f\u4e00\u4e2a\u4e3aLLM\u667a\u80fd\u4f53\u63d0\u4f9b\u5f62\u5f0f\u5316\u5b89\u5168\u4fdd\u969c\u7684\u53cc\u9636\u6bb5\u6846\u67b6\uff0c\u901a\u8fc7\u79bb\u7ebf\u9a8c\u8bc1\u548c\u5728\u7ebf\u76d1\u63a7\u786e\u4fdd\u667a\u80fd\u4f53\u884c\u4e3a\u7b26\u5408\u5b89\u5168\u7ea6\u675f\u3002", "motivation": "\u5728\u533b\u7597\u7b49\u654f\u611f\u9886\u57df\u90e8\u7f72\u81ea\u4e3bAI\u667a\u80fd\u4f53\u5b58\u5728\u5b89\u5168\u98ce\u9669\uff0c\u73b0\u6709\u7cfb\u7edf\u65e0\u6cd5\u5145\u5206\u4fdd\u8bc1\u667a\u80fd\u4f53\u884c\u4e3a\u7b26\u5408\u9884\u5b9a\u4e49\u5b89\u5168\u7ea6\u675f\u3002", "method": "\u91c7\u7528\u53cc\u9636\u6bb5\u67b6\u6784\uff1a\u79bb\u7ebf\u9636\u6bb5\u901a\u8fc7\u610f\u56fe\u6f84\u6e05\u3001\u7b56\u7565\u5408\u6210\u548c\u5f62\u5f0f\u5316\u9a8c\u8bc1\u6765\u786e\u4fdd\u7b56\u7565\u6b63\u786e\u6027\uff1b\u5728\u7ebf\u9636\u6bb5\u4f5c\u4e3a\u8fd0\u884c\u65f6\u76d1\u63a7\u5668\u9a8c\u8bc1\u6bcf\u4e2a\u52a8\u4f5c\u3002", "result": "\u8be5\u6846\u67b6\u80fd\u591f\u5b9e\u9645\u5e94\u7528\u5f62\u5f0f\u5316\u4fdd\u8bc1\uff0c\u663e\u8457\u63d0\u9ad8LLM\u667a\u80fd\u4f53\u7684\u53ef\u4fe1\u5ea6\u3002", "conclusion": "VeriGuard\u901a\u8fc7\u5206\u79bb\u79bb\u7ebf\u9a8c\u8bc1\u548c\u5728\u7ebf\u76d1\u63a7\uff0c\u4e3aLLM\u667a\u80fd\u4f53\u63d0\u4f9b\u4e86\u5b9e\u7528\u7684\u5f62\u5f0f\u5316\u5b89\u5168\u4fdd\u969c\u673a\u5236\u3002"}}
{"id": "2510.05365", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.05365", "abs": "https://arxiv.org/abs/2510.05365", "authors": ["Irtaza Sajid Qureshi", "Zhen Ming", "Jiang"], "title": "Test Case Generation from Bug Reports via Large Language Models: A Cognitive Layered Evaluation Framework", "comment": null, "summary": "Large Language Models (LLMs) are increasingly applied to automated software\ntesting, yet their ability to generalize beyond memorized patterns and reason\nabout natural language bug reports remains unclear. We present a systematic\nevaluation of LLM reasoning in test case generation, structured around the\ncognitive layers of Bloom's taxonomy: \\textit{Remember}, \\textit{Understand},\n\\textit{Apply}, \\textit{Analyze}, \\textit{Evaluate}, and \\textit{Create}, which\nprogressively assess higher levels of cognitive and reasoning capabilities.\nBuilding on the LIBRO framework, we evaluate StarCoder and GPT-4o on Defects4J,\nGHRB, and mutated variants that introduce linguistic and semantic challenges.\nOur findings show that both models largely reproduce prior results with minor\ndeviations (\\textit{Remember}), exhibit partial robustness to linguistic\nrephrasings and translations while uncovering unique reproducible bugs\n(\\textit{Understand}), but suffer severe performance drops exceeding 60\\% under\nidentifier mutations (\\textit{Apply}). Conversely, providing near-identical\nfew-shot examples in an open-book setting improves success rates by up to three\ntimes, and component-level analysis reveals that structured technical elements,\nsuch as test code and method names, are far more impactful than narrative\ndescriptions for successful test generation (\\textit{Analyze}). These insights\nilluminate the cognitive processes underlying LLM-generated tests, suggest\nconcrete directions for improving performance, and establish a robust and\nrealistic evaluation paradigm for this task.", "AI": {"tldr": "\u672c\u6587\u7cfb\u7edf\u8bc4\u4f30\u4e86LLM\u5728\u6d4b\u8bd5\u7528\u4f8b\u751f\u6210\u4e2d\u7684\u63a8\u7406\u80fd\u529b\uff0c\u57fa\u4e8eBloom\u8ba4\u77e5\u5206\u7c7b\u5b66\u6846\u67b6\uff0c\u53d1\u73b0LLM\u80fd\u8bb0\u5fc6\u548c\u90e8\u5206\u7406\u89e3\u4efb\u52a1\uff0c\u4f46\u5728\u5e94\u7528\u5c42\u9762\u5b58\u5728\u4e25\u91cd\u6027\u80fd\u4e0b\u964d\uff0c\u800c\u63d0\u4f9b\u793a\u4f8b\u548c\u7ed3\u6784\u5316\u6280\u672f\u5143\u7d20\u80fd\u663e\u8457\u63d0\u5347\u6210\u529f\u7387\u3002", "motivation": "\u8bc4\u4f30LLM\u5728\u81ea\u52a8\u5316\u8f6f\u4ef6\u6d4b\u8bd5\u4e2d\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u7279\u522b\u662f\u8d85\u8d8a\u8bb0\u5fc6\u6a21\u5f0f\u3001\u7406\u89e3\u81ea\u7136\u8bed\u8a00\u9519\u8bef\u62a5\u544a\u5e76\u8fdb\u884c\u63a8\u7406\u7684\u80fd\u529b\u3002", "method": "\u57fa\u4e8eLIBRO\u6846\u67b6\uff0c\u4f7f\u7528Bloom\u8ba4\u77e5\u5206\u7c7b\u5b66\u7684\u516d\u4e2a\u5c42\u6b21\uff08\u8bb0\u5fc6\u3001\u7406\u89e3\u3001\u5e94\u7528\u3001\u5206\u6790\u3001\u8bc4\u4f30\u3001\u521b\u9020\uff09\u6765\u8bc4\u4f30StarCoder\u548cGPT-4o\u5728Defects4J\u3001GHRB\u53ca\u5176\u53d8\u5f02\u6570\u636e\u96c6\u4e0a\u7684\u8868\u73b0\u3002", "result": "LLM\u80fd\u91cd\u73b0\u5148\u524d\u7ed3\u679c\uff08\u8bb0\u5fc6\u5c42\uff09\uff0c\u5bf9\u8bed\u8a00\u91cd\u8ff0\u548c\u7ffb\u8bd1\u5177\u6709\u90e8\u5206\u9c81\u68d2\u6027\uff08\u7406\u89e3\u5c42\uff09\uff0c\u4f46\u5728\u6807\u8bc6\u7b26\u53d8\u5f02\u4e0b\u6027\u80fd\u4e0b\u964d\u8d85\u8fc760%\uff08\u5e94\u7528\u5c42\uff09\u3002\u63d0\u4f9b\u5c11\u91cf\u793a\u4f8b\u53ef\u5c06\u6210\u529f\u7387\u63d0\u5347\u4e09\u500d\uff0c\u7ed3\u6784\u5316\u6280\u672f\u5143\u7d20\u6bd4\u53d9\u8ff0\u6027\u63cf\u8ff0\u5bf9\u6d4b\u8bd5\u751f\u6210\u66f4\u6709\u6548\u3002", "conclusion": "\u63ed\u793a\u4e86LLM\u751f\u6210\u6d4b\u8bd5\u7684\u8ba4\u77e5\u8fc7\u7a0b\uff0c\u4e3a\u6539\u8fdb\u6027\u80fd\u63d0\u4f9b\u4e86\u5177\u4f53\u65b9\u5411\uff0c\u5e76\u4e3a\u6b64\u4efb\u52a1\u5efa\u7acb\u4e86\u7a33\u5065\u73b0\u5b9e\u7684\u8bc4\u4f30\u8303\u5f0f\u3002"}}
{"id": "2510.05390", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.05390", "abs": "https://arxiv.org/abs/2510.05390", "authors": ["Felicity Anderson", "Julien Sindt", "Neil Chue Hong"], "title": "Who Do You Think You Are? Creating RSE Personas from GitHub Interactions", "comment": "36 pages. Invited extended paper of original poster at deRSE2025. To\n  be published in ECEASST", "summary": "We describe data-driven RSE personas: an approach combining software\nrepository mining and data-driven personas applied to research software (RS),\nan attempt to describe and identify common and rare patterns of Research\nSoftware Engineering (RSE) development. This allows individuals and RS project\nteams to understand their contributions, impact and repository dynamics - an\nimportant foundation for improving RSE. We evaluate the method on different\npatterns of collaborative interaction behaviours by contributors to mid-sized\npublic RS repositories (those with 10-300 committers) on GitHub. We demonstrate\nhow the RSE personas method successfully characterises a sample of 115,174\nrepository contributors across 1,284 RS repositories on GitHub, sampled from\n42,284 candidate software repository records queried from Zenodo. We identify,\nname and summarise seven distinct personas from low to high interactivity:\nEphemeral Contributor; Occasional Contributor; Project Organiser; Moderate\nContributor; Low-Process Closer; Low-Coding Closer; and Active Contributor.\nThis demonstrates that large datasets can be analysed despite difficulties of\ncomparing software projects with different project management factors, research\ndomains and contributor backgrounds.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408\u8f6f\u4ef6\u4ed3\u5e93\u6316\u6398\u548c\u6570\u636e\u9a71\u52a8\u89d2\u8272\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u8bc6\u522b\u7814\u7a76\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u7684\u5e38\u89c1\u548c\u7f55\u89c1\u5f00\u53d1\u6a21\u5f0f\uff0c\u901a\u8fc7\u5206\u6790GitHub\u4e0a115,174\u540d\u8d21\u732e\u8005\u57281,284\u4e2a\u7814\u7a76\u8f6f\u4ef6\u4ed3\u5e93\u4e2d\u7684\u884c\u4e3a\uff0c\u8bc6\u522b\u51fa7\u79cd\u4e0d\u540c\u7684\u89d2\u8272\u7c7b\u578b\u3002", "motivation": "\u7814\u7a76\u8f6f\u4ef6\u5de5\u7a0b\uff08RSE\uff09\u9886\u57df\u7f3a\u4e4f\u7cfb\u7edf\u5316\u7684\u8d21\u732e\u8005\u884c\u4e3a\u5206\u6790\u6846\u67b6\uff0c\u9700\u8981\u4e00\u79cd\u65b9\u6cd5\u6765\u7406\u89e3\u548c\u63cf\u8ff0RSE\u5f00\u53d1\u4e2d\u7684\u534f\u4f5c\u6a21\u5f0f\uff0c\u5e2e\u52a9\u4e2a\u4eba\u548c\u9879\u76ee\u56e2\u961f\u8bc4\u4f30\u5176\u8d21\u732e\u3001\u5f71\u54cd\u548c\u4ed3\u5e93\u52a8\u6001\u3002", "method": "\u7ed3\u5408\u8f6f\u4ef6\u4ed3\u5e93\u6316\u6398\u548c\u6570\u636e\u9a71\u52a8\u89d2\u8272\u65b9\u6cd5\uff0c\u5bf9GitHub\u4e0a\u4e2d\u7b49\u89c4\u6a21\uff0810-300\u540d\u63d0\u4ea4\u8005\uff09\u7684\u516c\u5171\u7814\u7a76\u8f6f\u4ef6\u4ed3\u5e93\u8fdb\u884c\u534f\u4f5c\u4ea4\u4e92\u884c\u4e3a\u6a21\u5f0f\u5206\u6790\uff0c\u4eceZenodo\u67e5\u8be2\u768442,284\u4e2a\u5019\u9009\u8f6f\u4ef6\u4ed3\u5e93\u8bb0\u5f55\u4e2d\u91c7\u68371,284\u4e2a\u4ed3\u5e93\u3002", "result": "\u6210\u529f\u8bc6\u522b\u5e76\u547d\u540d\u4e867\u79cd\u4ece\u4f4e\u5230\u9ad8\u4e92\u52a8\u6027\u7684\u4e0d\u540c\u89d2\u8272\uff1a\u4e34\u65f6\u8d21\u732e\u8005\u3001\u5076\u5c14\u8d21\u732e\u8005\u3001\u9879\u76ee\u7ec4\u7ec7\u8005\u3001\u9002\u5ea6\u8d21\u732e\u8005\u3001\u4f4e\u6d41\u7a0b\u7ec8\u7ed3\u8005\u3001\u4f4e\u7f16\u7801\u7ec8\u7ed3\u8005\u548c\u6d3b\u8dc3\u8d21\u732e\u8005\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u8bc1\u660e\u4e86\u5927\u6570\u636e\u96c6\u5206\u6790\u7684\u53ef\u80fd\u6027\uff0c\u5c3d\u7ba1\u5b58\u5728\u9879\u76ee\u7ba1\u7406\u56e0\u7d20\u3001\u7814\u7a76\u9886\u57df\u548c\u8d21\u732e\u8005\u80cc\u666f\u7684\u5dee\u5f02\uff0c\u4f46\u4ecd\u80fd\u6709\u6548\u8bc6\u522b\u7814\u7a76\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u7684\u534f\u4f5c\u6a21\u5f0f\u3002"}}
{"id": "2510.06019", "categories": ["cs.FL"], "pdf": "https://arxiv.org/pdf/2510.06019", "abs": "https://arxiv.org/abs/2510.06019", "authors": ["Marius Bozga", "Radu Iosif", "Florian Zuleger"], "title": "Iterating Non-Aggregative Structure Compositions", "comment": null, "summary": "An aggregative composition is a binary operation obeying the\n  principle that the whole is determined by the sum of its parts. The\n  development of graph algebras, on which the theory of formal graph\n  languages is built, relies on aggregative compositions that behave\n  like disjoint union, except for a set of well-marked interface\n  vertices from both sides, that are joined. The same style of\n  composition has been considered in the context of relational\n  structures, that generalize graphs and use constant symbols to label\n  the interface.\n  In this paper, we study a non-aggregative composition operation,\n  called \\emph{fusion}, that joins non-deterministically chosen\n  elements from disjoint structures. The sets of structures obtained\n  by iteratively applying fusion do not always have bounded\n  tree-width, even when starting from a tree-width bounded set.\n  First, we prove that the problem of the existence of a bound on the\n  tree-width of the closure of a given set under fusion is decidable,\n  when the input set is described inductively by a finite\n  \\emph{hyperedge-replacement} (HR) grammar, written using the\n  operations of aggregative composition, forgetting and renaming of\n  constants. Such sets are usually called \\emph{context-free}.\n  Second, assuming that the closure under fusion of a context-free set\n  has bounded tree-width, we show that it is the language of an\n  effectively constructible HR grammar. A possible application of the\n  latter result is the possiblity of checking whether all structures\n  from a non-aggregatively closed set having bounded tree-width\n  satisfy a given monadic second order logic formula.", "AI": {"tldr": "\u672c\u6587\u7814\u7a76\u4e86\u4e00\u79cd\u79f0\u4e3a\u878d\u5408\u7684\u975e\u805a\u5408\u6027\u7ec4\u5408\u64cd\u4f5c\uff0c\u8bc1\u660e\u4e86\u5728\u7ed9\u5b9a\u96c6\u5408\u901a\u8fc7\u878d\u5408\u95ed\u5305\u65f6\u6811\u5bbd\u6709\u754c\u6027\u7684\u53ef\u5224\u5b9a\u6027\uff0c\u5e76\u5c55\u793a\u4e86\u5f53\u6811\u5bbd\u6709\u754c\u65f6\u5982\u4f55\u6709\u6548\u6784\u9020HR\u6587\u6cd5\u3002", "motivation": "\u4f20\u7edf\u56fe\u4ee3\u6570\u57fa\u4e8e\u805a\u5408\u6027\u7ec4\u5408\u64cd\u4f5c\uff0c\u800c\u672c\u6587\u63a2\u7d22\u975e\u805a\u5408\u6027\u878d\u5408\u64cd\u4f5c\u7684\u7406\u8bba\u6027\u8d28\uff0c\u7279\u522b\u662f\u5176\u5bf9\u6811\u5bbd\u7684\u5f71\u54cd\u4ee5\u53ca\u76f8\u5173\u7684\u903b\u8f91\u53ef\u5224\u5b9a\u6027\u95ee\u9898\u3002", "method": "\u4f7f\u7528\u8d85\u8fb9\u66ff\u6362(HR)\u6587\u6cd5\u63cf\u8ff0\u8f93\u5165\u96c6\u5408\uff0c\u5206\u6790\u878d\u5408\u64cd\u4f5c\u5bf9\u6811\u5bbd\u7684\u5f71\u54cd\uff0c\u5e76\u5f00\u53d1\u7b97\u6cd5\u6765\u5224\u5b9a\u6811\u5bbd\u6709\u754c\u6027\u53ca\u6784\u9020\u76f8\u5e94\u7684HR\u6587\u6cd5\u3002", "result": "\u8bc1\u660e\u4e86\u5728HR\u6587\u6cd5\u63cf\u8ff0\u7684\u4e0a\u4e0b\u6587\u65e0\u5173\u96c6\u5408\u4e0b\uff0c\u878d\u5408\u95ed\u5305\u7684\u6811\u5bbd\u6709\u754c\u6027\u95ee\u9898\u662f\u53ef\u5224\u5b9a\u7684\uff0c\u4e14\u5f53\u6811\u5bbd\u6709\u754c\u65f6\u53ef\u6709\u6548\u6784\u9020HR\u6587\u6cd5\u3002", "conclusion": "\u975e\u805a\u5408\u6027\u878d\u5408\u64cd\u4f5c\u867d\u7136\u53ef\u80fd\u5bfc\u81f4\u6811\u5bbd\u65e0\u754c\uff0c\u4f46\u5728\u6811\u5bbd\u6709\u754c\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u6709\u6548\u5730\u5904\u7406\u76f8\u5173\u7684\u903b\u8f91\u9a8c\u8bc1\u95ee\u9898\uff0c\u6269\u5c55\u4e86\u5f62\u5f0f\u56fe\u8bed\u8a00\u7406\u8bba\u7684\u5e94\u7528\u8303\u56f4\u3002"}}
{"id": "2510.05876", "categories": ["cs.LO", "cs.CC"], "pdf": "https://arxiv.org/pdf/2510.05876", "abs": "https://arxiv.org/abs/2510.05876", "authors": ["Abhimanyu Choudhury", "Meena Mahajan"], "title": "On the Interplay of Cube Learning and Dependency Schemes in QCDCL Proof Systems", "comment": "30 pages, 1 figure", "summary": "Quantified Conflict Driven Clause Leaning (QCDCL) is one of the main\napproaches to solving Quantified Boolean Formulas (QBF). Cube-learning is\nemployed in this approach to ensure that true formulas can be verified.\nDependency Schemes help to detect spurious dependencies that are implied by the\nvariable ordering in the quantifier prefix of QBFs but are not essential for\nconstructing (counter)models. This detection can provably shorten refutations\nin specific proof systems, and is expected to speed up runs of QBF solvers.\n  The simplest underlying proof system [BeyersdorffB\\\"ohm-LMCS2023], formalises\nthe reasoning in the QCDCL approach on false formulas, when neither cube\nlearning nor dependency schemes is used. The work of\n[B\\\"ohmPeitlBeyersdorff-AI2024] further incorporates cube-learning. The work of\n[ChoudhuryMahajan-JAR2024] incorporates a limited use of dependency schemes,\nbut without cube-learning.\n  In this work, proof systems underlying the reasoning of QCDCL solvers which\nuse cube learning, and which use dependency schemes at all stages, are\nformalised. Sufficient conditions for soundness and completeness are presented,\nand it is shown that using the standard and reflexive resolution path\ndependency schemes ($D^{std}$ and $D^{rrs}$) to relax the decision order\nprovably shortens refutations.\n  When the decisions are restricted to follow quantification order, but\ndependency schemes are used in propagation and learning, in conjunction with\ncube-learning, the resulting proof systems using the dependency schemes\n$D^{std}$ and $D^{rrs}$ are investigated in detail and their relative strengths\nare analysed.", "AI": {"tldr": "\u672c\u6587\u5f62\u5f0f\u5316\u4e86\u4f7f\u7528\u7acb\u65b9\u4f53\u5b66\u4e60\u548c\u4f9d\u8d56\u65b9\u6848\u7684QCDCL\u6c42\u89e3\u5668\u7684\u8bc1\u660e\u7cfb\u7edf\uff0c\u63d0\u51fa\u4e86\u5b8c\u5907\u6027\u548c\u53ef\u9760\u6027\u7684\u5145\u5206\u6761\u4ef6\uff0c\u5e76\u8bc1\u660e\u4f7f\u7528\u6807\u51c6\u4f9d\u8d56\u65b9\u6848\u548c\u81ea\u53cd\u4f9d\u8d56\u65b9\u6848\u53ef\u4ee5\u7f29\u77ed\u53cd\u9a73\u8bc1\u660e\u3002", "motivation": "\u73b0\u6709\u7684QCDCL\u8bc1\u660e\u7cfb\u7edf\u8981\u4e48\u6ca1\u6709\u4f7f\u7528\u7acb\u65b9\u4f53\u5b66\u4e60\uff0c\u8981\u4e48\u53ea\u6709\u9650\u4f7f\u7528\u4f9d\u8d56\u65b9\u6848\u3002\u672c\u6587\u65e8\u5728\u5f62\u5f0f\u5316\u540c\u65f6\u4f7f\u7528\u7acb\u65b9\u4f53\u5b66\u4e60\u548c\u5b8c\u5168\u4f9d\u8d56\u65b9\u6848\u7684QCDCL\u63a8\u7406\u7cfb\u7edf\u3002", "method": "\u5f62\u5f0f\u5316\u4e86\u4f7f\u7528\u7acb\u65b9\u4f53\u5b66\u4e60\u548c\u4f9d\u8d56\u65b9\u6848\u7684QCDCL\u8bc1\u660e\u7cfb\u7edf\uff0c\u5206\u6790\u4e86\u4f7f\u7528\u6807\u51c6\u4f9d\u8d56\u65b9\u6848(D^std)\u548c\u81ea\u53cd\u4f9d\u8d56\u65b9\u6848(D^rrs)\u65f6\u7684\u7cfb\u7edf\u7279\u6027\u3002", "result": "\u8bc1\u660e\u4e86\u4f7f\u7528\u4f9d\u8d56\u65b9\u6848\u53ef\u4ee5\u7f29\u77ed\u53cd\u9a73\u8bc1\u660e\uff0c\u5e76\u8be6\u7ec6\u5206\u6790\u4e86\u5728\u91cf\u5316\u987a\u5e8f\u7ea6\u675f\u4e0b\u4f7f\u7528\u4f9d\u8d56\u65b9\u6848\u4e0e\u7acb\u65b9\u4f53\u5b66\u4e60\u7684\u8bc1\u660e\u7cfb\u7edf\u7684\u76f8\u5bf9\u5f3a\u5ea6\u3002", "conclusion": "\u672c\u6587\u6210\u529f\u5f62\u5f0f\u5316\u4e86\u540c\u65f6\u4f7f\u7528\u7acb\u65b9\u4f53\u5b66\u4e60\u548c\u4f9d\u8d56\u65b9\u6848\u7684QCDCL\u8bc1\u660e\u7cfb\u7edf\uff0c\u4e3aQBF\u6c42\u89e3\u5668\u7684\u7406\u8bba\u5206\u6790\u63d0\u4f9b\u4e86\u66f4\u5b8c\u6574\u7684\u6846\u67b6\u3002"}}
{"id": "2510.05441", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2510.05441", "abs": "https://arxiv.org/abs/2510.05441", "authors": ["Yiannis Charalambous", "Claudionor N. Coelho Jr", "Luis Lamb", "Lucas C. Cordeiro"], "title": "UnitTenX: Generating Tests for Legacy Packages with AI Agents Powered by Formal Verification", "comment": null, "summary": "This paper introduces UnitTenX, a state-of-the-art open-source AI multi-agent\nsystem designed to generate unit tests for legacy code, enhancing test coverage\nand critical value testing. UnitTenX leverages a combination of AI agents,\nformal methods, and Large Language Models (LLMs) to automate test generation,\naddressing the challenges posed by complex and legacy codebases. Despite the\nlimitations of LLMs in bug detection, UnitTenX offers a robust framework for\nimproving software reliability and maintainability. Our results demonstrate the\neffectiveness of this approach in generating high-quality tests and identifying\npotential issues. Additionally, our approach enhances the readability and\ndocumentation of legacy code.", "AI": {"tldr": "UnitTenX\u662f\u4e00\u4e2a\u5f00\u6e90\u7684AI\u591a\u667a\u80fd\u4f53\u7cfb\u7edf\uff0c\u4e13\u95e8\u4e3a\u9057\u7559\u4ee3\u7801\u751f\u6210\u5355\u5143\u6d4b\u8bd5\uff0c\u63d0\u9ad8\u6d4b\u8bd5\u8986\u76d6\u7387\u548c\u5173\u952e\u503c\u6d4b\u8bd5\u80fd\u529b\u3002", "motivation": "\u89e3\u51b3\u590d\u6742\u548c\u9057\u7559\u4ee3\u7801\u5e93\u4e2d\u5355\u5143\u6d4b\u8bd5\u751f\u6210\u7684\u6311\u6218\uff0c\u63d0\u9ad8\u8f6f\u4ef6\u53ef\u9760\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002", "method": "\u7ed3\u5408AI\u667a\u80fd\u4f53\u3001\u5f62\u5f0f\u5316\u65b9\u6cd5\u548c\u5927\u578b\u8bed\u8a00\u6a21\u578b(LLMs)\u6765\u81ea\u52a8\u5316\u6d4b\u8bd5\u751f\u6210\u3002", "result": "\u80fd\u591f\u751f\u6210\u9ad8\u8d28\u91cf\u6d4b\u8bd5\u5e76\u8bc6\u522b\u6f5c\u5728\u95ee\u9898\uff0c\u540c\u65f6\u63d0\u9ad8\u9057\u7559\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u6587\u6863\u8d28\u91cf\u3002", "conclusion": "\u5c3d\u7ba1LLMs\u5728\u9519\u8bef\u68c0\u6d4b\u65b9\u9762\u5b58\u5728\u5c40\u9650\u6027\uff0c\u4f46UnitTenX\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u6846\u67b6\u6765\u6539\u5584\u8f6f\u4ef6\u6d4b\u8bd5\u8fc7\u7a0b\u3002"}}
{"id": "2510.05894", "categories": ["cs.LO", "68Q19", "F.1.1"], "pdf": "https://arxiv.org/pdf/2510.05894", "abs": "https://arxiv.org/abs/2510.05894", "authors": ["Jeremy C. Kirn", "Lucas Meijer", "Tillmann Miltzow", "Hans L. Bodlaender"], "title": "On Equivalent Characterizations of NP in Abstract Models of Computation", "comment": "79 pages, 4 figures", "summary": "We investigate machine models similar to Turing machines that are augmented\nby the operations of a first-order structure $\\mathcal{R}$, and we show that\nunder weak conditions on $\\mathcal{R}$, the complexity class\n$\\text{NP}(\\mathcal{R})$ may be characterized in three equivalent ways: (1) by\npolynomial-time verification algorithms implemented on $\\mathcal{R}$-machines,\n(2) by the $\\text{NP}(\\mathcal{R})$-complete problem $\\text{SAT}(\\mathcal{R})$,\nand (3) by existential second-order metafinite logic over $\\mathcal{R}$ via\ndescriptive complexity. By characterizing $\\text{NP}(\\mathcal{R})$ in these\nthree ways, we extend previous work and embed it in one coherent framework.\n  Some conditions on $\\mathcal{R}$ must be assumed in order to achieve the\nabove trinity because there are infinite-vocabulary structures for which\n$\\text{NP}(\\mathcal{R})$ does not have a complete problem. Surprisingly, even\nin these cases, we show that $\\text{NP}(\\mathcal{R})$ does have a\ncharacterization in terms of existential second-order metafinite logic,\nsuggesting that descriptive complexity theory is well suited to working with\ninfinite-vocabulary structures, such as real vector spaces.\n  In addition, we derive similar results for $\\exists\\mathcal{R}$, the\nconstant-free Boolean part of $\\text{NP}(\\mathcal{R})$, by showing that\n$\\exists\\mathcal{R}$ may be characterized in three analogous ways. We then\nextend our results to the entire polynomial hierarchy over $\\mathcal{R}$ and to\nits constant-free Boolean counterpart, the Boolean hierarchy over\n$\\mathcal{R}$. Finally, we give a characterization of the polynomial and\nBoolean hierarchies over $\\mathcal{R}$ in terms of oracle\n$\\mathcal{R}$-machines.", "AI": {"tldr": "\u8be5\u8bba\u6587\u7814\u7a76\u4e86\u57fa\u4e8e\u4e00\u9636\u7ed3\u6784R\u7684\u56fe\u7075\u673a\u6a21\u578b\uff0c\u8bc1\u660e\u4e86\u5728\u5f31\u6761\u4ef6\u4e0bNP(R)\u7684\u4e09\u4e2a\u7b49\u4ef7\u7279\u5f81\uff1a\u591a\u9879\u5f0f\u65f6\u95f4\u9a8c\u8bc1\u7b97\u6cd5\u3001NP(R)-\u5b8c\u5168\u95ee\u9898SAT(R)\u548c\u5b58\u5728\u4e8c\u9636\u5143\u6709\u9650\u903b\u8f91\u3002\u8bba\u6587\u8fd8\u6269\u5c55\u4e86\u8fd9\u4e9b\u7ed3\u679c\u5230\u591a\u9879\u5f0f\u5c42\u6b21\u548c\u5e03\u5c14\u5c42\u6b21\u3002", "motivation": "\u6269\u5c55\u4f20\u7edf\u590d\u6742\u6027\u7406\u8bba\u5230\u57fa\u4e8e\u4efb\u610f\u4e00\u9636\u7ed3\u6784\u7684\u8ba1\u7b97\u6a21\u578b\uff0c\u5efa\u7acbNP(R)\u7684\u5b8c\u6574\u7406\u8bba\u6846\u67b6\uff0c\u89e3\u51b3\u65e0\u9650\u8bcd\u6c47\u7ed3\u6784\u4e0b\u7684\u590d\u6742\u6027\u5206\u7c7b\u95ee\u9898\u3002", "method": "\u4f7f\u7528R-\u673a\u5668\u4f5c\u4e3a\u8ba1\u7b97\u6a21\u578b\uff0c\u7ed3\u5408\u591a\u9879\u5f0f\u65f6\u95f4\u9a8c\u8bc1\u3001\u5b8c\u5168\u95ee\u9898\u548c\u63cf\u8ff0\u6027\u903b\u8f91\u4e09\u79cd\u65b9\u6cd5\uff0c\u901a\u8fc7\u5143\u6709\u9650\u903b\u8f91\u5904\u7406\u65e0\u9650\u8bcd\u6c47\u7ed3\u6784\u3002", "result": "\u8bc1\u660e\u4e86\u5728\u5f31\u6761\u4ef6\u4e0bNP(R)\u7684\u4e09\u4e2a\u7b49\u4ef7\u7279\u5f81\uff0c\u5373\u4f7f\u5728\u65e0\u9650\u8bcd\u6c47\u7ed3\u6784\u4e0b\u4e5f\u80fd\u901a\u8fc7\u63cf\u8ff0\u6027\u903b\u8f91\u8fdb\u884c\u523b\u753b\uff0c\u5e76\u6269\u5c55\u4e86\u7ed3\u679c\u5230\u591a\u9879\u5f0f\u5c42\u6b21\u548c\u5e03\u5c14\u5c42\u6b21\u3002", "conclusion": "\u63cf\u8ff0\u6027\u590d\u6742\u6027\u7406\u8bba\u80fd\u5f88\u597d\u5730\u5904\u7406\u65e0\u9650\u8bcd\u6c47\u7ed3\u6784\uff0c\u4e3a\u57fa\u4e8e\u4efb\u610f\u4e00\u9636\u7ed3\u6784\u7684\u590d\u6742\u6027\u7406\u8bba\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u6846\u67b6\uff0c\u6269\u5c55\u4e86\u4f20\u7edf\u590d\u6742\u6027\u7406\u8bba\u7684\u5e94\u7528\u8303\u56f4\u3002"}}
{"id": "2510.05450", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.05450", "abs": "https://arxiv.org/abs/2510.05450", "authors": ["Saul Goldman", "Hong Yi Lin", "Jirat Pasuksmit", "Patanamon Thongtanunam", "Kla Tantithamthavorn", "Zhe Wang", "Ray Zhang", "Ali Behnaz", "Fan Jiang", "Michael Siers", "Ryan Jiang", "Mike Buller", "Minwoo Jeong", "Ming Wu"], "title": "What Types of Code Review Comments Do Developers Most Frequently Resolve?", "comment": "The paper has been accepted the 40th IEEE/ACM International\n  Conference on Automated Software Engineering, ASE 2025", "summary": "Large language model (LLM)-powered code review automation tools have been\nintroduced to generate code review comments. However, not all generated\ncomments will drive code changes. Understanding what types of generated review\ncomments are likely to trigger code changes is crucial for identifying those\nthat are actionable. In this paper, we set out to investigate (1) the types of\nreview comments written by humans and LLMs, and (2) the types of generated\ncomments that are most frequently resolved by developers. To do so, we\ndeveloped an LLM-as-a-Judge to automatically classify review comments based on\nour own taxonomy of five categories. Our empirical study confirms that (1) the\nLLM reviewer and human reviewers exhibit distinct strengths and weaknesses\ndepending on the project context, and (2) readability, bugs, and\nmaintainability-related comments had higher resolution rates than those focused\non code design. These results suggest that a substantial proportion of\nLLM-generated comments are actionable and can be resolved by developers. Our\nwork highlights the complementarity between LLM and human reviewers and offers\nsuggestions to improve the practical effectiveness of LLM-powered code review\ntools.", "AI": {"tldr": "\u7814\u7a76LLM\u751f\u6210\u7684\u4ee3\u7801\u5ba1\u67e5\u8bc4\u8bba\u4e2d\u54ea\u4e9b\u7c7b\u578b\u6700\u53ef\u80fd\u89e6\u53d1\u4ee3\u7801\u53d8\u66f4\uff0c\u53d1\u73b0\u53ef\u8bfb\u6027\u3001bug\u548c\u7ef4\u62a4\u6027\u76f8\u5173\u7684\u8bc4\u8bba\u6bd4\u4ee3\u7801\u8bbe\u8ba1\u76f8\u5173\u7684\u8bc4\u8bba\u6709\u66f4\u9ad8\u7684\u89e3\u51b3\u7387\u3002", "motivation": "\u7406\u89e3LLM\u751f\u6210\u7684\u4ee3\u7801\u5ba1\u67e5\u8bc4\u8bba\u4e2d\u54ea\u4e9b\u7c7b\u578b\u6700\u53ef\u80fd\u88ab\u5f00\u53d1\u8005\u91c7\u7eb3\u548c\u89e3\u51b3\uff0c\u4ee5\u8bc6\u522b\u53ef\u64cd\u4f5c\u7684\u8bc4\u8bba\u3002", "method": "\u5f00\u53d1LLM-as-a-Judge\u81ea\u52a8\u5206\u7c7b\u8bc4\u8bba\uff0c\u57fa\u4e8e\u4e94\u7c7b\u5206\u7c7b\u6cd5\u8fdb\u884c\u5b9e\u8bc1\u7814\u7a76\u3002", "result": "LLM\u548c\u4eba\u7c7b\u5ba1\u67e5\u5458\u5728\u4e0d\u540c\u9879\u76ee\u80cc\u666f\u4e0b\u5404\u6709\u4f18\u52bf\uff1b\u53ef\u8bfb\u6027\u3001bug\u548c\u7ef4\u62a4\u6027\u76f8\u5173\u7684\u8bc4\u8bba\u89e3\u51b3\u7387\u9ad8\u4e8e\u4ee3\u7801\u8bbe\u8ba1\u76f8\u5173\u7684\u8bc4\u8bba\u3002", "conclusion": "\u5927\u90e8\u5206LLM\u751f\u6210\u7684\u8bc4\u8bba\u662f\u53ef\u64cd\u4f5c\u7684\uff0cLLM\u4e0e\u4eba\u7c7b\u5ba1\u67e5\u5458\u5177\u6709\u4e92\u8865\u6027\uff0c\u4e3a\u6539\u8fdbLLM\u9a71\u52a8\u7684\u4ee3\u7801\u5ba1\u67e5\u5de5\u5177\u63d0\u4f9b\u4e86\u5efa\u8bae\u3002"}}
{"id": "2510.06045", "categories": ["cs.LO", "cs.MA"], "pdf": "https://arxiv.org/pdf/2510.06045", "abs": "https://arxiv.org/abs/2510.06045", "authors": ["David Cortes", "Jean Leneutre", "Vadim Malvone", "James Ortiz"], "title": "A Timed Obstruction Logic for Dynamic Game Models", "comment": null, "summary": "Real-time cybersecurity and privacy applications require reliable\nverification methods and system design tools to ensure their correctness. Many\nof these reactive real-time applications embedded in various infrastructures,\nsuch as airports, hospitals, and oil pipelines, are potentially vulnerable to\nmalicious cyber-attacks. Recently, a growing literature has recognized Timed\nGame Theory as a sound theoretical foundation for modeling strategic\ninteractions between attackers and defenders. This paper proposes Timed\nObstruction Logic (TOL), an extension of Obstruction Logic (OL), a formalism\nfor verifying specific timed games with real-time objectives unfolding in\ndynamic models. These timed games involve players whose discrete and continuous\nactions can impact the underlying timed game model. We show that TOL can be\nused to describe important timed properties of real-time cybersecurity games.\nFinally, in addition to introducing our new logic and adapting it to specify\nproperties in the context of cybersecurity, we provide a verification procedure\nfor TOL and show that its complexity is PSPACE-complete, meaning that it is not\nhigher than that of classical timed temporal logics like TCTL. Thus, we\nincrease the expressiveness of properties without incurring any cost in terms\nof complexity.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86Timed Obstruction Logic (TOL)\uff0c\u8fd9\u662fObstruction Logic (OL)\u7684\u6269\u5c55\uff0c\u7528\u4e8e\u9a8c\u8bc1\u5177\u6709\u5b9e\u65f6\u76ee\u6807\u7684\u5b9a\u65f6\u535a\u5f08\u3002TOL\u80fd\u591f\u63cf\u8ff0\u7f51\u7edc\u5b89\u5168\u535a\u5f08\u7684\u91cd\u8981\u5b9a\u65f6\u5c5e\u6027\uff0c\u5176\u9a8c\u8bc1\u590d\u6742\u5ea6\u4e3aPSPACE-complete\uff0c\u4e0e\u7ecf\u5178\u5b9a\u65f6\u65f6\u5e8f\u903b\u8f91\u76f8\u540c\u3002", "motivation": "\u5b9e\u65f6\u7f51\u7edc\u5b89\u5168\u5e94\u7528\u9700\u8981\u53ef\u9760\u7684\u9a8c\u8bc1\u65b9\u6cd5\u548c\u7cfb\u7edf\u8bbe\u8ba1\u5de5\u5177\u6765\u786e\u4fdd\u6b63\u786e\u6027\u3002\u8bb8\u591a\u5d4c\u5165\u5728\u57fa\u7840\u8bbe\u65bd\u4e2d\u7684\u53cd\u5e94\u5f0f\u5b9e\u65f6\u5e94\u7528\u5bb9\u6613\u53d7\u5230\u6076\u610f\u7f51\u7edc\u653b\u51fb\uff0c\u9700\u8981\u5efa\u6a21\u653b\u51fb\u8005\u548c\u9632\u5fa1\u8005\u4e4b\u95f4\u7684\u6218\u7565\u4e92\u52a8\u3002", "method": "\u6269\u5c55Obstruction Logic (OL)\u4e3aTimed Obstruction Logic (TOL)\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8e\u9a8c\u8bc1\u52a8\u6001\u6a21\u578b\u4e2d\u5177\u6709\u5b9e\u65f6\u76ee\u6807\u7684\u7279\u5b9a\u5b9a\u65f6\u535a\u5f08\u7684\u5f62\u5f0f\u5316\u65b9\u6cd5\u3002\u8fd9\u4e9b\u535a\u5f08\u6d89\u53ca\u73a9\u5bb6\uff0c\u5176\u79bb\u6563\u548c\u8fde\u7eed\u52a8\u4f5c\u53ef\u4ee5\u5f71\u54cd\u5e95\u5c42\u5b9a\u65f6\u535a\u5f08\u6a21\u578b\u3002", "result": "TOL\u80fd\u591f\u63cf\u8ff0\u5b9e\u65f6\u7f51\u7edc\u5b89\u5168\u535a\u5f08\u7684\u91cd\u8981\u5b9a\u65f6\u5c5e\u6027\u3002\u63d0\u4f9b\u4e86TOL\u7684\u9a8c\u8bc1\u7a0b\u5e8f\uff0c\u5e76\u8bc1\u660e\u5176\u590d\u6742\u5ea6\u4e3aPSPACE-complete\uff0c\u4e0e\u7ecf\u5178\u5b9a\u65f6\u65f6\u5e8f\u903b\u8f91\u5982TCTL\u76f8\u540c\u3002", "conclusion": "\u901a\u8fc7\u5f15\u5165TOL\u5e76\u5c06\u5176\u9002\u5e94\u4e8e\u7f51\u7edc\u5b89\u5168\u73af\u5883\u4e2d\u7684\u5c5e\u6027\u89c4\u8303\uff0c\u5728\u4e0d\u589e\u52a0\u590d\u6742\u5ea6\u7684\u60c5\u51b5\u4e0b\u63d0\u9ad8\u4e86\u5c5e\u6027\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u4e3a\u5b9e\u65f6\u7f51\u7edc\u5b89\u5168\u5e94\u7528\u63d0\u4f9b\u4e86\u66f4\u5f3a\u5927\u7684\u9a8c\u8bc1\u5de5\u5177\u3002"}}
{"id": "2510.05604", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.05604", "abs": "https://arxiv.org/abs/2510.05604", "authors": ["Rintaro Kanaji", "Brittany Reid", "Yutaro Kashiwa", "Raula Gaikovina Kula", "Hajimu Iida"], "title": "An Empirical Study of Security-Policy Related Issues in Open Source Projects", "comment": "Accepted in PROFES 2025", "summary": "GitHub recommends that projects adopt a SECURITY.md file that outlines\nvulnerability reporting procedures. However, the effectiveness and operational\nchallenges of such files are not yet fully understood. This study aims to\nclarify the challenges that SECURITY.md files face in the vulnerability\nreporting process within open-source communities. Specifically, we classified\nand analyzed the content of 711 randomly sampled issues related to SECURITY.md.\nWe also conducted a quantitative comparative analysis of the close time and\nnumber of responses for issues concerning six community health files, including\nSECURITY.md. Our analysis revealed that 79.5% of SECURITY.md-related issues\nwere requests to add the file, and reports that included links were closed,\nwith a median time that was 2 days shorter. These findings offer practical\ninsights for improving security reporting policies and community management,\nultimately contributing to a more secure open-source ecosystem.", "AI": {"tldr": "\u8be5\u7814\u7a76\u5206\u6790\u4e86GitHub\u9879\u76ee\u4e2dSECURITY.md\u6587\u4ef6\u5728\u6f0f\u6d1e\u62a5\u544a\u8fc7\u7a0b\u4e2d\u7684\u6709\u6548\u6027\uff0c\u53d1\u73b079.5%\u7684\u76f8\u5173\u95ee\u9898\u662f\u6dfb\u52a0\u6587\u4ef6\u7684\u8bf7\u6c42\uff0c\u5305\u542b\u94fe\u63a5\u7684\u62a5\u544a\u5173\u95ed\u65f6\u95f4\u4e2d\u4f4d\u6570\u7f29\u77ed2\u5929\u3002", "motivation": "GitHub\u63a8\u8350\u9879\u76ee\u91c7\u7528SECURITY.md\u6587\u4ef6\u6765\u89c4\u8303\u6f0f\u6d1e\u62a5\u544a\u6d41\u7a0b\uff0c\u4f46\u8fd9\u7c7b\u6587\u4ef6\u7684\u6709\u6548\u6027\u548c\u64cd\u4f5c\u6311\u6218\u5c1a\u672a\u5b8c\u5168\u4e86\u89e3\uff0c\u9700\u8981\u7814\u7a76\u5176\u5728\u5f00\u6e90\u793e\u533a\u6f0f\u6d1e\u62a5\u544a\u8fc7\u7a0b\u4e2d\u7684\u5b9e\u9645\u6311\u6218\u3002", "method": "\u5bf9711\u4e2a\u968f\u673a\u62bd\u6837\u7684SECURITY.md\u76f8\u5173\u95ee\u9898\u8fdb\u884c\u5206\u7c7b\u5206\u6790\uff0c\u5e76\u5bf9\u5305\u62ecSECURITY.md\u5728\u5185\u76846\u4e2a\u793e\u533a\u5065\u5eb7\u6587\u4ef6\u76f8\u5173\u95ee\u9898\u7684\u5173\u95ed\u65f6\u95f4\u548c\u56de\u590d\u6570\u91cf\u8fdb\u884c\u5b9a\u91cf\u6bd4\u8f83\u5206\u6790\u3002", "result": "79.5%\u7684SECURITY.md\u76f8\u5173\u95ee\u9898\u90fd\u662f\u8bf7\u6c42\u6dfb\u52a0\u8be5\u6587\u4ef6\uff0c\u5305\u542b\u94fe\u63a5\u7684\u62a5\u544a\u5173\u95ed\u65f6\u95f4\u4e2d\u4f4d\u6570\u7f29\u77ed2\u5929\u3002", "conclusion": "\u7814\u7a76\u7ed3\u679c\u4e3a\u6539\u8fdb\u5b89\u5168\u62a5\u544a\u653f\u7b56\u548c\u793e\u533a\u7ba1\u7406\u63d0\u4f9b\u4e86\u5b9e\u7528\u89c1\u89e3\uff0c\u6709\u52a9\u4e8e\u6784\u5efa\u66f4\u5b89\u5168\u7684\u5f00\u6e90\u751f\u6001\u7cfb\u7edf\u3002"}}
{"id": "2510.05705", "categories": ["cs.SE", "cs.DL", "q-bio.OT"], "pdf": "https://arxiv.org/pdf/2510.05705", "abs": "https://arxiv.org/abs/2510.05705", "authors": ["Eva Mart\u00edn del Pico", "Josep Llu\u00eds Gelp\u00ed", "Salvador Capella-Guti\u00e9rrez"], "title": "The Software Observatory: aggregating and analysing software metadata for trend computation and FAIR assessment", "comment": null, "summary": "In the ever-changing realm of research software development, it is crucial\nfor the scientific community to grasp current trends to identify gaps that can\npotentially hinder scientific progress. The adherence to the FAIR (Findable,\nAccessible, Interoperable, Reusable) principles can serve as a proxy to\nunderstand those trends and provide a mechanism to propose specific actions.\n  The Software Observatory at OpenEBench\n(https://openebench.bsc.es/observatory) is a novel web portal that consolidates\nsoftware metadata from various sources, offering comprehensive insights into\ncritical research software aspects. Our platform enables users to analyse\ntrends, identify patterns and advancements within the Life Sciences research\nsoftware ecosystem, and understand its evolution over time. It also evaluates\nresearch software according to FAIR principles for research software, providing\nscores for different indicators.\n  Users have the ability to visualise this metadata at different levels of\ngranularity, ranging from the entire software landscape to specific communities\nto individual software entries through the FAIRsoft Evaluator. Indeed, the\nFAIRsoft Evaluator component streamlines the assessment process, helping\ndevelopers efficiently evaluate and obtain guidance to improve their software's\nFAIRness.\n  The Software Observatory represents a valuable resource for researchers and\nsoftware developers, as well as stakeholders, promoting better software\ndevelopment practices and adherence to FAIR principles for research software.", "AI": {"tldr": "Software Observatory\u662f\u4e00\u4e2a\u6574\u5408\u8f6f\u4ef6\u5143\u6570\u636e\u7684\u7f51\u7edc\u5e73\u53f0\uff0c\u7528\u4e8e\u5206\u6790\u751f\u547d\u79d1\u5b66\u7814\u7a76\u8f6f\u4ef6\u751f\u6001\u7cfb\u7edf\u7684\u8d8b\u52bf\u548cFAIR\u539f\u5219\u9075\u5b88\u60c5\u51b5\u3002", "motivation": "\u5728\u5feb\u901f\u53d8\u5316\u7684\u7814\u7a76\u8f6f\u4ef6\u5f00\u53d1\u9886\u57df\uff0c\u79d1\u5b66\u754c\u9700\u8981\u4e86\u89e3\u5f53\u524d\u8d8b\u52bf\u4ee5\u8bc6\u522b\u53ef\u80fd\u963b\u788d\u79d1\u5b66\u8fdb\u5c55\u7684\u5dee\u8ddd\uff0cFAIR\u539f\u5219\u53ef\u4ee5\u4f5c\u4e3a\u7406\u89e3\u8fd9\u4e9b\u8d8b\u52bf\u7684\u4ee3\u7406\u6307\u6807\u3002", "method": "\u901a\u8fc7OpenEBench\u7684Software Observatory\u95e8\u6237\u7f51\u7ad9\u6574\u5408\u6765\u81ea\u591a\u4e2a\u6765\u6e90\u7684\u8f6f\u4ef6\u5143\u6570\u636e\uff0c\u63d0\u4f9b\u4e0d\u540c\u7c92\u5ea6\u7684\u53ef\u89c6\u5316\u5206\u6790\uff0c\u5e76\u4f7f\u7528FAIRsoft\u8bc4\u4f30\u5668\u5bf9\u7814\u7a76\u8f6f\u4ef6\u8fdb\u884cFAIR\u539f\u5219\u8bc4\u4f30\u3002", "result": "\u8be5\u5e73\u53f0\u80fd\u591f\u5206\u6790\u8d8b\u52bf\u3001\u8bc6\u522b\u6a21\u5f0f\u3001\u8bc4\u4f30\u8f6f\u4ef6FAIR\u7a0b\u5ea6\uff0c\u5e76\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u6539\u8fdb\u6307\u5bfc\u3002", "conclusion": "Software Observatory\u662f\u7814\u7a76\u4eba\u5458\u3001\u8f6f\u4ef6\u5f00\u53d1\u8005\u548c\u5229\u76ca\u76f8\u5173\u8005\u7684\u5b9d\u8d35\u8d44\u6e90\uff0c\u6709\u52a9\u4e8e\u4fc3\u8fdb\u66f4\u597d\u7684\u8f6f\u4ef6\u5f00\u53d1\u5b9e\u8df5\u548cFAIR\u539f\u5219\u7684\u9075\u5b88\u3002"}}
{"id": "2510.05768", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.05768", "abs": "https://arxiv.org/abs/2510.05768", "authors": ["Robin Kimmel", "Judith Michael", "Andreas Wortmann", "Jingxi Zhang"], "title": "Digital Twins for Software Engineering Processes", "comment": null, "summary": "Digital twins promise a better understanding and use of complex systems. To\nthis end, they represent these systems at their runtime and may interact with\nthem to control their processes. Software engineering is a wicked challenge in\nwhich stakeholders from many domains collaborate to produce software artifacts\ntogether. In the presence of skilled software engineer shortage, our vision is\nto leverage DTs as means for better rep- resenting, understanding, and\noptimizing software engineering processes to (i) enable software experts making\nthe best use of their time and (ii) support domain experts in producing\nhigh-quality software. This paper outlines why this would be beneficial, what\nsuch a digital twin could look like, and what is missing for realizing and\ndeploying software engineering digital twins.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u5229\u7528\u6570\u5b57\u5b6a\u751f\u6280\u672f\u6765\u66f4\u597d\u5730\u8868\u793a\u3001\u7406\u89e3\u548c\u4f18\u5316\u8f6f\u4ef6\u5de5\u7a0b\u8fc7\u7a0b\uff0c\u4ee5\u5e94\u5bf9\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u77ed\u7f3a\u95ee\u9898\uff0c\u5e2e\u52a9\u8f6f\u4ef6\u4e13\u5bb6\u9ad8\u6548\u5229\u7528\u65f6\u95f4\u5e76\u652f\u6301\u9886\u57df\u4e13\u5bb6\u5f00\u53d1\u9ad8\u8d28\u91cf\u8f6f\u4ef6\u3002", "motivation": "\u8f6f\u4ef6\u5de5\u7a0b\u662f\u4e00\u4e2a\u590d\u6742\u7684\u591a\u9886\u57df\u534f\u4f5c\u8fc7\u7a0b\uff0c\u9762\u4e34\u719f\u7ec3\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u77ed\u7f3a\u7684\u6311\u6218\u3002\u6570\u5b57\u5b6a\u751f\u6280\u672f\u80fd\u591f\u5b9e\u65f6\u8868\u793a\u548c\u63a7\u5236\u7cfb\u7edf\uff0c\u56e0\u6b64\u4f5c\u8005\u5e0c\u671b\u5c06\u5176\u5e94\u7528\u4e8e\u8f6f\u4ef6\u5de5\u7a0b\u8fc7\u7a0b\uff0c\u4ee5\u6539\u5584\u6d41\u7a0b\u7406\u89e3\u548c\u4f18\u5316\u3002", "method": "\u672c\u6587\u4e3b\u8981\u63d0\u51fa\u6982\u5ff5\u6846\u67b6\uff0c\u63a2\u8ba8\u4e86\u8f6f\u4ef6\u5de5\u7a0b\u6570\u5b57\u5b6a\u751f\u7684\u53ef\u80fd\u5f62\u6001\uff0c\u5305\u62ec\u5982\u4f55\u8868\u793a\u8f6f\u4ef6\u5de5\u7a0b\u8fc7\u7a0b\u3001\u4e0e\u7cfb\u7edf\u4ea4\u4e92\u4ee5\u63a7\u5236\u6d41\u7a0b\uff0c\u4ee5\u53ca\u9700\u8981\u89e3\u51b3\u7684\u5173\u952e\u6280\u672f\u95ee\u9898\u3002", "result": "\u8bba\u6587\u63d0\u51fa\u4e86\u8f6f\u4ef6\u5de5\u7a0b\u6570\u5b57\u5b6a\u751f\u7684\u613f\u666f\u6846\u67b6\uff0c\u660e\u786e\u4e86\u5176\u6f5c\u5728\u76ca\u5904\uff0c\u5305\u62ec\u63d0\u5347\u8f6f\u4ef6\u4e13\u5bb6\u5de5\u4f5c\u6548\u7387\u548c\u652f\u6301\u9886\u57df\u4e13\u5bb6\u5f00\u53d1\u9ad8\u8d28\u91cf\u8f6f\u4ef6\uff0c\u4f46\u5c1a\u672a\u63d0\u4f9b\u5177\u4f53\u5b9e\u73b0\u6216\u5b9e\u8bc1\u7ed3\u679c\u3002", "conclusion": "\u8f6f\u4ef6\u5de5\u7a0b\u6570\u5b57\u5b6a\u751f\u5177\u6709\u5de8\u5927\u6f5c\u529b\uff0c\u4f46\u9700\u8981\u8fdb\u4e00\u6b65\u7814\u7a76\u89e3\u51b3\u5b9e\u73b0\u548c\u90e8\u7f72\u6240\u9700\u7684\u6280\u672f\u6311\u6218\uff0c\u5305\u62ec\u5982\u4f55\u6709\u6548\u5efa\u6a21\u8f6f\u4ef6\u5de5\u7a0b\u8fc7\u7a0b\u3001\u4e0e\u73b0\u6709\u5de5\u5177\u96c6\u6210\u7b49\u5173\u952e\u95ee\u9898\u3002"}}
{"id": "2510.05788", "categories": ["cs.SE", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2510.05788", "abs": "https://arxiv.org/abs/2510.05788", "authors": ["Nikita Pavlichenko", "Iurii Nazarov", "Ivan Dolgov", "Ekaterina Garanina", "Dmitry Ustalov", "Ivan Bondyrev", "Kseniia Lysaniuk", "Evgeniia Vu", "Kirill Chekmenev", "Joseph Shtok", "Yaroslav Golubev", "Anton Semenkin", "Uladzislau Sazanovich"], "title": "Mellum: Production-Grade in-IDE Contextual Code Completion with Multi-File Project Understanding", "comment": "11 pages, 4 figures, 3 tables", "summary": "We present the Mellum models family, open-weight code completion models\ndesigned for interactive use in JetBrains IDEs. Mellums have 4B parameters,\nadopt a Llama-style architecture, and are pre-trained on ~4T tokens of\npermissively licensed, multi-language code. Our studies show that (i) careful\ndata curation and staged training significantly improve the model's quality,\n(ii) editor-critical capabilities such as context packing are necessary for\nhigh-quality suggestions, and (iii) a compact, task-focused model can meet the\ncost and latency constraints of interactive completion.\n  In the paper, we describe an end-to-end industrial pipeline for producing\ncontextualized in-editor completion: disciplined data governance, multi-stage\ntraining that includes fill-in-the-middle and project context via supervised\nfine-tuning, and alignment via direct preference optimization using feedback\nfrom real-world scenarios. Our quality evaluations include both large-scale\noffline benchmarks and online telemetry from production deployments in\nJetBrains IDEs. Mellums are released under the Apache-2.0 license on\nHuggingFace, with a public model card providing a reproducible reference for\npractitioners. Our experience offers a pragmatic blueprint for taking a\nfocused, open model from a research prototype to at scale production for\nhundreds of thousands of users.", "AI": {"tldr": "Mellum\u6a21\u578b\u662f\u4e13\u4e3aJetBrains IDE\u8bbe\u8ba1\u76844B\u53c2\u6570\u4ee3\u7801\u8865\u5168\u6a21\u578b\uff0c\u91c7\u7528\u591a\u9636\u6bb5\u8bad\u7ec3\u65b9\u6cd5\uff0c\u57284T\u591a\u8bed\u8a00\u4ee3\u7801\u6570\u636e\u4e0a\u9884\u8bad\u7ec3\uff0c\u6ee1\u8db3\u4ea4\u4e92\u5f0f\u4f7f\u7528\u7684\u6210\u672c\u548c\u5ef6\u8fdf\u8981\u6c42\u3002", "motivation": "\u4e3aJetBrains IDE\u63d0\u4f9b\u9ad8\u8d28\u91cf\u7684\u4ea4\u4e92\u5f0f\u4ee3\u7801\u8865\u5168\u529f\u80fd\uff0c\u540c\u65f6\u6ee1\u8db3\u6210\u672c\u6548\u76ca\u548c\u4f4e\u5ef6\u8fdf\u7684\u5de5\u4e1a\u7ea7\u90e8\u7f72\u9700\u6c42\u3002", "method": "\u91c7\u7528\u7aef\u5230\u7aef\u5de5\u4e1a\u6d41\u6c34\u7ebf\uff0c\u5305\u62ec\u4e25\u683c\u7684\u6570\u636e\u6cbb\u7406\u3001\u591a\u9636\u6bb5\u8bad\u7ec3\uff08\u5305\u542b\u4e2d\u95f4\u586b\u5145\u548c\u9879\u76ee\u4e0a\u4e0b\u6587\u76d1\u7763\u5fae\u8c03\uff09\uff0c\u4ee5\u53ca\u57fa\u4e8e\u771f\u5b9e\u573a\u666f\u53cd\u9988\u7684\u76f4\u63a5\u504f\u597d\u4f18\u5316\u5bf9\u9f50\u3002", "result": "\u6a21\u578b\u5728\u79bb\u7ebf\u57fa\u51c6\u6d4b\u8bd5\u548c\u751f\u4ea7\u73af\u5883\u5728\u7ebf\u9065\u6d4b\u4e2d\u90fd\u8868\u73b0\u51fa\u9ad8\u8d28\u91cf\uff0c\u5df2\u6210\u529f\u90e8\u7f72\u5230\u6570\u5341\u4e07\u7528\u6237\u7684\u751f\u4ea7\u73af\u5883\u4e2d\u3002", "conclusion": "Mellum\u6a21\u578b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b9e\u7528\u7684\u84dd\u56fe\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u5c06\u4e13\u6ce8\u7684\u5f00\u653e\u6a21\u578b\u4ece\u7814\u7a76\u539f\u578b\u6269\u5c55\u5230\u5927\u89c4\u6a21\u751f\u4ea7\u90e8\u7f72\u3002"}}
{"id": "2510.05878", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.05878", "abs": "https://arxiv.org/abs/2510.05878", "authors": ["Darja Smite", "Franz Zieris", "Lars-Ola Damm"], "title": "A Wave of Resignations in the Aftermath of Remote Onboarding", "comment": "9 pages, submitted to the Journal of Systems and Software, In\n  Practice track", "summary": "The COVID-19 pandemic has permanently altered workplace structures,\nnormalizing remote work. However, critical evidence highlights challenges with\nfully remote arrangements, particularly for software teams. This study\ninvestigates employee resignation patterns at Ericsson, a global developer of\nsoftware-intensive systems, before, during, and after the pandemic. Using HR\ndata from 2016-2025 in Ericsson Sweden, we analyze how different work\nmodalities (onsite, remote, and hybrid) influence employee retention. Our\nfindings show a marked increase in resignations from summer 2021 to summer\n2023, especially among employees with less than five years of tenure. Employees\nonboarded remotely during the pandemic were significantly more likely to resign\nwithin their first three years, even after returning to the office. Exit\nsurveys suggest that remote onboarding may fail to establish the necessary\norganizational attachment, the feeling of belonging and long-term retention. By\ncontrast, the company's eventual successful return to pre-pandemic retention\nrates illustrates the value of differentiated work policies and supports\nreconsidering selective return-to-office (RTO) mandates. Our study demonstrates\nthe importance of employee integration practices in hybrid environments where\nthe requirement for in-office presence for recent hires shall be accompanied by\nin-office presence from their team members and more senior staff whose\nmentoring and social interactions contribute to integration into the corporate\nwork environment. We hope these actionable insights will inform HR leaders and\npolicymakers in shaping post-pandemic work practices, demonstrating that\ncarefully crafted hybrid models anchored in organizational attachment and\nmentorship can sustain retention in knowledge-intensive companies.", "AI": {"tldr": "\u8be5\u7814\u7a76\u5206\u6790\u4e86\u7231\u7acb\u4fe1\u516c\u53f8\u5728\u75ab\u60c5\u524d\u540e\u7684\u5458\u5de5\u79bb\u804c\u6a21\u5f0f\uff0c\u53d1\u73b0\u8fdc\u7a0b\u5165\u804c\u663e\u8457\u589e\u52a0\u4e86\u5458\u5de5\u5728\u5934\u4e09\u5e74\u5185\u7684\u79bb\u804c\u7387\uff0c\u800c\u6210\u529f\u7684\u6df7\u5408\u5de5\u4f5c\u6a21\u5f0f\u9700\u8981\u786e\u4fdd\u65b0\u5458\u5de5\u4e0e\u56e2\u961f\u6210\u5458\u5171\u540c\u5728\u529e\u516c\u5ba4\u5de5\u4f5c\u4ee5\u5efa\u7acb\u7ec4\u7ec7\u5f52\u5c5e\u611f\u3002", "motivation": "COVID-19\u75ab\u60c5\u6c38\u4e45\u6539\u53d8\u4e86\u5de5\u4f5c\u7ed3\u6784\uff0c\u4f46\u5b8c\u5168\u8fdc\u7a0b\u5de5\u4f5c\u5bf9\u8f6f\u4ef6\u56e2\u961f\u5b58\u5728\u6311\u6218\u3002\u672c\u7814\u7a76\u65e8\u5728\u8c03\u67e5\u4e0d\u540c\u5de5\u4f5c\u6a21\u5f0f\uff08\u73b0\u573a\u3001\u8fdc\u7a0b\u3001\u6df7\u5408\uff09\u5bf9\u5458\u5de5\u4fdd\u7559\u7684\u5f71\u54cd\u3002", "method": "\u4f7f\u7528\u7231\u7acb\u4fe1\u745e\u5178\u516c\u53f82016-2025\u5e74\u7684\u4eba\u529b\u8d44\u6e90\u6570\u636e\uff0c\u5206\u6790\u75ab\u60c5\u524d\u3001\u671f\u95f4\u548c\u540e\u7684\u5458\u5de5\u79bb\u804c\u6a21\u5f0f\uff0c\u7279\u522b\u5173\u6ce8\u4e0d\u540c\u5de5\u4f5c\u6a21\u5f0f\u4e0b\u7684\u4fdd\u7559\u7387\u3002", "result": "\u7814\u7a76\u53d1\u73b02021\u5e74\u590f\u5b63\u81f32023\u5e74\u590f\u5b63\u79bb\u804c\u7387\u663e\u8457\u4e0a\u5347\uff0c\u5c24\u5176\u662f\u5de5\u9f84\u5c11\u4e8e5\u5e74\u7684\u5458\u5de5\u3002\u75ab\u60c5\u671f\u95f4\u8fdc\u7a0b\u5165\u804c\u7684\u5458\u5de5\u5728\u5934\u4e09\u5e74\u5185\u79bb\u804c\u53ef\u80fd\u6027\u663e\u8457\u66f4\u9ad8\uff0c\u5373\u4f7f\u8fd4\u56de\u529e\u516c\u5ba4\u540e\u3002\u6210\u529f\u7684\u6df7\u5408\u6a21\u5f0f\u9700\u8981\u65b0\u5458\u5de5\u4e0e\u56e2\u961f\u6210\u5458\u5171\u540c\u5728\u573a\u3002", "conclusion": "\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u6df7\u5408\u5de5\u4f5c\u6a21\u5f0f\uff0c\u57fa\u4e8e\u7ec4\u7ec7\u5f52\u5c5e\u611f\u548c\u5bfc\u5e08\u5236\uff0c\u80fd\u591f\u7ef4\u6301\u77e5\u8bc6\u5bc6\u96c6\u578b\u516c\u53f8\u7684\u5458\u5de5\u4fdd\u7559\u3002\u65b0\u5458\u5de5\u9700\u8981\u4e0e\u56e2\u961f\u6210\u5458\u5171\u540c\u5728\u529e\u516c\u5ba4\u5de5\u4f5c\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u6574\u5408\u3002"}}
{"id": "2510.05968", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.05968", "abs": "https://arxiv.org/abs/2510.05968", "authors": ["Scott Frees"], "title": "Extending ResourceLink: Patterns for Large Dataset Processing in MCP Applications", "comment": null, "summary": "Large language models translate natural language into database queries, yet\ncontext window limitations prevent direct deployment in reporting systems where\ncomplete datasets exhaust available tokens. The Model Context Protocol\nspecification defines ResourceLink for referencing external resources, but\npractical patterns for implementing scalable reporting architectures remain\nundocumented. This paper presents patterns for building LLM-powered reporting\nsystems that decouple query generation from data retrieval. We introduce a\ndual-response pattern extending ResourceLink to support both iterative query\nrefinement and out-of-band data access, accompanied by patterns for\nmulti-tenant security and resource lifecycle management. These patterns address\nfundamental challenges in LLM-driven reporting applications and provide\npractical guidance for developers building them.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u6784\u5efaLLM\u9a71\u52a8\u7684\u62a5\u8868\u7cfb\u7edf\u7684\u6a21\u5f0f\uff0c\u901a\u8fc7\u5206\u79bb\u67e5\u8be2\u751f\u6210\u548c\u6570\u636e\u68c0\u7d22\u6765\u89e3\u51b3\u4e0a\u4e0b\u6587\u7a97\u53e3\u9650\u5236\u95ee\u9898\uff0c\u6269\u5c55ResourceLink\u652f\u6301\u8fed\u4ee3\u67e5\u8be2\u4f18\u5316\u548c\u5e26\u5916\u6570\u636e\u8bbf\u95ee\u3002", "motivation": "\u5927\u578b\u8bed\u8a00\u6a21\u578b\u867d\u7136\u80fd\u5c06\u81ea\u7136\u8bed\u8a00\u8f6c\u6362\u4e3a\u6570\u636e\u5e93\u67e5\u8be2\uff0c\u4f46\u5728\u62a5\u8868\u7cfb\u7edf\u4e2d\u5b8c\u6574\u6570\u636e\u96c6\u4f1a\u8017\u5c3d\u53ef\u7528token\uff0c\u4e0a\u4e0b\u6587\u7a97\u53e3\u9650\u5236\u963b\u788d\u4e86\u76f4\u63a5\u90e8\u7f72\u3002Model Context Protocol\u5b9a\u4e49\u4e86ResourceLink\u4f46\u7f3a\u4e4f\u53ef\u6269\u5c55\u62a5\u8868\u67b6\u6784\u7684\u5b9e\u73b0\u6a21\u5f0f\u3002", "method": "\u5f15\u5165\u53cc\u54cd\u5e94\u6a21\u5f0f\u6269\u5c55ResourceLink\uff0c\u652f\u6301\u8fed\u4ee3\u67e5\u8be2\u4f18\u5316\u548c\u5e26\u5916\u6570\u636e\u8bbf\u95ee\uff0c\u540c\u65f6\u63d0\u4f9b\u591a\u79df\u6237\u5b89\u5168\u548c\u8d44\u6e90\u751f\u547d\u5468\u671f\u7ba1\u7406\u6a21\u5f0f\u3002", "result": "\u5f00\u53d1\u4e86\u89e3\u51b3LLM\u9a71\u52a8\u62a5\u8868\u5e94\u7528\u57fa\u672c\u6311\u6218\u7684\u5b9e\u7528\u6a21\u5f0f\uff0c\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u6784\u5efa\u6b64\u7c7b\u7cfb\u7edf\u7684\u5b9e\u8df5\u6307\u5bfc\u3002", "conclusion": "\u8fd9\u4e9b\u6a21\u5f0f\u89e3\u51b3\u4e86LLM\u9a71\u52a8\u62a5\u8868\u5e94\u7528\u4e2d\u7684\u57fa\u672c\u6311\u6218\uff0c\u4e3a\u6784\u5efa\u53ef\u6269\u5c55\u62a5\u8868\u7cfb\u7edf\u63d0\u4f9b\u4e86\u5b9e\u7528\u7684\u67b6\u6784\u6307\u5bfc\u3002"}}
{"id": "2510.06000", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.06000", "abs": "https://arxiv.org/abs/2510.06000", "authors": ["Daniel Otten", "Trevor Stalnaker", "Nathan Wintersgill", "Oscar Chaparro", "Denys Poshyvanyk"], "title": "Prompting in Practice: Investigating Software Developers' Use of Generative AI Tools", "comment": null, "summary": "The integration of generative artificial intelligence (GenAI) tools has\nfundamentally transformed software development. Although prompt engineering has\nemerged as a critical skill, existing research focuses primarily on individual\ntechniques rather than software developers' broader workflows. This study\npresents a systematic investigation of how software engineers integrate GenAI\ntools into their professional practice through a large-scale survey examining\nprompting strategies, conversation patterns, and reliability assessments across\nvarious software engineering tasks.\n  We surveyed 91 software engineers, including 72 active GenAI users, to\nunderstand AI usage patterns throughout the development process. Our 14 key\nfindings show that while code generation is nearly universal, proficiency\nstrongly correlates with using AI for more nuanced tasks such as debugging and\ncode review, and that developers prefer iterative multi-turn conversations to\nsingle-shot prompting. Documentation tasks are perceived as most reliable,\nwhile complex code generation and debugging present sizable challenges. Our\ninsights provide an empirical baseline of current developer practices, from\nsimple code generation to deeper workflow integration, with actionable insights\nfor future improvements.", "AI": {"tldr": "\u8be5\u7814\u7a76\u901a\u8fc7\u8c03\u67e591\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u7cfb\u7edf\u5206\u6790\u4e86GenAI\u5de5\u5177\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u5b9e\u9645\u5e94\u7528\u6a21\u5f0f\uff0c\u53d1\u73b0\u4ee3\u7801\u751f\u6210\u666e\u904d\u4f46\u719f\u7ec3\u5ea6\u4e0e\u590d\u6742\u4efb\u52a1\u4f7f\u7528\u76f8\u5173\uff0c\u5f00\u53d1\u8005\u504f\u597d\u591a\u8f6e\u5bf9\u8bdd\uff0c\u6587\u6863\u4efb\u52a1\u6700\u53ef\u9760\u3002", "motivation": "\u73b0\u6709\u7814\u7a76\u4e3b\u8981\u5173\u6ce8\u4e2a\u522b\u63d0\u793a\u5de5\u7a0b\u6280\u672f\uff0c\u800c\u975e\u5f00\u53d1\u8005\u7684\u5b8c\u6574\u5de5\u4f5c\u6d41\u7a0b\uff0c\u9700\u8981\u7cfb\u7edf\u4e86\u89e3\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u5982\u4f55\u5c06GenAI\u5de5\u5177\u6574\u5408\u5230\u4e13\u4e1a\u5b9e\u8df5\u4e2d\u3002", "method": "\u901a\u8fc7\u5927\u89c4\u6a21\u8c03\u67e591\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff08\u5176\u4e2d72\u540d\u6d3b\u8dc3GenAI\u7528\u6237\uff09\uff0c\u5206\u6790\u63d0\u793a\u7b56\u7565\u3001\u5bf9\u8bdd\u6a21\u5f0f\u548c\u53ef\u9760\u6027\u8bc4\u4f30\u5728\u4e0d\u540c\u8f6f\u4ef6\u5de5\u7a0b\u4efb\u52a1\u4e2d\u7684\u5e94\u7528\u3002", "result": "14\u4e2a\u5173\u952e\u53d1\u73b0\u663e\u793a\uff1a\u4ee3\u7801\u751f\u6210\u51e0\u4e4e\u666e\u904d\uff0c\u719f\u7ec3\u5ea6\u4e0e\u8c03\u8bd5\u548c\u4ee3\u7801\u5ba1\u67e5\u7b49\u590d\u6742\u4efb\u52a1\u4f7f\u7528\u5f3a\u76f8\u5173\uff1b\u5f00\u53d1\u8005\u504f\u597d\u8fed\u4ee3\u5f0f\u591a\u8f6e\u5bf9\u8bdd\u800c\u975e\u5355\u6b21\u63d0\u793a\uff1b\u6587\u6863\u4efb\u52a1\u88ab\u8ba4\u4e3a\u6700\u53ef\u9760\uff0c\u590d\u6742\u4ee3\u7801\u751f\u6210\u548c\u8c03\u8bd5\u9762\u4e34\u6311\u6218\u3002", "conclusion": "\u7814\u7a76\u4e3a\u5f53\u524d\u5f00\u53d1\u8005\u5b9e\u8df5\u63d0\u4f9b\u4e86\u7ecf\u9a8c\u57fa\u51c6\uff0c\u4ece\u7b80\u5355\u4ee3\u7801\u751f\u6210\u5230\u6df1\u5ea6\u5de5\u4f5c\u6d41\u7a0b\u6574\u5408\uff0c\u4e3a\u672a\u6765\u6539\u8fdb\u63d0\u4f9b\u4e86\u53ef\u884c\u89c1\u89e3\u3002"}}
{"id": "2510.06104", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2510.06104", "abs": "https://arxiv.org/abs/2510.06104", "authors": ["Elijah Kayode Adejumo", "Brittany Johnson"], "title": "Explaining Code Risk in OSS: Towards LLM-Generated Fault Prediction Interpretations", "comment": null, "summary": "Open Source Software (OSS) has become a very important and crucial\ninfrastructure worldwide because of the value it provides. OSS typically\ndepends on contributions from developers across diverse backgrounds and levels\nof experience. Making safe changes, such as fixing a bug or implementing a new\nfeature, can be challenging, especially in object-oriented systems where\ncomponents are interdependent. Static analysis and defect-prediction tools\nproduce metrics (e.g., complexity,coupling) that flag potentially fault-prone\ncomponents, but these signals are often hard for contributors new or unfamiliar\nwith the codebase to interpret. Large Language Models (LLMs) have shown strong\nperformance on software engineering tasks such as code summarization and\ndocumentation generation. Building on this progress, we investigate whether\nLLMs can translate fault-prediction metrics into clear, human-readable risk\nexplanations and actionable guidance to help OSS contributors plan and review\ncode modifications. We outline explanation types that an LLM-generated\nassistant could provide (descriptive, contextual, and actionable explanations).\nWe also outline our next steps to assess usefulness through a task-based study\nwith OSS contributors, comparing metric-only baselines to LLM-generated\nexplanations on decision quality, time-to-completion, and error rates", "AI": {"tldr": "\u8be5\u7814\u7a76\u63a2\u8ba8\u4f7f\u7528\u5927\u8bed\u8a00\u6a21\u578b\u5c06\u9759\u6001\u5206\u6790\u5de5\u5177\u751f\u6210\u7684\u6545\u969c\u9884\u6d4b\u6307\u6807\u8f6c\u5316\u4e3a\u6e05\u6670\u3001\u53ef\u8bfb\u7684\u98ce\u9669\u89e3\u91ca\u548c\u884c\u52a8\u6307\u5bfc\uff0c\u4ee5\u5e2e\u52a9\u5f00\u6e90\u8f6f\u4ef6\u8d21\u732e\u8005\u66f4\u597d\u5730\u7406\u89e3\u548c\u4fee\u6539\u4ee3\u7801\u3002", "motivation": "\u5f00\u6e90\u8f6f\u4ef6\u8d21\u732e\u8005\uff08\u7279\u522b\u662f\u65b0\u624b\uff09\u96be\u4ee5\u7406\u89e3\u9759\u6001\u5206\u6790\u5de5\u5177\u751f\u6210\u7684\u590d\u6742\u6307\u6807\uff0c\u9700\u8981\u5c06\u8fd9\u4e9b\u6280\u672f\u6307\u6807\u8f6c\u5316\u4e3a\u6613\u4e8e\u7406\u89e3\u7684\u98ce\u9669\u89e3\u91ca\u548c\u884c\u52a8\u6307\u5bfc\u3002", "method": "\u63d0\u51fa\u4f7f\u7528\u5927\u8bed\u8a00\u6a21\u578b\u5c06\u6545\u969c\u9884\u6d4b\u6307\u6807\u8f6c\u5316\u4e3a\u4e09\u7c7b\u89e3\u91ca\uff1a\u63cf\u8ff0\u6027\u89e3\u91ca\u3001\u4e0a\u4e0b\u6587\u89e3\u91ca\u548c\u53ef\u64cd\u4f5c\u89e3\u91ca\uff0c\u5e76\u901a\u8fc7\u4efb\u52a1\u7814\u7a76\u8bc4\u4f30\u5176\u6709\u6548\u6027\u3002", "result": "\u7814\u7a76\u5904\u4e8e\u89c4\u5212\u9636\u6bb5\uff0c\u63d0\u51fa\u4e86LLM\u751f\u6210\u89e3\u91ca\u7684\u65b9\u6cd5\u6846\u67b6\uff0c\u4e0b\u4e00\u6b65\u5c06\u901a\u8fc7\u5b9e\u8bc1\u7814\u7a76\u8bc4\u4f30\u5176\u6548\u679c\u3002", "conclusion": "\u5927\u8bed\u8a00\u6a21\u578b\u6709\u6f5c\u529b\u5c06\u6280\u672f\u6027\u7684\u6545\u969c\u9884\u6d4b\u6307\u6807\u8f6c\u5316\u4e3a\u5bf9\u5f00\u6e90\u8f6f\u4ef6\u8d21\u732e\u8005\u6709\u7528\u7684\u98ce\u9669\u89e3\u91ca\u548c\u6307\u5bfc\uff0c\u4ece\u800c\u63d0\u9ad8\u4ee3\u7801\u4fee\u6539\u7684\u8d28\u91cf\u548c\u6548\u7387\u3002"}}
{"id": "2510.06187", "categories": ["cs.SE", "cs.AI", "cs.CY"], "pdf": "https://arxiv.org/pdf/2510.06187", "abs": "https://arxiv.org/abs/2510.06187", "authors": ["Griffin Pitts", "Aum Pandya", "Darsh Rank", "Tirth Bhatt", "Muntasir Hoq", "Bita Akram"], "title": "Automated Program Repair of Uncompilable Student Code", "comment": null, "summary": "A significant portion of student programming submissions in CS1 learning\nenvironments are uncompilable, limiting their use in student modeling and\ndownstream knowledge tracing. Traditional modeling pipelines often exclude\nthese cases, discarding observations of student learning. This study\ninvestigates automated program repair as a strategy to recover uncompilable\ncode while preserving students' structural intent for use in student modeling.\nWithin this framework, we assess large language models (LLMs) as repair agents,\nincluding GPT-5 (OpenAI), Claude 3.5 Haiku (Anthropic), and Gemini 2.5 Flash\n(Google), under high- and low-context prompting conditions. Repairs were\nevaluated for compilability, edit distance, and preservation of students'\noriginal structure and logic. We find that while all three LLMs are capable of\nproducing compilable repairs, their behavior diverges in how well they preserve\nstudents' control flow and code structure, which affects their pedagogical\nutility. By recovering uncompilable submissions, this work enables richer and\nmore comprehensive analyses of learners' coding processes and development over\ntime.", "AI": {"tldr": "\u4f7f\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b\u81ea\u52a8\u4fee\u590dCS1\u8bfe\u7a0b\u4e2d\u65e0\u6cd5\u7f16\u8bd1\u7684\u5b66\u751f\u4ee3\u7801\uff0c\u4ee5\u4fdd\u7559\u5b66\u751f\u7ed3\u6784\u610f\u56fe\u5e76\u7528\u4e8e\u5b66\u751f\u5efa\u6a21\u3002", "motivation": "CS1\u5b66\u4e60\u73af\u5883\u4e2d\u5927\u91cf\u5b66\u751f\u7f16\u7a0b\u63d0\u4ea4\u65e0\u6cd5\u7f16\u8bd1\uff0c\u9650\u5236\u4e86\u5176\u5728\u5b66\u751f\u5efa\u6a21\u548c\u77e5\u8bc6\u8ffd\u8e2a\u4e2d\u7684\u5e94\u7528\uff0c\u4f20\u7edf\u5efa\u6a21\u6d41\u7a0b\u5f80\u5f80\u6392\u9664\u8fd9\u4e9b\u6848\u4f8b\uff0c\u4e22\u5931\u4e86\u5b66\u751f\u5b66\u4e60\u89c2\u5bdf\u3002", "method": "\u8bc4\u4f30GPT-5\u3001Claude 3.5 Haiku\u548cGemini 2.5 Flash\u7b49LLM\u5728\u9ad8\u3001\u4f4e\u4e0a\u4e0b\u6587\u63d0\u793a\u6761\u4ef6\u4e0b\u4f5c\u4e3a\u4fee\u590d\u4ee3\u7406\u7684\u80fd\u529b\uff0c\u901a\u8fc7\u7f16\u8bd1\u6027\u3001\u7f16\u8f91\u8ddd\u79bb\u3001\u7ed3\u6784\u4fdd\u7559\u7b49\u6307\u6807\u8bc4\u4f30\u4fee\u590d\u6548\u679c\u3002", "result": "\u6240\u6709\u4e09\u4e2aLLM\u90fd\u80fd\u4ea7\u751f\u53ef\u7f16\u8bd1\u7684\u4fee\u590d\uff0c\u4f46\u5728\u4fdd\u7559\u5b66\u751f\u63a7\u5236\u6d41\u548c\u4ee3\u7801\u7ed3\u6784\u65b9\u9762\u8868\u73b0\u4e0d\u540c\uff0c\u5f71\u54cd\u5176\u6559\u5b66\u6548\u7528\u3002", "conclusion": "\u901a\u8fc7\u4fee\u590d\u65e0\u6cd5\u7f16\u8bd1\u7684\u63d0\u4ea4\uff0c\u8fd9\u9879\u5de5\u4f5c\u80fd\u591f\u5bf9\u5b66\u4e60\u8005\u7684\u7f16\u7801\u8fc7\u7a0b\u548c\u968f\u65f6\u95f4\u53d1\u5c55\u8fdb\u884c\u66f4\u4e30\u5bcc\u5168\u9762\u7684\u5206\u6790\u3002"}}
