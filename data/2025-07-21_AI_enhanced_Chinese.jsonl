{"id": "2507.13481", "categories": ["cs.SE", "cs.CY"], "pdf": "https://arxiv.org/pdf/2507.13481", "abs": "https://arxiv.org/abs/2507.13481", "authors": ["Arthur Bueno", "Bruno Cafeo", "Maria Cagnin", "Awdren Font\u00e3o"], "title": "Socio-Technical Smell Dynamics in Code Samples: A Multivocal Review on Emergence, Evolution, and Co-Occurrence", "comment": "12 pages; 2 figures; Preprint with the original submission accepted\n  for publication at 39th Brazilian Symposium on Software Engineering (SBES)", "summary": "Code samples play a pivotal role in open-source ecosystems (OSSECO), serving\nas lightweight artifacts that support knowledge transfer, onboarding, and\nframework adoption. Despite their instructional relevance, these samples are\noften governed informally, with minimal review and unclear ownership, which\nincreases their exposure to socio-technical degradation. In this context, the\nco-occurrence and longitudinal interplay of code smells (e.g., large classes,\npoor modularity) and community smells (e.g., lone contributors, fragmented\ncommunication) become particularly critical. While each type of smell has been\nstudied in isolation, little is known about how community-level dysfunctions\nanticipate or exacerbate technical anomalies in code samples over time. This\nstudy investigates how code and community smells emerge, co-occur, and evolve\nwithin code samples maintained in OSSECOs. A Multivocal Literature Review\nprotocol was applied, encompassing 30 peer-reviewed papers and 17\npractitioner-oriented sources (2013-2024). Thematic synthesis was conducted to\nidentify recurring socio-technical patterns related to smell dynamics. Nine\npatterns were identified, showing that community smells often precede or\nreinforce technical degradation in code samples. Symptoms such as \"radio\nsilence\" and centralized ownership were frequently associated with persistent\nstructural anomalies. Additionally, limited onboarding, the absence of\ncontinuous refactoring, and informal collaboration emerged as recurring\nconditions for smell accumulation. Conclusion: In OSSECOs, particularly within\ncode samples, community-level dysfunctions not only correlate with but often\nsignal maintainability decay. These findings underscore the need for\nsocio-technical quality indicators and lightweight governance mechanisms\ntailored to shared instructional artifacts.", "AI": {"tldr": "\u7814\u7a76\u5f00\u6e90\u751f\u6001\u7cfb\u7edf\u4e2d\u4ee3\u7801\u6837\u672c\u7684\u793e\u4f1a\u6280\u672f\u9000\u5316\u95ee\u9898\uff0c\u53d1\u73b0\u793e\u533a\u95ee\u9898\u5e38\u5bfc\u81f4\u6280\u672f\u95ee\u9898\u3002", "motivation": "\u4ee3\u7801\u6837\u672c\u5728\u5f00\u6e90\u751f\u6001\u4e2d\u5f88\u91cd\u8981\uff0c\u4f46\u7ba1\u7406\u677e\u6563\uff0c\u6613\u53d7\u793e\u4f1a\u6280\u672f\u9000\u5316\u5f71\u54cd\u3002", "method": "\u91c7\u7528\u591a\u58f0\u6587\u732e\u7efc\u8ff0\uff0c\u5206\u679030\u7bc7\u5b66\u672f\u8bba\u6587\u548c17\u7bc7\u5b9e\u8df5\u5bfc\u5411\u8d44\u6599\u3002", "result": "\u8bc6\u522b\u51fa9\u79cd\u6a21\u5f0f\uff0c\u663e\u793a\u793e\u533a\u95ee\u9898\u5e38\u5148\u4e8e\u6216\u52a0\u5267\u6280\u672f\u9000\u5316\u3002", "conclusion": "\u5f00\u6e90\u751f\u6001\u4e2d\uff0c\u793e\u533a\u95ee\u9898\u4e0e\u4ee3\u7801\u6837\u672c\u7684\u53ef\u7ef4\u62a4\u6027\u9000\u5316\u76f8\u5173\uff0c\u9700\u8f7b\u91cf\u7ea7\u6cbb\u7406\u673a\u5236\u3002"}}
{"id": "2507.13499", "categories": ["cs.SE", "cs.AI", "cs.PL"], "pdf": "https://arxiv.org/pdf/2507.13499", "abs": "https://arxiv.org/abs/2507.13499", "authors": ["Chandra Maddila", "Negar Ghorbani", "James Saindon", "Parth Thakkar", "Vijayaraghavan Murali", "Rui Abreu", "Jingyue Shen", "Brian Zhou", "Nachiappan Nagappan", "Peter C. Rigby"], "title": "AI-Assisted Fixes to Code Review Comments at Scale", "comment": null, "summary": "Aim. There are 10s of thousands of code review comments each week at Meta. We\ndeveloped Metamate for Code Review (MetaMateCR) that provides AI-assisted fixes\nfor reviewer comments in production at scale.\n  Method. We developed an internal benchmark of 64k <review comment, patch>\ndata points to fine-tune Llama models. Once our models achieve reasonable\noffline results, we roll them into production. To ensure that our AI-assisted\nfixes do not negatively impact the time it takes to do code reviews, we conduct\nrandomized controlled safety trials as well as full production experiments.\n  Offline Results. As a baseline, we compare GPT-4o to our small and large\nLlama models. In offline results, our LargeLSFT model creates an exact match\npatch 68% of the time outperforming GPT-4o by 9 percentage points (pp). The\ninternal models also use more modern Hack functions when compared to the PHP\nfunctions suggested by GPT-4o.\n  Safety Trial. When we roll MetaMateCR into production in a safety trial that\ncompares no AI patches with AI patch suggestions, we see a large regression\nwith reviewers taking over 5% longer to conduct reviews. After investigation,\nwe modify the UX to only show authors the AI patches, and see no regressions in\nthe time for reviews.\n  Production. When we roll LargeLSFT into production, we see an\nActionableToApplied rate of 19.7%, which is a 9.2pp improvement over GPT-4o.\nOur results illustrate the importance of safety trials in ensuring that AI does\nnot inadvertently slow down engineers, and a successful review comment to AI\npatch product running at scale.", "AI": {"tldr": "Meta\u5f00\u53d1\u4e86MetaMateCR\u5de5\u5177\uff0c\u901a\u8fc7AI\u8f85\u52a9\u4fee\u590d\u4ee3\u7801\u5ba1\u67e5\u610f\u89c1\uff0c\u5e76\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5927\u89c4\u6a21\u5e94\u7528\u3002\u901a\u8fc7\u5fae\u8c03Llama\u6a21\u578b\uff0c\u5176\u6027\u80fd\u4f18\u4e8eGPT-4o\uff0c\u4f46\u9700\u901a\u8fc7\u5b89\u5168\u8bd5\u9a8c\u4f18\u5316\u7528\u6237\u4f53\u9a8c\u3002", "motivation": "\u89e3\u51b3Meta\u6bcf\u5468\u6570\u4e07\u6761\u4ee3\u7801\u5ba1\u67e5\u610f\u89c1\u7684\u5904\u7406\u95ee\u9898\uff0c\u63d0\u9ad8\u6548\u7387\u3002", "method": "\u4f7f\u752864k\u6570\u636e\u70b9\u5fae\u8c03Llama\u6a21\u578b\uff0c\u5e76\u8fdb\u884c\u79bb\u7ebf\u6d4b\u8bd5\u3001\u5b89\u5168\u8bd5\u9a8c\u548c\u751f\u4ea7\u5b9e\u9a8c\u3002", "result": "LargeLSFT\u6a21\u578b\u79bb\u7ebf\u51c6\u786e\u738768%\uff0c\u4f18\u4e8eGPT-4o 9\u4e2a\u767e\u5206\u70b9\uff1b\u751f\u4ea7\u4e2dActionableToApplied\u738719.7%\uff0c\u63d0\u53479.2\u4e2a\u767e\u5206\u70b9\u3002", "conclusion": "MetaMateCR\u6210\u529f\u5c55\u793a\u4e86AI\u8f85\u52a9\u5de5\u5177\u5728\u5927\u89c4\u6a21\u5e94\u7528\u4e2d\u7684\u6f5c\u529b\uff0c\u540c\u65f6\u5f3a\u8c03\u4e86\u5b89\u5168\u8bd5\u9a8c\u7684\u91cd\u8981\u6027\u3002"}}
{"id": "2507.13553", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.13553", "abs": "https://arxiv.org/abs/2507.13553", "authors": ["Pragyan K C", "Rambod Ghandiparsi", "Thomas Herron", "John Heaps", "Mitra Bokaei Hosseini"], "title": "Towards Better Requirements from the Crowd: Developer Engagement with Feature Requests in Open Source Software", "comment": "Accepted at the 9th International Workshop on Crowd-Based\n  Requirements Engineering (CrowdRE'25)", "summary": "As user demands evolve, effectively incorporating feature requests is crucial\nfor maintaining software relevance and user satisfaction. Feature requests,\ntypically expressed in natural language, often suffer from ambiguity or\nincomplete information due to communication gaps or the requester's limited\ntechnical expertise. These issues can lead to misinterpretation, faulty\nimplementation, and reduced software quality. While seeking clarification from\nrequesters is a common strategy to mitigate these risks, little is known about\nhow developers engage in this clarification process in practice-how they\nformulate clarifying questions, seek technical or contextual details, align on\ngoals and use cases, or decide to close requests without attempting\nclarification. This study investigates how feature requests are prone to NL\ndefects (i.e. ambiguous or incomplete) and the conversational dynamics of\nclarification in open-source software (OSS) development, aiming to understand\nhow developers handle ambiguous or incomplete feature requests. Our findings\nsuggest that feature requests published on the OSS platforms do possess\nambiguity and incompleteness, and in some cases, both. We also find that\nexplicit clarification for the resolution of these defects is uncommon;\ndevelopers usually focus on aligning with project goals rather than resolving\nunclear text. When clarification occurs, it emphasizes understanding user\nintent/goal and feasibility, rather than technical details. By characterizing\nthe dynamics of clarification in open-source issue trackers, this work\nidentifies patterns that can improve user-developer collaboration and inform\nbest practices for handling feature requests effectively.", "AI": {"tldr": "\u7814\u7a76\u63a2\u8ba8\u4e86\u5f00\u6e90\u8f6f\u4ef6\u4e2d\u529f\u80fd\u8bf7\u6c42\u7684\u6a21\u7cca\u6027\u548c\u4e0d\u5b8c\u6574\u6027\uff0c\u4ee5\u53ca\u5f00\u53d1\u8005\u5982\u4f55\u5904\u7406\u8fd9\u4e9b\u95ee\u9898\u3002", "motivation": "\u529f\u80fd\u8bf7\u6c42\u5e38\u56e0\u81ea\u7136\u8bed\u8a00\u8868\u8fbe\u4e0d\u6e05\u6216\u4fe1\u606f\u4e0d\u5168\u5bfc\u81f4\u8bef\u89e3\u6216\u5b9e\u73b0\u9519\u8bef\uff0c\u5f71\u54cd\u8f6f\u4ef6\u8d28\u91cf\u3002", "method": "\u901a\u8fc7\u5206\u6790\u5f00\u6e90\u8f6f\u4ef6\u5e73\u53f0\u4e0a\u7684\u529f\u80fd\u8bf7\u6c42\u548c\u5f00\u53d1\u8005\u6f84\u6e05\u5bf9\u8bdd\uff0c\u7814\u7a76\u6a21\u7cca\u6027\u548c\u4e0d\u5b8c\u6574\u6027\u7684\u8868\u73b0\u53ca\u5904\u7406\u65b9\u5f0f\u3002", "result": "\u53d1\u73b0\u529f\u80fd\u8bf7\u6c42\u666e\u904d\u5b58\u5728\u6a21\u7cca\u6027\u548c\u4e0d\u5b8c\u6574\u6027\uff0c\u5f00\u53d1\u8005\u66f4\u5173\u6ce8\u9879\u76ee\u76ee\u6807\u800c\u975e\u6587\u672c\u6f84\u6e05\uff0c\u6f84\u6e05\u65f6\u4fa7\u91cd\u7528\u6237\u610f\u56fe\u548c\u53ef\u884c\u6027\u3002", "conclusion": "\u7814\u7a76\u63ed\u793a\u4e86\u529f\u80fd\u8bf7\u6c42\u5904\u7406\u4e2d\u7684\u6a21\u5f0f\uff0c\u6709\u52a9\u4e8e\u6539\u5584\u7528\u6237\u4e0e\u5f00\u53d1\u8005\u534f\u4f5c\uff0c\u4f18\u5316\u529f\u80fd\u8bf7\u6c42\u5904\u7406\u5b9e\u8df5\u3002"}}
{"id": "2507.13555", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.13555", "abs": "https://arxiv.org/abs/2507.13555", "authors": ["Pragyan K C", "Rambod Ghandiparsi", "Thomas Herron", "John Heaps", "Mitra Bokaei Hosseini"], "title": "Demystifying Feature Requests: Leveraging LLMs to Refine Feature Requests in Open-Source Software", "comment": "Accepted at the 33rd IEEE International Requirements Engineering 2025", "summary": "The growing popularity and widespread use of software applications (apps)\nacross various domains have driven rapid industry growth. Along with this\ngrowth, fast-paced market changes have led to constantly evolving software\nrequirements. Such requirements are often grounded in feature requests and\nenhancement suggestions, typically provided by users in natural language (NL).\nHowever, these requests often suffer from defects such as ambiguity and\nincompleteness, making them challenging to interpret. Traditional validation\nmethods (e.g., interviews and workshops) help clarify such defects but are\nimpractical in decentralized environments like open-source software (OSS),\nwhere change requests originate from diverse users on platforms like GitHub.\nThis paper proposes a novel approach leveraging Large Language Models (LLMs) to\ndetect and refine NL defects in feature requests. Our approach automates the\nidentification of ambiguous and incomplete requests and generates clarification\nquestions (CQs) to enhance their usefulness for developers. To evaluate its\neffectiveness, we apply our method to real-world OSS feature requests and\ncompare its performance against human annotations. In addition, we conduct\ninterviews with GitHub developers to gain deeper insights into their\nperceptions of NL defects, the strategies they use to address these defects,\nand the impact of defects on downstream software engineering (SE) tasks.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u5229\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u81ea\u52a8\u68c0\u6d4b\u548c\u4f18\u5316\u81ea\u7136\u8bed\u8a00\uff08NL\uff09\u7f3a\u9677\u7684\u65b9\u6cd5\uff0c\u4ee5\u6539\u8fdb\u5f00\u6e90\u8f6f\u4ef6\uff08OSS\uff09\u4e2d\u7684\u529f\u80fd\u8bf7\u6c42\u3002", "motivation": "\u968f\u7740\u8f6f\u4ef6\u5e94\u7528\u7684\u666e\u53ca\uff0c\u529f\u80fd\u8bf7\u6c42\u5e38\u56e0\u81ea\u7136\u8bed\u8a00\u7684\u6a21\u7cca\u6027\u548c\u4e0d\u5b8c\u6574\u6027\u800c\u96be\u4ee5\u89e3\u8bfb\uff0c\u4f20\u7edf\u9a8c\u8bc1\u65b9\u6cd5\u5728\u5206\u6563\u73af\u5883\u4e2d\u4e0d\u5b9e\u7528\u3002", "method": "\u5229\u7528LLMs\u81ea\u52a8\u8bc6\u522b\u6a21\u7cca\u548c\u4e0d\u5b8c\u6574\u7684\u8bf7\u6c42\uff0c\u5e76\u751f\u6210\u6f84\u6e05\u95ee\u9898\uff08CQs\uff09\u3002", "result": "\u65b9\u6cd5\u5728\u771f\u5b9eOSS\u529f\u80fd\u8bf7\u6c42\u4e0a\u8bc4\u4f30\uff0c\u6027\u80fd\u4e0e\u4eba\u5de5\u6807\u6ce8\u5bf9\u6bd4\uff0c\u5e76\u901a\u8fc7\u5f00\u53d1\u8005\u8bbf\u8c08\u9a8c\u8bc1\u6548\u679c\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u80fd\u6709\u6548\u63d0\u5347\u529f\u80fd\u8bf7\u6c42\u7684\u6e05\u6670\u5ea6\uff0c\u5bf9\u4e0b\u6e38\u8f6f\u4ef6\u5de5\u7a0b\u4efb\u52a1\u6709\u79ef\u6781\u5f71\u54cd\u3002"}}
{"id": "2507.13494", "categories": ["cs.PL", "stat.CO"], "pdf": "https://arxiv.org/pdf/2507.13494", "abs": "https://arxiv.org/abs/2507.13494", "authors": ["Feras A. Saad", "Wonyeol Lee"], "title": "Random Variate Generation with Formal Guarantees", "comment": null, "summary": "This article introduces a new approach to principled and practical random\nvariate generation with formal guarantees. The key idea is to first specify the\ndesired probability distribution in terms of a finite-precision numerical\nprogram that defines its cumulative distribution function (CDF), and then\ngenerate exact random variates according to this CDF. We present a universal\nand fully automated method to synthesize exact random variate generators given\nany numerical CDF implemented in any binary number format, such as\nfloating-point, fixed-point, and posits. The method is guaranteed to operate\nwith the same precision used to specify the CDF, does not overflow, avoids\nexpensive arbitrary-precision arithmetic, and exposes a consistent API. The\nmethod rests on a novel space-time optimal implementation for the class of\ngenerators that attain the information-theoretically optimal Knuth and Yao\nentropy rate, consuming the least possible number of input random bits per\noutput variate. We develop a random variate generation library using our method\nin C and evaluate it on a diverse set of ``continuous'' and ``discrete''\ndistributions, showing competitive runtime with the state-of-the-art GNU\nScientific Library while delivering higher accuracy, entropy efficiency, and\nautomation.", "AI": {"tldr": "\u63d0\u51fa\u4e00\u79cd\u57fa\u4e8e\u6709\u9650\u7cbe\u5ea6\u6570\u503c\u7a0b\u5e8f\u5b9a\u4e49CDF\u7684\u968f\u673a\u53d8\u91cf\u751f\u6210\u65b9\u6cd5\uff0c\u786e\u4fdd\u7cbe\u786e\u751f\u6210\u4e14\u4e0d\u6ea2\u51fa\u3002", "motivation": "\u89e3\u51b3\u4f20\u7edf\u968f\u673a\u53d8\u91cf\u751f\u6210\u65b9\u6cd5\u5728\u7cbe\u5ea6\u3001\u6548\u7387\u548c\u81ea\u52a8\u5316\u65b9\u9762\u7684\u4e0d\u8db3\u3002", "method": "\u901a\u8fc7\u6570\u503cCDF\u5408\u6210\u7cbe\u786e\u968f\u673a\u53d8\u91cf\u751f\u6210\u5668\uff0c\u652f\u6301\u591a\u79cd\u4e8c\u8fdb\u5236\u683c\u5f0f\uff0c\u907f\u514d\u9ad8\u7cbe\u5ea6\u8ba1\u7b97\u3002", "result": "\u5728C\u8bed\u8a00\u5e93\u4e2d\u5b9e\u73b0\uff0c\u76f8\u6bd4GNU\u79d1\u5b66\u5e93\uff0c\u5177\u6709\u66f4\u9ad8\u7cbe\u5ea6\u548c\u71b5\u6548\u7387\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u5728\u7cbe\u5ea6\u3001\u6548\u7387\u548c\u81ea\u52a8\u5316\u65b9\u9762\u4f18\u4e8e\u73b0\u6709\u6280\u672f\u3002"}}
{"id": "2507.14082", "categories": ["cs.FL", "cs.CC"], "pdf": "https://arxiv.org/pdf/2507.14082", "abs": "https://arxiv.org/abs/2507.14082", "authors": ["Nelma Moreira", "Luca Prigioniero"], "title": "Proceedings of the 15th International Workshop on Non-Classical Models of Automata and Applications", "comment": null, "summary": "The Fifteenth International Workshop on Non-Classical Models of Automata and\nApplications (NCMA 2025) was held in Loughborough, UK, on July 21 and 22, 2025,\norganized by the Department of Computer Science at Loughborough University and\nco-located with the 26th International Conference on Descriptional Complexity\nof Formal Systems (DCFS 2025, 22-24 July).\n  The NCMA workshop series was established in 2009 as an annual event for\nresearchers working on non-classical and classical models of automata, grammars\nor related devices. Such models are investigated both as theoretical models and\nas formal models for applications from various points of view. The goal of the\nNCMA workshop series is to exchange and develop novel ideas in order to gain\ndeeper and interdisciplinary coverage of this particular area that may foster\nnew insights and substantial progress.", "AI": {"tldr": "NCMA 2025\u662f\u7b2c\u5341\u4e94\u5c4a\u975e\u7ecf\u5178\u81ea\u52a8\u673a\u6a21\u578b\u4e0e\u5e94\u7528\u56fd\u9645\u7814\u8ba8\u4f1a\uff0c\u65e8\u5728\u4fc3\u8fdb\u975e\u7ecf\u5178\u4e0e\u7ecf\u5178\u81ea\u52a8\u673a\u6a21\u578b\u7684\u7814\u7a76\u4e0e\u5e94\u7528\u3002", "motivation": "\u4fc3\u8fdb\u975e\u7ecf\u5178\u4e0e\u7ecf\u5178\u81ea\u52a8\u673a\u6a21\u578b\u7684\u7406\u8bba\u4e0e\u5e94\u7528\u7814\u7a76\uff0c\u901a\u8fc7\u8de8\u5b66\u79d1\u4ea4\u6d41\u63a8\u52a8\u65b0\u89c1\u89e3\u548c\u5b9e\u8d28\u6027\u8fdb\u5c55\u3002", "method": "\u901a\u8fc7\u5e74\u5ea6\u7814\u8ba8\u4f1a\u5f62\u5f0f\uff0c\u6c47\u96c6\u7814\u7a76\u4eba\u5458\u5206\u4eab\u548c\u8ba8\u8bba\u975e\u7ecf\u5178\u81ea\u52a8\u673a\u6a21\u578b\u53ca\u76f8\u5173\u8bbe\u5907\u7684\u7814\u7a76\u6210\u679c\u3002", "result": "\u7814\u8ba8\u4f1a\u4e3a\u7814\u7a76\u8005\u63d0\u4f9b\u4e86\u4ea4\u6d41\u5e73\u53f0\uff0c\u63a8\u52a8\u4e86\u8be5\u9886\u57df\u7684\u6df1\u5165\u7814\u7a76\u548c\u5e94\u7528\u53d1\u5c55\u3002", "conclusion": "NCMA\u7cfb\u5217\u7814\u8ba8\u4f1a\u901a\u8fc7\u6301\u7eed\u7684\u5b66\u672f\u4ea4\u6d41\uff0c\u4e3a\u975e\u7ecf\u5178\u81ea\u52a8\u673a\u6a21\u578b\u7684\u7814\u7a76\u548c\u5e94\u7528\u63d0\u4f9b\u4e86\u91cd\u8981\u652f\u6301\u3002"}}
{"id": "2507.13847", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2507.13847", "abs": "https://arxiv.org/abs/2507.13847", "authors": ["Katsumi Inoue", "Daniil Kozhemiachenko"], "title": "Complexity of Abduction in \u0141ukasiewicz Logic", "comment": null, "summary": "We explore the problem of explaining observations in contexts involving\nstatements with truth degrees such as `the lift is loaded', `the symptoms are\nsevere', etc. To formalise these contexts, we consider infinitely-valued\n{\\L}ukasiewicz fuzzy logic. We define and motivate the notions of abduction\nproblems and explanations in the language of {\\L}ukasiewicz logic expanded with\n`interval literals' of the form $p\\geq\\mathbf{c}$, $p\\leq\\mathbf{c}$, and their\nnegations that express the set of values a variable can have. We analyse the\ncomplexity of standard abductive reasoning tasks (solution recognition,\nsolution existence, and relevance / necessity of hypotheses) in {\\L}ukasiewicz\nlogic for the case of the full language and for the case of theories containing\nonly disjunctive clauses and show that in contrast to classical propositional\nlogic, the abduction in the clausal fragment has lower complexity than in the\ngeneral case.", "AI": {"tldr": "\u8bba\u6587\u63a2\u8ba8\u4e86\u5728\u6d89\u53ca\u6a21\u7cca\u903b\u8f91\u7684\u4e0a\u4e0b\u6587\u4e2d\u89e3\u91ca\u89c2\u5bdf\u7ed3\u679c\u7684\u95ee\u9898\uff0c\u4f7f\u7528\u65e0\u9650\u503c\u0141ukasiewicz\u6a21\u7cca\u903b\u8f91\uff0c\u5e76\u5206\u6790\u4e86\u5176\u590d\u6742\u6027\u3002", "motivation": "\u7814\u7a76\u6a21\u7cca\u903b\u8f91\u4e2d\u7684\u89e3\u91ca\u95ee\u9898\uff0c\u7279\u522b\u662f\u5728\u0141ukasiewicz\u903b\u8f91\u4e2d\uff0c\u5982\u4f55\u5f62\u5f0f\u5316\u548c\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u3002", "method": "\u5b9a\u4e49\u548c\u5206\u6790\u4e86\u0141ukasiewicz\u903b\u8f91\u4e2d\u7684\u6eaf\u56e0\u95ee\u9898\uff0c\u5e76\u7814\u7a76\u4e86\u5176\u590d\u6742\u6027\uff0c\u5305\u62ec\u5b8c\u6574\u8bed\u8a00\u548c\u4ec5\u542b\u6790\u53d6\u5b50\u53e5\u7684\u60c5\u51b5\u3002", "result": "\u53d1\u73b0\u5728\u6790\u53d6\u5b50\u53e5\u7247\u6bb5\u4e2d\u6eaf\u56e0\u7684\u590d\u6742\u6027\u4f4e\u4e8e\u4e00\u822c\u60c5\u51b5\uff0c\u4e0e\u7ecf\u5178\u547d\u9898\u903b\u8f91\u4e0d\u540c\u3002", "conclusion": "\u0141ukasiewicz\u903b\u8f91\u4e2d\u7684\u6eaf\u56e0\u95ee\u9898\u5728\u6790\u53d6\u5b50\u53e5\u7247\u6bb5\u4e2d\u5177\u6709\u8f83\u4f4e\u7684\u590d\u6742\u6027\uff0c\u4e3a\u6a21\u7cca\u903b\u8f91\u7684\u5e94\u7528\u63d0\u4f9b\u4e86\u7406\u8bba\u652f\u6301\u3002"}}
{"id": "2507.13661", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.13661", "abs": "https://arxiv.org/abs/2507.13661", "authors": ["Changwen Li", "Joseph Sifakis", "Rongjie Yan", "Jian Zhang"], "title": "Testing Autonomous Driving Systems -- What Really Matters and What Doesn't", "comment": null, "summary": "Despite extensive research, the testing of autonomous driving systems (ADS)\nlandscape remains fragmented, and there is currently no basis for an informed\ntechnical assessment of the importance and contribution of the current state of\nthe art. This paper attempts to address this problem by exploring two\ncomplementary aspects.\n  First, it proposes a framework for comparing existing test methods in terms\nof their intrinsic effectiveness and validity. It shows that many methods do\nnot meet both of these requirements. Either because they are based on criteria\nthat do not allow for rapid, inexpensive, and comprehensive detection of\nfailures, or because the degree of validity of the properties tested cannot be\naccurately estimated. In particular, it is shown that most critical test\nmethods do not take into account the nominal operational capabilities of\nautopilots and generate scenarios that are impossible for the tested vehicles\nto handle, resulting in unjustified rejections.\n  Secondly, the paper shows that test effectiveness and validity are highly\ndependent on how autopilots are designed: how they choose between different\ncontrol policies to perform maneuvers, as well as on the reproducibility of the\nresults. In fact, most test methods take for granted two principles underlying\ntraditional methods, but do not generally apply to ADS. We maintain that the\nabsence of rationality and determinacy significantly impairs the effectiveness\nand validity of test methods, and provide test results on eight open\nautopilots, in which most do not satisfy these properties, thereby illustrating\nthis fact.\n  We conclude that under the current state of the art, it is impossible to\nobtain strong enough guarantees for essential autopilot properties and\nrecommend that autopilots be developed with a view to both rationality and\ndeterminacy.", "AI": {"tldr": "\u672c\u6587\u63a2\u8ba8\u4e86\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\uff08ADS\uff09\u6d4b\u8bd5\u65b9\u6cd5\u7684\u6709\u6548\u6027\u548c\u6709\u6548\u6027\uff0c\u6307\u51fa\u5f53\u524d\u65b9\u6cd5\u5b58\u5728\u4e0d\u8db3\uff0c\u5e76\u63d0\u51fa\u4e86\u6539\u8fdb\u65b9\u5411\u3002", "motivation": "\u5f53\u524d\u81ea\u52a8\u9a7e\u9a76\u7cfb\u7edf\u7684\u6d4b\u8bd5\u65b9\u6cd5\u7f3a\u4e4f\u7edf\u4e00\u6807\u51c6\uff0c\u65e0\u6cd5\u6709\u6548\u8bc4\u4f30\u5176\u6027\u80fd\u548c\u8d21\u732e\uff0c\u4e9f\u9700\u6539\u8fdb\u3002", "method": "\u63d0\u51fa\u4e00\u4e2a\u6bd4\u8f83\u6d4b\u8bd5\u65b9\u6cd5\u7684\u6846\u67b6\uff0c\u5206\u6790\u5176\u6709\u6548\u6027\u548c\u6709\u6548\u6027\uff0c\u5e76\u7814\u7a76\u6d4b\u8bd5\u7ed3\u679c\u4e0e\u81ea\u52a8\u9a7e\u9a76\u8bbe\u8ba1\u7684\u5173\u7cfb\u3002", "result": "\u53d1\u73b0\u591a\u6570\u6d4b\u8bd5\u65b9\u6cd5\u672a\u80fd\u6ee1\u8db3\u6709\u6548\u6027\u548c\u6709\u6548\u6027\u8981\u6c42\uff0c\u4e14\u6d4b\u8bd5\u7ed3\u679c\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u81ea\u52a8\u9a7e\u9a76\u7684\u8bbe\u8ba1\u539f\u5219\u3002", "conclusion": "\u5efa\u8bae\u81ea\u52a8\u9a7e\u9a76\u5f00\u53d1\u9700\u6ce8\u91cd\u7406\u6027\u548c\u786e\u5b9a\u6027\uff0c\u4ee5\u63d0\u5347\u6d4b\u8bd5\u65b9\u6cd5\u7684\u6709\u6548\u6027\u548c\u6709\u6548\u6027\u3002"}}
{"id": "2507.13533", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2507.13533", "abs": "https://arxiv.org/abs/2507.13533", "authors": ["Priyam Gupta"], "title": "Increasing the Expressiveness of a Gradual Verifier", "comment": "Presented at the 52nd ACM SIGPLAN Symposium on Principles of\n  Programming Languages (POPL 2025) Student Research Competition", "summary": "Static verification provides strong correctness guarantees for code; however,\nfully specifying programs for static verification is a complex, burdensome\nprocess for users. Gradual verification was introduced to make this process\neasier by supporting the verification of partially specified programs. The only\ncurrently working gradual verifier, Gradual C0, successfully verifies heap\nmanipulating programs, but lacks expressiveness in its specification language.\nThis paper describes the design and implementation of an extension to Gradual\nC0 that supports unfolding expressions, which allow more intuitive\nspecifications of recursive heap data structures.", "AI": {"tldr": "\u672c\u6587\u6269\u5c55\u4e86Gradual C0\u7684\u89c4\u8303\u8bed\u8a00\uff0c\u652f\u6301\u5c55\u5f00\u8868\u8fbe\u5f0f\uff0c\u4ee5\u66f4\u76f4\u89c2\u5730\u63cf\u8ff0\u9012\u5f52\u5806\u6570\u636e\u7ed3\u6784\u3002", "motivation": "\u9759\u6001\u9a8c\u8bc1\u867d\u7136\u80fd\u63d0\u4f9b\u5f3a\u6b63\u786e\u6027\u4fdd\u8bc1\uff0c\u4f46\u5b8c\u5168\u89c4\u8303\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u590d\u6742\u4e14\u7e41\u7410\u3002\u9010\u6b65\u9a8c\u8bc1\u65e8\u5728\u7b80\u5316\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u4f46\u73b0\u6709\u5de5\u5177Gradual C0\u7684\u8868\u8fbe\u80fd\u529b\u6709\u9650\u3002", "method": "\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e86\u5bf9Gradual C0\u7684\u6269\u5c55\uff0c\u652f\u6301\u5c55\u5f00\u8868\u8fbe\u5f0f\u3002", "result": "\u6269\u5c55\u540e\u7684Gradual C0\u80fd\u591f\u66f4\u76f4\u89c2\u5730\u9a8c\u8bc1\u9012\u5f52\u5806\u6570\u636e\u7ed3\u6784\u7684\u7a0b\u5e8f\u3002", "conclusion": "\u901a\u8fc7\u652f\u6301\u5c55\u5f00\u8868\u8fbe\u5f0f\uff0c\u63d0\u9ad8\u4e86\u9010\u6b65\u9a8c\u8bc1\u5de5\u5177\u7684\u5b9e\u7528\u6027\u548c\u8868\u8fbe\u80fd\u529b\u3002"}}
{"id": "2507.13895", "categories": ["cs.LO", "cs.DC"], "pdf": "https://arxiv.org/pdf/2507.13895", "abs": "https://arxiv.org/abs/2507.13895", "authors": ["Damiano Azzolini", "Marco Duca", "Stefano Forti", "Francesco Gallo", "Antonio Ielo"], "title": "Application Placement with Constraint Relaxation", "comment": null, "summary": "Novel utility computing paradigms rely upon the deployment of multi-service\napplications to pervasive and highly distributed cloud-edge infrastructure\nresources. Deciding onto which computational nodes to place services in\ncloud-edge networks, as per their functional and non-functional constraints,\ncan be formulated as a combinatorial optimisation problem. Most existing\nsolutions in this space are not able to deal with \\emph{unsatisfiable} problem\ninstances, nor preferences, i.e. requirements that DevOps may agree to relax to\nobtain a solution. In this article, we exploit Answer Set Programming\noptimisation capabilities to tackle this problem. Experimental results in\nsimulated settings show that our approach is effective on lifelike networks and\napplications.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u7b54\u6848\u96c6\u7f16\u7a0b\uff08ASP\uff09\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u89e3\u51b3\u4e91\u8fb9\u7f51\u7edc\u4e2d\u670d\u52a1\u653e\u7f6e\u7684\u7ec4\u5408\u4f18\u5316\u95ee\u9898\uff0c\u80fd\u591f\u5904\u7406\u4e0d\u53ef\u6ee1\u8db3\u7684\u95ee\u9898\u5b9e\u4f8b\u548c\u504f\u597d\u9700\u6c42\u3002", "motivation": "\u73b0\u6709\u7684\u89e3\u51b3\u65b9\u6848\u96be\u4ee5\u5904\u7406\u4e0d\u53ef\u6ee1\u8db3\u7684\u95ee\u9898\u5b9e\u4f8b\u548c\u504f\u597d\u9700\u6c42\uff08\u5373\u53ef\u653e\u5bbd\u7684\u8981\u6c42\uff09\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u66f4\u7075\u6d3b\u7684\u65b9\u6cd5\u3002", "method": "\u5229\u7528\u7b54\u6848\u96c6\u7f16\u7a0b\uff08ASP\uff09\u7684\u4f18\u5316\u80fd\u529b\u6765\u89e3\u51b3\u670d\u52a1\u653e\u7f6e\u95ee\u9898\u3002", "result": "\u5728\u6a21\u62df\u73af\u5883\u4e2d\uff0c\u8be5\u65b9\u6cd5\u5728\u771f\u5b9e\u7f51\u7edc\u548c\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8868\u73b0\u51fa\u6709\u6548\u6027\u3002", "conclusion": "ASP\u65b9\u6cd5\u4e3a\u89e3\u51b3\u4e91\u8fb9\u7f51\u7edc\u4e2d\u7684\u670d\u52a1\u653e\u7f6e\u95ee\u9898\u63d0\u4f9b\u4e86\u4e00\u79cd\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u5904\u7406\u590d\u6742\u7ea6\u675f\u548c\u504f\u597d\u9700\u6c42\u3002"}}
{"id": "2507.13774", "categories": ["cs.PL", "cs.LO", "D.3.1; F.3.2; F.4.1"], "pdf": "https://arxiv.org/pdf/2507.13774", "abs": "https://arxiv.org/abs/2507.13774", "authors": ["Arthur Adjedj", "Meven Lennon-Bertrand", "Thibaut Benjamin", "Kenji Maillard"], "title": "AdapTT: Functoriality for Dependent Type Casts", "comment": null, "summary": "The ability to cast values between related types is a leitmotiv of many\nflavors of dependent type theory, such as observational type theories,\nsubtyping, or cast calculi for gradual typing. These casts all exhibit a common\nstructural behavior that boils down to the pervasive functoriality of type\nformers. We propose and extensively study a type theory, called AdapTT, which\nmakes systematic and precise this idea of functorial type formers, with respect\nto an abstract notion of adapters relating types. Leveraging descriptions for\nfunctorial inductive types in AdapTT, we derive structural laws for type casts\non general inductive type formers.", "AI": {"tldr": "AdapTT\u662f\u4e00\u79cd\u7c7b\u578b\u7406\u8bba\uff0c\u901a\u8fc7\u62bd\u8c61\u9002\u914d\u5668\u5173\u7cfb\u7cfb\u7edf\u5730\u7814\u7a76\u7c7b\u578b\u6784\u9020\u5668\u7684\u51fd\u5b50\u6027\uff0c\u5e76\u63a8\u5bfc\u51fa\u901a\u7528\u5f52\u7eb3\u7c7b\u578b\u6784\u9020\u5668\u7684\u7c7b\u578b\u8f6c\u6362\u7ed3\u6784\u89c4\u5f8b\u3002", "motivation": "\u7814\u7a76\u76f8\u5173\u7c7b\u578b\u95f4\u503c\u8f6c\u6362\u7684\u5171\u6027\u884c\u4e3a\uff0c\u7279\u522b\u662f\u7c7b\u578b\u6784\u9020\u5668\u7684\u51fd\u5b50\u6027\u3002", "method": "\u63d0\u51faAdapTT\u7c7b\u578b\u7406\u8bba\uff0c\u5229\u7528\u62bd\u8c61\u9002\u914d\u5668\u5173\u7cfb\u63cf\u8ff0\u51fd\u5b50\u6027\u7c7b\u578b\u6784\u9020\u5668\uff0c\u5e76\u63a8\u5bfc\u901a\u7528\u5f52\u7eb3\u7c7b\u578b\u7684\u8f6c\u6362\u89c4\u5f8b\u3002", "result": "\u6210\u529f\u5efa\u7acb\u4e86\u57fa\u4e8e\u9002\u914d\u5668\u7684\u7c7b\u578b\u8f6c\u6362\u7ed3\u6784\u89c4\u5f8b\uff0c\u9002\u7528\u4e8e\u901a\u7528\u5f52\u7eb3\u7c7b\u578b\u6784\u9020\u5668\u3002", "conclusion": "AdapTT\u4e3a\u7c7b\u578b\u8f6c\u6362\u63d0\u4f9b\u4e86\u4e00\u79cd\u7cfb\u7edf\u5316\u7684\u7406\u8bba\u57fa\u7840\uff0c\u6269\u5c55\u4e86\u7c7b\u578b\u7406\u8bba\u7684\u5e94\u7528\u8303\u56f4\u3002"}}
{"id": "2507.13946", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2507.13946", "abs": "https://arxiv.org/abs/2507.13946", "authors": ["Tadeusz Litak", "Katsuhiko Sano"], "title": "Bounded Inquisitive Logics: Sequent Calculi and Schematic Validity", "comment": "This is a modified and expanded version of a paper accepted for\n  TABLEAUX 2025. In particular, readers should note that the numeration of\n  environments is different in the conference version", "summary": "Propositional inquisitive logic is the limit of its $n$-bounded\napproximations. In the predicate setting, however, this does not hold anymore,\nas discovered by Ciardelli and Grilletti, who also found complete\naxiomatizations of $n$-bounded inquisitive logics $\\mathsf{InqBQ}_{n}$, for\nevery fixed $n$. We introduce cut-free labelled sequent calculi for these\nlogics. We illustrate the intricacies of \\textit{schematic validity} in such\nsystems by showing that the well-known Casari formula is \\textit{atomically}\nvalid in (a weak sublogic of) predicate inquisitive logic $\\mathsf{InqBQ}$,\nfails to be schematically valid in it, and yet is schematically valid under the\nfinite boundedness assumption. The derivations in our calculi, however, are\nguaranteed to be schematically valid whenever a single specific rule is not\nused.", "AI": {"tldr": "\u547d\u9898\u63a2\u7a76\u903b\u8f91\u662f\u5176$n$-\u6709\u754c\u903c\u8fd1\u7684\u6781\u9650\uff0c\u4f46\u5728\u8c13\u8bcd\u903b\u8f91\u4e2d\u4e0d\u6210\u7acb\u3002\u4f5c\u8005\u5f15\u5165\u65e0\u5207\u5272\u6807\u8bb0\u5e8f\u5217\u6f14\u7b97\uff0c\u63a2\u8ba8\u4e86\u6a21\u5f0f\u6709\u6548\u6027\u7684\u590d\u6742\u6027\u3002", "motivation": "\u7814\u7a76\u8c13\u8bcd\u63a2\u7a76\u903b\u8f91\u4e2d$n$-\u6709\u754c\u903c\u8fd1\u7684\u6781\u9650\u95ee\u9898\uff0c\u5e76\u5f00\u53d1\u76f8\u5e94\u7684\u6f14\u7b97\u7cfb\u7edf\u3002", "method": "\u5f15\u5165\u65e0\u5207\u5272\u6807\u8bb0\u5e8f\u5217\u6f14\u7b97\uff0c\u5206\u6790\u6a21\u5f0f\u6709\u6548\u6027\u5728\u7cfb\u7edf\u4e2d\u7684\u8868\u73b0\u3002", "result": "Casari\u516c\u5f0f\u5728\u5f31\u5b50\u903b\u8f91\u4e2d\u539f\u5b50\u6709\u6548\uff0c\u4f46\u5728\u6a21\u5f0f\u6709\u6548\u6027\u4e0b\u4e0d\u6210\u7acb\uff0c\u800c\u5728\u6709\u9650\u6709\u754c\u5047\u8bbe\u4e0b\u6210\u7acb\u3002", "conclusion": "\u7279\u5b9a\u89c4\u5219\u672a\u88ab\u4f7f\u7528\u65f6\uff0c\u6f14\u7b97\u4e2d\u7684\u63a8\u5bfc\u4fdd\u8bc1\u6a21\u5f0f\u6709\u6548\u6027\u3002"}}
{"id": "2507.13792", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2507.13792", "abs": "https://arxiv.org/abs/2507.13792", "authors": ["Riccardo Bianchini", "Francesco Dagnino", "Paola Giannini", "Elena Zucca"], "title": "Don't exhaust, don't waste", "comment": "Submitted to JFP (Journal of Functional Programming)", "summary": "We extend the semantics and type system of a lambda calculus equipped with\ncommon constructs to be resource-aware. That is, the semantics keep tracks of\nthe usage of resources, and is stuck, besides in case of type errors, if either\na needed resource is exhausted, or a provided resource would be wasted. In such\nway, the type system guarantees, besides standard soundness, that for\nwell-typed programs there is a computation where no resource gets either\nexhausted or wasted.\n  The no-waste extension is parametric on an arbitrary grade algebra, modeling\nan arbitrary assortment of possible usages, and does not require ad-hoc changes\nto the underlying language. To this end, the semantics needs to be formalized\nin big-step style; as a consequence, expressing and proving (resource-aware)\nsoundness is challenging, and is achieved by applying recent techniques based\non coinductive reasoning.", "AI": {"tldr": "\u6269\u5c55\u4e86\u5e26\u5e38\u89c1\u6784\u9020\u7684lambda\u6f14\u7b97\u7684\u8bed\u4e49\u548c\u7c7b\u578b\u7cfb\u7edf\uff0c\u4f7f\u5176\u5177\u5907\u8d44\u6e90\u611f\u77e5\u80fd\u529b\uff0c\u786e\u4fdd\u8d44\u6e90\u4e0d\u88ab\u8017\u5c3d\u6216\u6d6a\u8d39\u3002", "motivation": "\u4e3a\u7a0b\u5e8f\u63d0\u4f9b\u8d44\u6e90\u4f7f\u7528\u4fdd\u969c\uff0c\u907f\u514d\u8d44\u6e90\u8017\u5c3d\u6216\u6d6a\u8d39\u3002", "method": "\u57fa\u4e8e\u4efb\u610f\u7b49\u7ea7\u4ee3\u6570\u53c2\u6570\u5316\u6269\u5c55\u8bed\u4e49\uff0c\u91c7\u7528\u5927\u6b65\u8bed\u4e49\u5f62\u5f0f\u5316\uff0c\u5e76\u5229\u7528\u5171\u5f52\u7eb3\u63a8\u7406\u6280\u672f\u8bc1\u660e\u8d44\u6e90\u611f\u77e5\u7684\u5065\u5168\u6027\u3002", "result": "\u7c7b\u578b\u7cfb\u7edf\u4fdd\u8bc1\u826f\u597d\u7c7b\u578b\u7a0b\u5e8f\u5b58\u5728\u65e0\u8d44\u6e90\u8017\u5c3d\u6216\u6d6a\u8d39\u7684\u8ba1\u7b97\u8def\u5f84\u3002", "conclusion": "\u901a\u8fc7\u5171\u5f52\u7eb3\u63a8\u7406\u6210\u529f\u5b9e\u73b0\u4e86\u8d44\u6e90\u611f\u77e5\u7684\u8bed\u4e49\u548c\u7c7b\u578b\u7cfb\u7edf\u6269\u5c55\u3002"}}
{"id": "2507.13987", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2507.13987", "abs": "https://arxiv.org/abs/2507.13987", "authors": ["Simon Fl\u00fcgel", "Martin Glauer", "Till Mossakowski", "Fabian Neuhaus"], "title": "ChemLog: Making MSOL Viable for Ontological Classification and Learning", "comment": null, "summary": "Despite its prevalence, in many domains, OWL is not expressive enough to\ndefine ontology classes. In this paper, we present an approach that allows to\nuse monadic second-order formalisations for ontology classification. As a case\nstudy, we have applied our approach to 14 peptide-related classes from the\nchemistry ontology ChEBI. For these classes, a monadic second-order logic\nformalisation has been developed and applied both to ChEBI as well as to 119\nmillion molecules from the chemistry database PubChem. While this logical\napproach alone is limited to classification for the specified classes (in our\ncase, (sub)classes of peptides), transformer deep learning models scale\nclassification to the whole of the ChEBI ontology. We show that when using the\nclassifications obtained by the logical approach as training data, the\nperformance of the deep learning models can be significantly enhanced.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u4f7f\u7528\u5355\u5b50\u4e8c\u9636\u903b\u8f91\u5f62\u5f0f\u5316\u8fdb\u884c\u672c\u4f53\u5206\u7c7b\u7684\u65b9\u6cd5\uff0c\u5e76\u4ee5\u5316\u5b66\u672c\u4f53ChEBI\u4e2d\u7684\u80bd\u7c7b\u4e3a\u4f8b\u9a8c\u8bc1\u4e86\u5176\u6709\u6548\u6027\u3002\u7ed3\u5408\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u8be5\u65b9\u6cd5\u663e\u8457\u63d0\u5347\u4e86\u5206\u7c7b\u6027\u80fd\u3002", "motivation": "OWL\u5728\u8bb8\u591a\u9886\u57df\u4e2d\u4e0d\u8db3\u4ee5\u5b9a\u4e49\u672c\u4f53\u7c7b\uff0c\u56e0\u6b64\u9700\u8981\u66f4\u5f3a\u5927\u7684\u5f62\u5f0f\u5316\u65b9\u6cd5\u3002", "method": "\u91c7\u7528\u5355\u5b50\u4e8c\u9636\u903b\u8f91\u5f62\u5f0f\u5316\u65b9\u6cd5\uff0c\u5e94\u7528\u4e8eChEBI\u4e2d\u768414\u4e2a\u80bd\u7c7b\uff0c\u5e76\u7ed3\u5408\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u8fdb\u884c\u6269\u5c55\u5206\u7c7b\u3002", "result": "\u903b\u8f91\u65b9\u6cd5\u6709\u6548\u5206\u7c7b\u6307\u5b9a\u7c7b\uff0c\u800c\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u8fdb\u4e00\u6b65\u6269\u5c55\u5206\u7c7b\u8303\u56f4\u5e76\u663e\u8457\u63d0\u5347\u6027\u80fd\u3002", "conclusion": "\u7ed3\u5408\u903b\u8f91\u5f62\u5f0f\u5316\u548c\u6df1\u5ea6\u5b66\u4e60\u7684\u65b9\u6cd5\uff0c\u80fd\u591f\u663e\u8457\u63d0\u5347\u672c\u4f53\u5206\u7c7b\u7684\u6027\u80fd\u548c\u6269\u5c55\u6027\u3002"}}
