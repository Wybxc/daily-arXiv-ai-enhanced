{"id": "2509.13078", "categories": ["cs.FL"], "pdf": "https://arxiv.org/pdf/2509.13078", "abs": "https://arxiv.org/abs/2509.13078", "authors": ["Daichi Aiba", "Masaki Waga", "Hiroya Fujinami", "Koko Muroya", "Shutaro Ouchi", "Naoki Ueda", "Yosuke Yokoyama", "Yuta Wada", "Ichiro Hasuo"], "title": "A Variety of Request-Response Specifications", "comment": "ICTAC 2025", "summary": "We find, motivated by real-world applications, that the well-known\nrequest-response specification comes with multiple variations, and that these\nvariations should be distinguished. As the first main contribution, we\nintroduce a classification of those variations into six types, and present it\nas a decision tree, where a user is led to the type that is suited for their\napplication by answering a couple of questions. Our second main contribution is\nthe formalization of those six types in various formalisms such as temporal\nlogics, grammars, and automata; here, two types out of the six are non-regular\nspecifications and their formalization requires extended formalisms. We also\nsurvey tools for monitoring these specifications to cater for practitioners'\nneeds.", "AI": {"tldr": "\u672c\u6587\u5bf9\u8bf7\u6c42-\u54cd\u5e94\u89c4\u8303\u7684\u516d\u79cd\u53d8\u4f53\u8fdb\u884c\u4e86\u5206\u7c7b\u548c\u5f62\u5f0f\u5316\uff0c\u5e76\u63d0\u4f9b\u4e86\u76d1\u63a7\u5de5\u5177\u8c03\u67e5", "motivation": "\u57fa\u4e8e\u5b9e\u9645\u5e94\u7528\u9700\u6c42\uff0c\u53d1\u73b0\u8bf7\u6c42-\u54cd\u5e94\u89c4\u8303\u5b58\u5728\u591a\u79cd\u9700\u8981\u533a\u5206\u7684\u53d8\u4f53", "method": "1) \u5c06\u53d8\u4f53\u5206\u7c7b\u4e3a\u516d\u79cd\u7c7b\u578b\u5e76\u7528\u51b3\u7b56\u6811\u5f15\u5bfc\u7528\u6237\u9009\u62e9\uff1b2) \u7528\u65f6\u5e8f\u903b\u8f91\u3001\u8bed\u6cd5\u548c\u81ea\u52a8\u673a\u7b49\u5f62\u5f0f\u5316\u65b9\u6cd5\u5bf9\u516d\u79cd\u7c7b\u578b\u8fdb\u884c\u5f62\u5f0f\u5316\uff1b3) \u8c03\u67e5\u76f8\u5173\u76d1\u63a7\u5de5\u5177", "result": "\u5efa\u7acb\u4e86\u5b8c\u6574\u7684\u8bf7\u6c42-\u54cd\u5e94\u89c4\u8303\u5206\u7c7b\u4f53\u7cfb\uff0c\u5176\u4e2d\u4e24\u79cd\u7c7b\u578b\u662f\u975e\u6b63\u5219\u89c4\u8303\uff0c\u9700\u8981\u6269\u5c55\u7684\u5f62\u5f0f\u5316\u65b9\u6cd5", "conclusion": "\u63d0\u51fa\u4e86\u7cfb\u7edf\u5316\u7684\u8bf7\u6c42-\u54cd\u5e94\u89c4\u8303\u5206\u7c7b\u548c\u5f62\u5f0f\u5316\u6846\u67b6\uff0c\u4e3a\u5b9e\u8df5\u8005\u63d0\u4f9b\u4e86\u5b9e\u7528\u7684\u6307\u5bfc\u5de5\u5177"}}
{"id": "2509.12337", "categories": ["cs.LO", "cs.FL", "math.LO", "03D10, 03B35 (Primary) 68Q05, 68Q45 (Secondary)", "F.1.1; F.4.1; I.2.3; D.2.4; F.4.3"], "pdf": "https://arxiv.org/pdf/2509.12337", "abs": "https://arxiv.org/abs/2509.12337", "authors": ["The bbchallenge Collaboration", "Justin Blanchard", "Daniel Briggs", "Konrad Deka", "Nathan Fenner", "Yannick Forster", "Georgi Georgiev", "Matthew L. House", "Rachel Hunter", "Iijil", "Maja K\u0105dzio\u0142ka", "Pavel Kropitz", "Shawn Ligocki", "mxdys", "Mateusz Na\u015bciszewski", "savask", "Tristan St\u00e9rin", "Chris Xu", "Jason Yuen", "Th\u00e9o Zimmermann"], "title": "Determination of the fifth Busy Beaver value", "comment": "48 pages, 17 figures", "summary": "We prove that $S(5) = 47,176,870$ using the Coq proof assistant. The Busy\nBeaver value $S(n)$ is the maximum number of steps that an $n$-state 2-symbol\nTuring machine can perform from the all-zero tape before halting, and $S$ was\nhistorically introduced by Tibor Rad\\'o in 1962 as one of the simplest examples\nof an uncomputable function. The proof enumerates $181,385,789$ Turing machines\nwith 5 states and, for each machine, decides whether it halts or not. Our\nresult marks the first determination of a new Busy Beaver value in over 40\nyears and the first Busy Beaver value ever to be formally verified, attesting\nto the effectiveness of massively collaborative online research\n(bbchallenge$.$org).", "AI": {"tldr": "\u4f7f\u7528Coq\u8bc1\u660e\u52a9\u624b\u9a8c\u8bc1\u4e86S(5)=47,176,870\uff0c\u8fd9\u662f40\u591a\u5e74\u6765\u9996\u6b21\u786e\u5b9a\u65b0\u7684Busy Beaver\u503c\uff0c\u4e5f\u662f\u9996\u4e2a\u7ecf\u8fc7\u5f62\u5f0f\u5316\u9a8c\u8bc1\u7684Busy Beaver\u503c", "motivation": "Busy Beaver\u51fd\u6570S(n)\u662f\u56fe\u7075\u673a\u7406\u8bba\u4e2d\u6700\u7b80\u5355\u7684\u4e0d\u53ef\u8ba1\u7b97\u51fd\u6570\u4e4b\u4e00\uff0c\u81ea1962\u5e74\u63d0\u51fa\u4ee5\u6765\uff0cS(5)\u7684\u786e\u5207\u503c\u4e00\u76f4\u662f\u672a\u89e3\u95ee\u9898", "method": "\u679a\u4e3e\u4e86181,385,789\u4e2a5\u72b6\u6001\u56fe\u7075\u673a\uff0c\u5bf9\u6bcf\u4e2a\u673a\u5668\u5224\u65ad\u5176\u662f\u5426\u505c\u673a\uff0c\u4f7f\u7528Coq\u8bc1\u660e\u52a9\u624b\u8fdb\u884c\u5f62\u5f0f\u5316\u9a8c\u8bc1", "result": "\u6210\u529f\u786e\u5b9a\u4e86S(5)=47,176,870\uff0c\u8fd9\u662f\u9996\u4e2a\u7ecf\u8fc7\u5f62\u5f0f\u5316\u9a8c\u8bc1\u7684Busy Beaver\u503c", "conclusion": "\u8fd9\u9879\u5de5\u4f5c\u8bc1\u660e\u4e86\u5927\u89c4\u6a21\u5728\u7ebf\u534f\u4f5c\u7814\u7a76\uff08bbchallenge.org\uff09\u7684\u6709\u6548\u6027\uff0c\u4e3a\u4e0d\u53ef\u8ba1\u7b97\u51fd\u6570\u7684\u7814\u7a76\u63d0\u4f9b\u4e86\u65b0\u7684\u9a8c\u8bc1\u65b9\u6cd5"}}
{"id": "2509.12593", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2509.12593", "abs": "https://arxiv.org/abs/2509.12593", "authors": ["Yimin Zhang", "Mario de Sousa"], "title": "Converting IEC 61131-3 LD into SFC Using Large Language Model: Dataset and Testing", "comment": null, "summary": "In the domain of Programmable Logic Controller (PLC) programming, converting\na Ladder Diagram (LD) into a Sequential Function Chart (SFC) is an inherently\nchallenging problem, primarily due to the lack of domain-specific knowledge and\nthe issue of state explosion in existing algorithms. However, the rapid\ndevelopment of Artificial Intelligence (AI) - especially Large Language Model\n(LLM) - offers a promising new approach.\n  Despite this potential, data-driven approaches in this field have been\nhindered by a lack of suitable datasets. To address this gap, we constructed\nseveral datasets consisting of paired textual representations of SFC and LD\nprograms that conform to the IEC 61131-3 standard.\n  Based on these datasets, we explored the feasibility of automating the LD-SFC\nconversion using LLM. Our preliminary experiments show that a fine-tuned LLM\nmodel achieves up to 91% accuracy on certain dataset, with the lowest observed\naccuracy being 79%, suggesting that with proper training and representation,\nLLMs can effectively support LD-SFC conversion. These early results highlight\nthe viability and future potential of this approach.", "AI": {"tldr": "\u672c\u6587\u7814\u7a76\u4e86\u4f7f\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b(LLM)\u5c06\u68af\u5f62\u56fe(LD)\u8f6c\u6362\u4e3a\u987a\u5e8f\u529f\u80fd\u56fe(SFC)\u7684\u53ef\u884c\u6027\uff0c\u901a\u8fc7\u6784\u5efa\u7b26\u5408IEC 61131-3\u6807\u51c6\u7684\u6570\u636e\u96c6\u5e76\u8fdb\u884c\u5fae\u8c03\u5b9e\u9a8c\uff0c\u53d6\u5f97\u4e86\u6700\u9ad891%\u7684\u51c6\u786e\u7387\u3002", "motivation": "PLC\u7f16\u7a0b\u9886\u57df\u4e2dLD\u5230SFC\u7684\u8f6c\u6362\u5b58\u5728\u6311\u6218\uff0c\u4f20\u7edf\u65b9\u6cd5\u7f3a\u4e4f\u9886\u57df\u77e5\u8bc6\u4e14\u9762\u4e34\u72b6\u6001\u7206\u70b8\u95ee\u9898\uff0c\u800cAI\u7279\u522b\u662fLLM\u7684\u53d1\u5c55\u4e3a\u6b64\u63d0\u4f9b\u4e86\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u673a\u4f1a\u3002", "method": "\u6784\u5efa\u4e86\u591a\u4e2a\u7b26\u5408IEC 61131-3\u6807\u51c6\u7684SFC\u548cLD\u7a0b\u5e8f\u6587\u672c\u8868\u793a\u914d\u5bf9\u6570\u636e\u96c6\uff0c\u5e76\u57fa\u4e8e\u8fd9\u4e9b\u6570\u636e\u96c6\u5bf9LLM\u8fdb\u884c\u5fae\u8c03\uff0c\u63a2\u7d22\u81ea\u52a8\u5316LD-SFC\u8f6c\u6362\u7684\u53ef\u884c\u6027\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u663e\u793a\uff0c\u7ecf\u8fc7\u5fae\u8c03\u7684LLM\u6a21\u578b\u5728\u7279\u5b9a\u6570\u636e\u96c6\u4e0a\u8fbe\u5230\u6700\u9ad891%\u7684\u51c6\u786e\u7387\uff0c\u6700\u4f4e\u51c6\u786e\u7387\u4e3a79%\uff0c\u8868\u660eLLM\u80fd\u591f\u6709\u6548\u652f\u6301LD-SFC\u8f6c\u6362\u3002", "conclusion": "\u7814\u7a76\u8868\u660e\uff0c\u901a\u8fc7\u9002\u5f53\u7684\u8bad\u7ec3\u548c\u8868\u793a\u65b9\u6cd5\uff0cLLM\u5728LD-SFC\u8f6c\u6362\u4efb\u52a1\u4e2d\u5177\u6709\u53ef\u884c\u6027\u548c\u672a\u6765\u6f5c\u529b\uff0c\u4e3aPLC\u7f16\u7a0b\u81ea\u52a8\u5316\u63d0\u4f9b\u4e86\u65b0\u7684\u6280\u672f\u8def\u5f84\u3002"}}
{"id": "2509.12395", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.12395", "abs": "https://arxiv.org/abs/2509.12395", "authors": ["Yash Mundhra", "Max Valk", "Maliheh Izadi"], "title": "Evaluating Large Language Models for Functional and Maintainable Code in Industrial Settings: A Case Study at ASML", "comment": "Accepted in the 40th IEEE/ACM International Conference on Automated\n  Software Engineering, ASE 2025 (Industry track)", "summary": "Large language models have shown impressive performance in various domains,\nincluding code generation across diverse open-source domains. However, their\napplicability in proprietary industrial settings, where domain-specific\nconstraints and code interdependencies are prevalent, remains largely\nunexplored. We present a case study conducted in collaboration with the\nleveling department at ASML to investigate the performance of LLMs in\ngenerating functional, maintainable code within a closed, highly specialized\nsoftware environment.\n  We developed an evaluation framework tailored to ASML's proprietary codebase\nand introduced a new benchmark. Additionally, we proposed a new evaluation\nmetric, build@k, to assess whether LLM-generated code successfully compiles and\nintegrates within real industrial repositories. We investigate various\nprompting techniques, compare the performance of generic and code-specific\nLLMs, and examine the impact of model size on code generation capabilities,\nusing both match-based and execution-based metrics. The findings reveal that\nprompting techniques and model size have a significant impact on output\nquality, with few-shot and chain-of-thought prompting yielding the highest\nbuild success rates. The difference in performance between the code-specific\nLLMs and generic LLMs was less pronounced and varied substantially across\ndifferent model families.", "AI": {"tldr": "\u672c\u7814\u7a76\u63a2\u8ba8\u4e86\u5927\u578b\u8bed\u8a00\u6a21\u578b\u5728\u5de5\u4e1a\u4e13\u6709\u4ee3\u7801\u73af\u5883\u4e2d\u7684\u4ee3\u7801\u751f\u6210\u6027\u80fd\uff0c\u5f00\u53d1\u4e86\u9488\u5bf9ASML\u4e13\u6709\u4ee3\u7801\u5e93\u7684\u8bc4\u4f30\u6846\u67b6\u548c\u65b0\u57fa\u51c6\uff0c\u63d0\u51fa\u4e86build@k\u8bc4\u4f30\u6307\u6807\uff0c\u53d1\u73b0\u63d0\u793a\u6280\u672f\u548c\u6a21\u578b\u5927\u5c0f\u5bf9\u8f93\u51fa\u8d28\u91cf\u6709\u663e\u8457\u5f71\u54cd\u3002", "motivation": "\u5927\u578b\u8bed\u8a00\u6a21\u578b\u5728\u5f00\u6e90\u9886\u57df\u7684\u4ee3\u7801\u751f\u6210\u8868\u73b0\u51fa\u8272\uff0c\u4f46\u5728\u5de5\u4e1a\u4e13\u6709\u73af\u5883\u4e2d\uff0c\u7531\u4e8e\u9886\u57df\u7279\u5b9a\u7ea6\u675f\u548c\u4ee3\u7801\u76f8\u4e92\u4f9d\u8d56\u6027\u7684\u5b58\u5728\uff0c\u5176\u9002\u7528\u6027\u5c1a\u672a\u5f97\u5230\u5145\u5206\u63a2\u7d22\u3002", "method": "\u4e0eASML\u5408\u4f5c\u8fdb\u884c\u6848\u4f8b\u7814\u7a76\uff0c\u5f00\u53d1\u5b9a\u5236\u8bc4\u4f30\u6846\u67b6\u548c\u65b0\u57fa\u51c6\uff0c\u63d0\u51fabuild@k\u7f16\u8bd1\u96c6\u6210\u8bc4\u4f30\u6307\u6807\uff0c\u6bd4\u8f83\u4e0d\u540c\u63d0\u793a\u6280\u672f\u3001\u901a\u7528\u4e0e\u4ee3\u7801\u4e13\u7528LLMs\u7684\u6027\u80fd\uff0c\u5206\u6790\u6a21\u578b\u5927\u5c0f\u7684\u5f71\u54cd\u3002", "result": "\u63d0\u793a\u6280\u672f\u548c\u6a21\u578b\u5927\u5c0f\u5bf9\u8f93\u51fa\u8d28\u91cf\u6709\u663e\u8457\u5f71\u54cd\uff0cfew-shot\u548cchain-of-thought\u63d0\u793a\u6280\u672f\u83b7\u5f97\u6700\u9ad8\u6784\u5efa\u6210\u529f\u7387\uff0c\u4ee3\u7801\u4e13\u7528LLMs\u4e0e\u901a\u7528LLMs\u7684\u6027\u80fd\u5dee\u5f02\u8f83\u5c0f\u4e14\u56e0\u6a21\u578b\u5bb6\u65cf\u800c\u5f02\u3002", "conclusion": "LLMs\u5728\u5de5\u4e1a\u4e13\u6709\u4ee3\u7801\u73af\u5883\u4e2d\u5177\u6709\u5e94\u7528\u6f5c\u529b\uff0c\u4f46\u9700\u8981\u9488\u5bf9\u6027\u7684\u8bc4\u4f30\u6846\u67b6\u548c\u4f18\u5316\u6280\u672f\u6765\u786e\u4fdd\u751f\u6210\u7684\u4ee3\u7801\u80fd\u591f\u6210\u529f\u7f16\u8bd1\u548c\u96c6\u6210\u3002"}}
{"id": "2509.13006", "categories": ["cs.PL", "cs.MS", "math.OC", "90C05, 90c06, 90c10", "D.3.4; G.4"], "pdf": "https://arxiv.org/pdf/2509.13006", "abs": "https://arxiv.org/abs/2509.13006", "authors": ["Shermin Khosravi", "David Bremner"], "title": "Efficient Compilation of Algorithms into Compact Linear Programs", "comment": "Preliminary version will appear in CASCON 2025", "summary": "Linear Programming (LP) is widely applied in industry and is a key component\nof various other mathematical problem-solving techniques. Recent work\nintroduced an LP compiler translating polynomial-time, polynomial-space\nalgorithms into polynomial-size LPs using intuitive high-level programming\nlanguages, offering a promising alternative to manually specifying each set of\nconstraints through Algebraic Modeling Languages (AMLs). However, the resulting\nLPs, while polynomial in size, are often extremely large, posing challenges for\nexisting LP solvers. In this paper, we propose a novel approach for generating\nsubstantially smaller LPs from algorithms. Our goal is to establish\nminimum-size compact LP formulations for problems in P having natural\nformulations with exponential extension complexities. Our broader vision is to\nenable the systematic generation of Compact Integer Programming (CIP)\nformulations for problems with exponential-size IPs having polynomial-time\nseparation oracles. To this end, we introduce a hierarchical linear pipelining\ntechnique that decomposes nested program structures into synchronized regions\nwith well-defined execution transitions -- functions of compile-time\nparameters. This decomposition allows us to localize LP constraints and\nvariables within each region, significantly reducing LP size without the loss\nof generality, ensuring the resulting LP remains valid for all inputs of size\n$n$. We demonstrate the effectiveness of our method on two benchmark problems\n-- the makespan problem, which has exponential extension complexity, and the\nweighted minimum spanning tree problem -- both of which have exponential-size\nnatural LPs. Our results show up to a $25$-fold reduction in LP size and\nsubstantial improvements in solver performance across both commercial and\nnon-commercial LP solvers.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u9896\u7684\u5206\u5c42\u7ebf\u6027\u6d41\u6c34\u7ebf\u6280\u672f\uff0c\u901a\u8fc7\u5c06\u5d4c\u5957\u7a0b\u5e8f\u7ed3\u6784\u5206\u89e3\u4e3a\u540c\u6b65\u533a\u57df\u6765\u751f\u6210\u66f4\u5c0f\u7684\u7ebf\u6027\u89c4\u5212(LP)\u516c\u5f0f\uff0c\u76f8\u6bd4\u4f20\u7edf\u65b9\u6cd5\u53ef\u51cf\u5c1125\u500d\u7684LP\u89c4\u6a21\u5e76\u663e\u8457\u63d0\u5347\u6c42\u89e3\u5668\u6027\u80fd\u3002", "motivation": "\u73b0\u6709LP\u7f16\u8bd1\u5668\u751f\u6210\u7684\u7ebf\u6027\u89c4\u5212\u867d\u7136\u591a\u9879\u5f0f\u89c4\u6a21\u4f46\u5f80\u5f80\u6781\u5176\u5e9e\u5927\uff0c\u7ed9\u73b0\u6709\u6c42\u89e3\u5668\u5e26\u6765\u6311\u6218\u3002\u9700\u8981\u4e3a\u5177\u6709\u6307\u6570\u6269\u5c55\u590d\u6742\u5ea6\u7684\u95ee\u9898\u5efa\u7acb\u6700\u5c0f\u5c3a\u5bf8\u7684\u7d27\u51d1LP\u516c\u5f0f\u3002", "method": "\u5f15\u5165\u5206\u5c42\u7ebf\u6027\u6d41\u6c34\u7ebf\u6280\u672f\uff0c\u5c06\u5d4c\u5957\u7a0b\u5e8f\u7ed3\u6784\u5206\u89e3\u4e3a\u5177\u6709\u660e\u786e\u5b9a\u4e49\u6267\u884c\u8f6c\u6362\u7684\u540c\u6b65\u533a\u57df\uff0c\u4f7fLP\u7ea6\u675f\u548c\u53d8\u91cf\u5728\u6bcf\u4e2a\u533a\u57df\u5185\u5c40\u90e8\u5316\uff0c\u4ece\u800c\u663e\u8457\u51cf\u5c11LP\u89c4\u6a21\u3002", "result": "\u5728\u4e24\u4e2a\u57fa\u51c6\u95ee\u9898(\u6700\u5927\u5b8c\u5de5\u65f6\u95f4\u95ee\u9898\u548c\u52a0\u6743\u6700\u5c0f\u751f\u6210\u6811\u95ee\u9898)\u4e0a\u5b9e\u73b0\u4e86\u9ad8\u8fbe25\u500d\u7684LP\u89c4\u6a21\u7f29\u51cf\uff0c\u5e76\u5728\u5546\u4e1a\u548c\u975e\u5546\u4e1aLP\u6c42\u89e3\u5668\u4e0a\u90fd\u83b7\u5f97\u4e86\u663e\u8457\u7684\u6027\u80fd\u63d0\u5347\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u80fd\u591f\u7cfb\u7edf\u5730\u4e3a\u5177\u6709\u591a\u9879\u5f0f\u65f6\u95f4\u5206\u79bb\u9884\u8a00\u673a\u7684\u6307\u6570\u89c4\u6a21\u6574\u6570\u89c4\u5212\u95ee\u9898\u751f\u6210\u7d27\u51d1\u516c\u5f0f\uff0c\u4e3a\u7b97\u6cd5\u5230LP\u7684\u7f16\u8bd1\u63d0\u4f9b\u4e86\u66f4\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2509.12421", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.12421", "abs": "https://arxiv.org/abs/2509.12421", "authors": ["Hao Li", "Hicham Masri", "Filipe R. Cogo", "Abdul Ali Bangash", "Bram Adams", "Ahmed E. Hassan"], "title": "Understanding Prompt Management in GitHub Repositories: A Call for Best Practices", "comment": null, "summary": "The rapid adoption of foundation models (e.g., large language models) has\ngiven rise to promptware, i.e., software built using natural language prompts.\nEffective management of prompts, such as organization and quality assurance, is\nessential yet challenging. In this study, we perform an empirical analysis of\n24,800 open-source prompts from 92 GitHub repositories to investigate prompt\nmanagement practices and quality attributes. Our findings reveal critical\nchallenges such as considerable inconsistencies in prompt formatting,\nsubstantial internal and external prompt duplication, and frequent readability\nand spelling issues. Based on these findings, we provide actionable\nrecommendations for developers to enhance the usability and maintainability of\nopen-source prompts within the rapidly evolving promptware ecosystem.", "AI": {"tldr": "\u5bf924,800\u4e2a\u5f00\u6e90\u63d0\u793a\u7684\u5b9e\u8bc1\u5206\u6790\u663e\u793a\uff0c\u63d0\u793a\u7ba1\u7406\u5b58\u5728\u683c\u5f0f\u4e0d\u4e00\u81f4\u3001\u91cd\u590d\u95ee\u9898\u4ee5\u53ca\u53ef\u8bfb\u6027\u548c\u62fc\u5199\u95ee\u9898\uff0c\u63d0\u51fa\u4e86\u6539\u8fdb\u5efa\u8bae", "motivation": "\u968f\u7740\u57fa\u7840\u6a21\u578b\uff08\u5982\u5927\u8bed\u8a00\u6a21\u578b\uff09\u7684\u5feb\u901f\u91c7\u7528\uff0c\u57fa\u4e8e\u81ea\u7136\u8bed\u8a00\u63d0\u793a\u6784\u5efa\u7684\u8f6f\u4ef6\uff08promptware\uff09\u65e5\u76ca\u666e\u53ca\uff0c\u4f46\u6709\u6548\u7684\u63d0\u793a\u7ba1\u7406\uff08\u5982\u7ec4\u7ec7\u548c\u8d28\u91cf\u4fdd\u8bc1\uff09\u81f3\u5173\u91cd\u8981\u4e14\u5177\u6709\u6311\u6218\u6027", "method": "\u5bf9\u6765\u81ea92\u4e2aGitHub\u4ed3\u5e93\u768424,800\u4e2a\u5f00\u6e90\u63d0\u793a\u8fdb\u884c\u5b9e\u8bc1\u5206\u6790\uff0c\u7814\u7a76\u63d0\u793a\u7ba1\u7406\u5b9e\u8df5\u548c\u8d28\u91cf\u5c5e\u6027", "result": "\u53d1\u73b0\u5173\u952e\u6311\u6218\uff1a\u63d0\u793a\u683c\u5f0f\u5b58\u5728\u663e\u8457\u4e0d\u4e00\u81f4\u3001\u5927\u91cf\u5185\u90e8\u548c\u5916\u90e8\u63d0\u793a\u91cd\u590d\u3001\u9891\u7e41\u7684\u53ef\u8bfb\u6027\u548c\u62fc\u5199\u95ee\u9898", "conclusion": "\u57fa\u4e8e\u7814\u7a76\u53d1\u73b0\uff0c\u4e3a\u5f00\u53d1\u8005\u5728\u5feb\u901f\u53d1\u5c55\u7684promptware\u751f\u6001\u7cfb\u7edf\u4e2d\u63d0\u9ad8\u5f00\u6e90\u63d0\u793a\u7684\u53ef\u7528\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u63d0\u4f9b\u4e86\u53ef\u884c\u7684\u5efa\u8bae"}}
{"id": "2509.13019", "categories": ["cs.PL", "cs.LO"], "pdf": "https://arxiv.org/pdf/2509.13019", "abs": "https://arxiv.org/abs/2509.13019", "authors": ["Fr\u00e9d\u00e9ric Fort", "David Nowak", "Vlad Rusu"], "title": "Pleasant Imperative Program Proofs with GallinaC", "comment": "In Proceedings FROM 2025, arXiv:2509.11877", "summary": "Even with the increase of popularity of functional programming, imperative\nprogramming remains a key programming paradigm, especially for programs\noperating at lower levels of abstraction. When such software offers key\ncomponents of a Trusted Computing Base (TCB), e.g. an operating system kernel,\nit becomes desirable to provide mathematical correctness proofs.\n  However, current real-world imperative programming languages possess\n\"expressive\", i.e. overly permissive, semantics. Thus, producing correctness\nproofs of such programs becomes tedious and error-prone, requiring to take care\nof numerous \"administrative\" details. Ideally, a proof-oriented imperative\nlanguage should feature well-behaved semantics while allowing imperative\nidioms.\n  To obtain a high-degree of confidence in the correctness of such a language,\nits tools should be developed inside a proof-assistant such that program proofs\nare machine checked.\n  We present GallinaC, a shallow embedding of a Turing-complete imperative\nlanguage directly inside the functional programming language of the Rocq proof\nassistant, Gallina. In particular, it features a truly generic and unbounded\nwhile loop. Having a functional core means proofs about GallinaC programs may\nuse the same tactics as proofs about pure functional ones.\n  Work on GallinaC is still under progress, but we present first promising\nresults. A prototype implementation has shown the viability of GallinaC with\nthe correctness proof of a list reversal procedure for linked-lists of unknown\nsize. We currently focus on the forward simulation between the GallinaC\nintermediate representation (IR) and Cminor, the entry language of the CompCert\nback-end.", "AI": {"tldr": "GallinaC\u662f\u4e00\u4e2a\u5728Rocq\u8bc1\u660e\u52a9\u624b\u7684Gallina\u51fd\u6570\u5f0f\u8bed\u8a00\u4e2d\u6d45\u5d4c\u5165\u7684\u56fe\u7075\u5b8c\u5907\u547d\u4ee4\u5f0f\u8bed\u8a00\uff0c\u65e8\u5728\u4e3a\u5e95\u5c42\u7cfb\u7edf\u8f6f\u4ef6\u63d0\u4f9b\u673a\u5668\u9a8c\u8bc1\u7684\u6b63\u786e\u6027\u8bc1\u660e", "motivation": "\u5f53\u524d\u547d\u4ee4\u5f0f\u7f16\u7a0b\u8bed\u8a00\u8bed\u4e49\u8fc7\u4e8e\u5bbd\u677e\uff0c\u4f7f\u5f97\u4e3a\u53ef\u4fe1\u8ba1\u7b97\u57fa\u7840\uff08\u5982\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\uff09\u63d0\u4f9b\u6570\u5b66\u6b63\u786e\u6027\u8bc1\u660e\u53d8\u5f97\u7e41\u7410\u4e14\u5bb9\u6613\u51fa\u9519\uff0c\u9700\u8981\u4e00\u79cd\u65e2\u652f\u6301\u547d\u4ee4\u5f0f\u7f16\u7a0b\u8303\u5f0f\u53c8\u5177\u6709\u826f\u597d\u8bed\u4e49\u7684\u8bc1\u660e\u5bfc\u5411\u8bed\u8a00", "method": "\u5728Gallina\u51fd\u6570\u5f0f\u8bed\u8a00\u4e2d\u6d45\u5d4c\u5165\u4e00\u4e2a\u56fe\u7075\u5b8c\u5907\u7684\u547d\u4ee4\u5f0f\u8bed\u8a00\uff0c\u5305\u542b\u771f\u6b63\u901a\u7528\u4e14\u65e0\u754c\u7684while\u5faa\u73af\uff0c\u5229\u7528\u51fd\u6570\u5f0f\u6838\u5fc3\u4f7f\u5f97\u7a0b\u5e8f\u8bc1\u660e\u53ef\u4ee5\u4f7f\u7528\u4e0e\u7eaf\u51fd\u6570\u5f0f\u7a0b\u5e8f\u76f8\u540c\u7684\u7b56\u7565", "result": "\u539f\u578b\u5b9e\u73b0\u5df2\u8bc1\u660eGallinaC\u7684\u53ef\u884c\u6027\uff0c\u6210\u529f\u5b8c\u6210\u4e86\u672a\u77e5\u5927\u5c0f\u94fe\u8868\u53cd\u8f6c\u7a0b\u5e8f\u7684\u6b63\u786e\u6027\u8bc1\u660e\uff0c\u76ee\u524d\u6b63\u4e13\u6ce8\u4e8eGallinaC\u4e2d\u95f4\u8868\u793a\u4e0eCompCert\u540e\u7aef\u5165\u53e3\u8bed\u8a00Cminor\u7684\u524d\u5411\u6a21\u62df", "conclusion": "GallinaC\u4e3a\u5e95\u5c42\u7cfb\u7edf\u8f6f\u4ef6\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u8bc1\u660e\u52a9\u624b\u4e2d\u5f00\u53d1\u673a\u5668\u9a8c\u8bc1\u6b63\u786e\u6027\u8bc1\u660e\u7684\u6709\u6548\u65b9\u6cd5\uff0c\u867d\u7136\u5de5\u4f5c\u4ecd\u5728\u8fdb\u884c\u4e2d\uff0c\u4f46\u521d\u6b65\u7ed3\u679c\u663e\u793a\u4e86\u5176\u6f5c\u529b"}}
{"id": "2509.12443", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.12443", "abs": "https://arxiv.org/abs/2509.12443", "authors": ["Sparsh Gupta", "Kamalavasan Kamalakkannan", "Maxim Moraru", "Galen Shipman", "Patrick Diehl"], "title": "From Legacy Fortran to Portable Kokkos:An Autonomous Agentic AI Workflow", "comment": null, "summary": "Scientific applications continue to rely on legacy Fortran codebases\noriginally developed for homogeneous, CPU-based systems. As High-Performance\nComputing (HPC) shifts toward heterogeneous GPU-accelerated architectures, many\naccelerators lack native Fortran bindings, creating an urgent need to modernize\nlegacy codes for portability. Frameworks like Kokkos provide performance\nportability and a single-source C++ abstraction, but manual Fortran-to-Kokkos\nporting demands significant expertise and time. Large language models (LLMs)\nhave shown promise in source-to-source code generation, yet their use in fully\nautonomous workflows for translating and optimizing parallel code remains\nlargely unexplored, especially for performance portability across diverse\nhardware.\n  This paper presents an agentic AI workflow where specialized LLM \"agents\"\ncollaborate to translate, validate, compile, run, test, debug, and optimize\nFortran kernels into portable Kokkos C++ programs. Results show the pipeline\nmodernizes a range of benchmark kernels, producing performance-portable Kokkos\ncodes across hardware partitions. Paid OpenAI models such as GPT-5 and\no4-mini-high executed the workflow for only a few U.S. dollars, generating\noptimized codes that surpassed Fortran baselines, whereas open-source models\nlike Llama4-Maverick often failed to yield functional codes.\n  This work demonstrates the feasibility of agentic AI for Fortran-to-Kokkos\ntransformation and offers a pathway for autonomously modernizing legacy\nscientific applications to run portably and efficiently on diverse\nsupercomputers. It further highlights the potential of LLM-driven agentic\nsystems to perform structured, domain-specific reasoning tasks in scientific\nand systems-oriented applications.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eAI\u4ee3\u7406\u7684\u5de5\u4f5c\u6d41\uff0c\u4f7f\u7528\u4e13\u95e8\u7684\u5927\u8bed\u8a00\u6a21\u578b\u4ee3\u7406\u534f\u4f5c\u5c06Fortran\u5185\u6838\u8f6c\u6362\u4e3a\u53ef\u79fb\u690d\u7684Kokkos C++\u7a0b\u5e8f\uff0c\u5b9e\u73b0\u4e86\u79d1\u5b66\u8ba1\u7b97\u4ee3\u7801\u7684\u81ea\u52a8\u5316\u73b0\u4ee3\u5316\u6539\u9020\u3002", "motivation": "\u968f\u7740\u9ad8\u6027\u80fd\u8ba1\u7b97\u5411GPU\u52a0\u901f\u67b6\u6784\u8f6c\u53d8\uff0c\u8bb8\u591a\u52a0\u901f\u5668\u7f3a\u4e4f\u539f\u751fFortran\u7ed1\u5b9a\uff0c\u9700\u8981\u5c06\u4f20\u7edfFortran\u4ee3\u7801\u73b0\u4ee3\u5316\u4ee5\u5b9e\u73b0\u8de8\u786c\u4ef6\u5e73\u53f0\u7684\u6027\u80fd\u53ef\u79fb\u690d\u6027\u3002\u624b\u52a8\u79fb\u690d\u5de5\u4f5c\u91cf\u5927\u4e14\u9700\u8981\u4e13\u4e1a\u77e5\u8bc6\u3002", "method": "\u91c7\u7528AI\u4ee3\u7406\u5de5\u4f5c\u6d41\uff0c\u591a\u4e2a\u4e13\u95e8\u7684LLM\u4ee3\u7406\u534f\u4f5c\u5b8c\u6210\u7ffb\u8bd1\u3001\u9a8c\u8bc1\u3001\u7f16\u8bd1\u3001\u8fd0\u884c\u3001\u6d4b\u8bd5\u3001\u8c03\u8bd5\u548c\u4f18\u5316\u7b49\u6b65\u9aa4\uff0c\u5c06Fortran\u5185\u6838\u8f6c\u6362\u4e3a\u53ef\u79fb\u690d\u7684Kokkos C++\u7a0b\u5e8f\u3002", "result": "\u5de5\u4f5c\u6d41\u6210\u529f\u73b0\u4ee3\u5316\u4e86\u591a\u4e2a\u57fa\u51c6\u5185\u6838\uff0c\u751f\u6210\u7684Kokkos\u4ee3\u7801\u5728\u4e0d\u540c\u786c\u4ef6\u5206\u533a\u4e0a\u5b9e\u73b0\u4e86\u6027\u80fd\u53ef\u79fb\u690d\u6027\u3002\u4ed8\u8d39OpenAI\u6a21\u578b\u4ec5\u9700\u51e0\u7f8e\u5143\u5373\u53ef\u5b8c\u6210\u5de5\u4f5c\u6d41\uff0c\u751f\u6210\u4f18\u5316\u4ee3\u7801\u6027\u80fd\u8d85\u8fc7Fortran\u57fa\u7ebf\uff0c\u800c\u5f00\u6e90\u6a21\u578b\u5f80\u5f80\u65e0\u6cd5\u751f\u6210\u529f\u80fd\u4ee3\u7801\u3002", "conclusion": "\u8fd9\u9879\u5de5\u4f5c\u8bc1\u660e\u4e86AI\u4ee3\u7406\u5728Fortran\u5230Kokkos\u8f6c\u6362\u4e2d\u7684\u53ef\u884c\u6027\uff0c\u4e3a\u81ea\u4e3b\u73b0\u4ee3\u5316\u4f20\u7edf\u79d1\u5b66\u5e94\u7528\u63d0\u4f9b\u4e86\u9014\u5f84\uff0c\u4f7f\u5176\u80fd\u591f\u5728\u591a\u6837\u5316\u8d85\u7ea7\u8ba1\u7b97\u673a\u4e0a\u53ef\u79fb\u690d\u4e14\u9ad8\u6548\u8fd0\u884c\uff0c\u5c55\u793a\u4e86LLM\u9a71\u52a8\u4ee3\u7406\u7cfb\u7edf\u5728\u79d1\u5b66\u548c\u7cfb\u7edf\u5e94\u7528\u4e2d\u8fdb\u884c\u7ed3\u6784\u5316\u3001\u9886\u57df\u7279\u5b9a\u63a8\u7406\u4efb\u52a1\u7684\u6f5c\u529b\u3002"}}
{"id": "2509.13022", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2509.13022", "abs": "https://arxiv.org/abs/2509.13022", "authors": ["Andrei Nacu", "Dorel Lucanu"], "title": "Navigating the Python Type Jungle", "comment": "In Proceedings FROM 2025, arXiv:2509.11877", "summary": "Python's typing system has evolved pragmatically into a powerful but\ntheoretically fragmented system, with scattered specifications. This paper\nproposes a formalization to address this fragmentation. The central\ncontribution is a formal foundation that uses concepts from type theory to\ndemonstrate that Python's type system can be elegantly described. This work\naims to serve as a crucial first step toward the future development of type\ninference tools.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u5bf9Python\u788e\u7247\u5316\u7c7b\u578b\u7cfb\u7edf\u7684\u5f62\u5f0f\u5316\u7406\u8bba\u57fa\u7840\uff0c\u4f7f\u7528\u7c7b\u578b\u7406\u8bba\u6982\u5ff5\u6765\u4f18\u96c5\u63cf\u8ff0Python\u7c7b\u578b\u7cfb\u7edf\uff0c\u4e3a\u672a\u6765\u7c7b\u578b\u63a8\u65ad\u5de5\u5177\u5f00\u53d1\u5960\u5b9a\u57fa\u7840", "motivation": "Python\u7684\u7c7b\u578b\u7cfb\u7edf\u5728\u5b9e\u8df5\u4e2d\u6f14\u5316\u5f97\u5f3a\u5927\u4f46\u7406\u8bba\u788e\u7247\u5316\uff0c\u7f3a\u4e4f\u7edf\u4e00\u7684\u5f62\u5f0f\u5316\u89c4\u8303\uff0c\u9700\u8981\u5efa\u7acb\u7406\u8bba\u57fa\u7840\u6765\u652f\u6301\u672a\u6765\u53d1\u5c55", "method": "\u91c7\u7528\u7c7b\u578b\u7406\u8bba\u7684\u6982\u5ff5\u548c\u65b9\u6cd5\uff0c\u6784\u5efa\u5f62\u5f0f\u5316\u57fa\u7840\u6765\u7cfb\u7edf\u63cf\u8ff0Python\u7684\u7c7b\u578b\u7cfb\u7edf", "result": "\u6210\u529f\u5efa\u7acb\u4e86Python\u7c7b\u578b\u7cfb\u7edf\u7684\u5f62\u5f0f\u5316\u7406\u8bba\u57fa\u7840\uff0c\u8bc1\u660e\u4e86\u53ef\u4ee5\u7528\u4f18\u96c5\u7684\u65b9\u5f0f\u63cf\u8ff0Python\u7684\u7c7b\u578b\u7cfb\u7edf", "conclusion": "\u8fd9\u9879\u5de5\u4f5c\u4e3aPython\u7c7b\u578b\u7cfb\u7edf\u7684\u672a\u6765\u53d1\u5c55\u63d0\u4f9b\u4e86\u5173\u952e\u7684\u5f62\u5f0f\u5316\u57fa\u7840\uff0c\u662f\u5f00\u53d1\u7c7b\u578b\u63a8\u65ad\u5de5\u5177\u7684\u91cd\u8981\u7b2c\u4e00\u6b65"}}
{"id": "2509.12466", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.12466", "abs": "https://arxiv.org/abs/2509.12466", "authors": ["Satwik Ghanta", "Peggy Gregory", "Gul Calikli"], "title": "Perspectives, Needs and Challenges for Sustainable Software Engineering Teams: A FinServ Case Study", "comment": null, "summary": "Sustainable Software Engineering (SSE) is slowly becoming an industry need\nfor reasons including reputation enhancement, improved profits and more\nefficient practices. However, SSE has many definitions, and this is a challenge\nfor organisations trying to build a common and broadly agreed understanding of\nthe term. Although much research effort has gone into identifying general SSE\npractices, there is a gap in understanding the sustainability needs of specific\norganisational contexts, such as financial services, which are highly\ndata-driven, operate under strict regulatory requirements, and handle millions\nof transactions day to day. To address this gap, our research focuses on a\nfinancial services company (FinServCo) that invited us to investigate\nperceptions of sustainability in their IT function: how it could be put into\npractice, who is responsible for it, and what the challenges are. We conducted\nan exploratory qualitative case study using interviews and a focus group with\nsix higher management employees and 16 software engineers comprising various\nexperience levels from junior developers to team leaders. Our study found a\nclear divergence in how sustainability is perceived between organisational\nlevels. Higher management emphasised technical and economic sustainability,\nfocusing on cloud migration and business continuity through data availability.\nIn contrast, developers highlighted human-centric concerns such as workload\nmanagement and stress reduction. Scepticism toward organisational initiatives\nwas also evident, with some developers viewing them as a PR strategy. Many\nparticipants expressed a preference for a dedicated sustainability team,\ndrawing analogies to internal structures for security governance. The\ndisconnect between organisational goals and individual developer needs\nhighlights the importance of context-sensitive, co-designed interventions.", "AI": {"tldr": "\u8be5\u7814\u7a76\u901a\u8fc7\u6848\u4f8b\u7814\u7a76\u53d1\u73b0\u91d1\u878d\u670d\u52a1\u516c\u53f8\u4e2d\u9ad8\u5c42\u7ba1\u7406\u548c\u5f00\u53d1\u4eba\u5458\u5bf9\u53ef\u6301\u7eed\u8f6f\u4ef6\u5de5\u7a0b\u7684\u7406\u89e3\u5b58\u5728\u663e\u8457\u5dee\u5f02\uff0c\u7ba1\u7406\u5c42\u5173\u6ce8\u6280\u672f\u548c\u7ecf\u6d4e\u53ef\u6301\u7eed\u6027\uff0c\u800c\u5f00\u53d1\u8005\u66f4\u5173\u6ce8\u5de5\u4f5c\u8d1f\u8377\u548c\u538b\u529b\u7b49\u4eba\u672c\u56e0\u7d20\u3002", "motivation": "\u53ef\u6301\u7eed\u8f6f\u4ef6\u5de5\u7a0b(SSE)\u7f3a\u4e4f\u9488\u5bf9\u7279\u5b9a\u7ec4\u7ec7\u80cc\u666f(\u5982\u91d1\u878d\u670d\u52a1\u884c\u4e1a)\u7684\u7814\u7a76\uff0c\u8fd9\u4e9b\u884c\u4e1a\u5177\u6709\u6570\u636e\u9a71\u52a8\u3001\u4e25\u683c\u76d1\u7ba1\u548c\u9ad8\u4ea4\u6613\u91cf\u7684\u7279\u70b9\uff0c\u9700\u8981\u7406\u89e3\u5176\u72ec\u7279\u7684\u53ef\u6301\u7eed\u6027\u9700\u6c42\u3002", "method": "\u91c7\u7528\u63a2\u7d22\u6027\u5b9a\u6027\u6848\u4f8b\u7814\u7a76\uff0c\u901a\u8fc7\u5bf9\u91d1\u878d\u670d\u52a1\u516c\u53f86\u540d\u9ad8\u7ba1\u548c16\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u8fdb\u884c\u8bbf\u8c08\u548c\u7126\u70b9\u5c0f\u7ec4\u8ba8\u8bba\uff0c\u6db5\u76d6\u4ece\u521d\u7ea7\u5f00\u53d1\u4eba\u5458\u5230\u56e2\u961f\u8d1f\u8d23\u4eba\u7684\u4e0d\u540c\u7ecf\u9a8c\u5c42\u7ea7\u3002", "result": "\u7814\u7a76\u53d1\u73b0\u7ec4\u7ec7\u5c42\u7ea7\u95f4\u5bf9\u53ef\u6301\u7eed\u6027\u7684\u8ba4\u77e5\u5b58\u5728\u660e\u663e\u5206\u6b67\uff1a\u7ba1\u7406\u5c42\u5f3a\u8c03\u6280\u672f\u7ecf\u6d4e\u53ef\u6301\u7eed\u6027(\u4e91\u8fc1\u79fb\u3001\u6570\u636e\u53ef\u7528\u6027)\uff0c\u5f00\u53d1\u8005\u5173\u6ce8\u4eba\u672c\u56e0\u7d20(\u5de5\u4f5c\u8d1f\u8377\u7ba1\u7406\u3001\u538b\u529b\u51cf\u5c11)\uff0c\u4e14\u5f00\u53d1\u8005\u5bf9\u7ec4\u7ec7\u5021\u8bae\u6301\u6000\u7591\u6001\u5ea6\uff0c\u8ba4\u4e3a\u53ef\u80fd\u662f\u516c\u5173\u7b56\u7565\u3002", "conclusion": "\u7ec4\u7ec7\u76ee\u6807\u4e0e\u5f00\u53d1\u8005\u9700\u6c42\u4e4b\u95f4\u7684\u8131\u8282\u51f8\u663e\u4e86\u9700\u8981\u9488\u5bf9\u5177\u4f53\u60c5\u5883\u3001\u5171\u540c\u8bbe\u8ba1\u7684\u5e72\u9884\u63aa\u65bd\u7684\u91cd\u8981\u6027\uff0c\u8bb8\u591a\u53c2\u4e0e\u8005\u503e\u5411\u4e8e\u5efa\u7acb\u4e13\u95e8\u7684\u53ef\u6301\u7eed\u6027\u56e2\u961f\uff0c\u7c7b\u4f3c\u4e8e\u5b89\u5168\u6cbb\u7406\u7684\u5185\u90e8\u7ed3\u6784\u3002"}}
{"id": "2509.13128", "categories": ["cs.PL", "cs.SE"], "pdf": "https://arxiv.org/pdf/2509.13128", "abs": "https://arxiv.org/abs/2509.13128", "authors": ["Rapha\u00ebl Monat"], "title": "Try-Mopsa: Relational Static Analysis in Your Pocket", "comment": null, "summary": "Static analyzers are complex pieces of software with large dependencies. They\ncan be difficult to install, which hinders adoption and creates barriers for\nstudents learning static analysis. This work introduces Try-Mopsa: a\nscaled-down version of the Mopsa static analysis platform, compiled into\nJavaScript to run purely as a client-side application in web browsers.\nTry-Mopsa provides a responsive interface that works on both desktop and mobile\ndevices. Try-Mopsa features all the core components of Mopsa. In particular, it\nsupports relational numerical domains. We present the interface, changes and\nadaptations required to have a pure JavaScript version of Mopsa. We envision\nTry-Mopsa as a convenient platform for onboarding or teaching purposes.", "AI": {"tldr": "Try-Mopsa\u662f\u4e00\u4e2a\u57fa\u4e8eJavaScript\u7684\u7b80\u5316\u7248Mopsa\u9759\u6001\u5206\u6790\u5e73\u53f0\uff0c\u53ef\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\uff0c\u65e0\u9700\u5b89\u88c5\uff0c\u4fbf\u4e8e\u5b66\u4e60\u548c\u91c7\u7528\u3002", "motivation": "\u9759\u6001\u5206\u6790\u5668\u4f9d\u8d56\u590d\u6742\u3001\u5b89\u88c5\u56f0\u96be\uff0c\u963b\u788d\u4e86\u91c7\u7528\u548c\u5b66\u4e60\u3002\u9700\u8981\u4e00\u79cd\u65e0\u9700\u5b89\u88c5\u3001\u6613\u4e8e\u8bbf\u95ee\u7684\u89e3\u51b3\u65b9\u6848\u6765\u964d\u4f4e\u4f7f\u7528\u95e8\u69db\u3002", "method": "\u5c06Mopsa\u9759\u6001\u5206\u6790\u5e73\u53f0\u7684\u6838\u5fc3\u7ec4\u4ef6\u7f16\u8bd1\u4e3aJavaScript\uff0c\u521b\u5efa\u7eaf\u5ba2\u6237\u7aefWeb\u5e94\u7528\uff0c\u652f\u6301\u684c\u9762\u548c\u79fb\u52a8\u8bbe\u5907\uff0c\u5e76\u4fdd\u7559\u5173\u7cfb\u6570\u503c\u57df\u7b49\u6838\u5fc3\u529f\u80fd\u3002", "result": "\u6210\u529f\u5f00\u53d1\u4e86Try-Mopsa\uff0c\u63d0\u4f9b\u4e86\u54cd\u5e94\u5f0f\u754c\u9762\uff0c\u5b8c\u6574\u652f\u6301Mopsa\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u7279\u522b\u662f\u5173\u7cfb\u6570\u503c\u57df\u5206\u6790\u3002", "conclusion": "Try-Mopsa\u4f5c\u4e3a\u4fbf\u6377\u7684Web\u5e73\u53f0\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u9759\u6001\u5206\u6790\u5668\u5b89\u88c5\u56f0\u96be\u7684\u95ee\u9898\uff0c\u7279\u522b\u9002\u5408\u5165\u95e8\u6559\u5b66\u548c\u5feb\u901f\u4e0a\u624b\u4f7f\u7528\u3002"}}
{"id": "2509.12491", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.12491", "abs": "https://arxiv.org/abs/2509.12491", "authors": ["Veronica Pimenova", "Sarah Fakhoury", "Christian Bird", "Margaret-Anne Storey", "Madeline Endres"], "title": "Good Vibrations? A Qualitative Study of Co-Creation, Communication, Flow, and Trust in Vibe Coding", "comment": "19 pages, 2 figures", "summary": "Vibe coding, a term coined by Andrej Karpathy in February 2025, has quickly\nbecome a compelling and controversial natural language programming paradigm in\nAI-assisted software development. Centered on iterative co-design with an AI\nassistant, vibe coding emphasizes flow and experimentation over strict upfront\nspecification. While initial studies have begun to explore this paradigm, most\nfocus on analyzing code artifacts or proposing theories with limited empirical\nbacking. There remains a need for a grounded understanding of vibe coding as it\nis perceived and experienced by developers. We present the first systematic\nqualitative investigation of vibe coding perceptions and practice. Drawing on\nover 190,000 words from semi-structured interviews, Reddit threads, and\nLinkedIn posts, we characterize what vibe coding is, why and how developers use\nit, where it breaks down, and which emerging practices aim to support it. We\npropose a qualitatively grounded theory of vibe coding centered on\nconversational interaction with AI, co-creation, and developer flow and joy. We\nfind that AI trust regulates movement along a continuum from delegation to\nco-creation and supports the developer experience by sustaining flow. We\nsurface recurring pain points and risks in areas including specification,\nreliability, debugging, latency, code review burden, and collaboration. We also\npresent best practices that have been discovered and shared to mitigate these\nchallenges. We conclude with implications for the future of AI dev tools and\ndirections for researchers investigating vibe coding.", "AI": {"tldr": "\u672c\u6587\u9996\u6b21\u7cfb\u7edf\u6027\u5730\u5b9a\u6027\u7814\u7a76\u4e86vibe coding\u8fd9\u4e00\u65b0\u5174AI\u8f85\u52a9\u7f16\u7a0b\u8303\u5f0f\uff0c\u901a\u8fc7\u5206\u6790\u8bbf\u8c08\u548c\u793e\u4ea4\u5a92\u4f53\u6570\u636e\uff0c\u63ed\u793a\u4e86\u5f00\u53d1\u8005\u5982\u4f55\u901a\u8fc7\u5bf9\u8bdd\u5f0fAI\u4ea4\u4e92\u5b9e\u73b0\u534f\u540c\u521b\u9020\u548c\u5fc3\u6d41\u4f53\u9a8c\u3002", "motivation": "\u73b0\u6709\u7814\u7a76\u4e3b\u8981\u5173\u6ce8\u4ee3\u7801\u4ea7\u7269\u6216\u7406\u8bba\u63a2\u8ba8\uff0c\u7f3a\u4e4f\u5bf9\u5f00\u53d1\u8005\u5b9e\u9645\u4f53\u9a8cvibe coding\u7684\u5b9e\u8bc1\u7406\u89e3\uff0c\u9700\u8981\u7cfb\u7edf\u7814\u7a76\u8fd9\u4e00\u7f16\u7a0b\u8303\u5f0f\u7684\u5b9e\u8df5\u611f\u77e5\u548c\u5e94\u7528\u60c5\u51b5\u3002", "method": "\u91c7\u7528\u5b9a\u6027\u7814\u7a76\u65b9\u6cd5\uff0c\u5206\u6790\u8d85\u8fc719\u4e07\u5b57\u7684\u534a\u7ed3\u6784\u5316\u8bbf\u8c08\u3001Reddit\u8ba8\u8bba\u548cLinkedIn\u5e16\u5b50\uff0c\u7cfb\u7edf\u8c03\u67e5vibe coding\u7684\u8ba4\u77e5\u548c\u5b9e\u8df5\u3002", "result": "\u63d0\u51fa\u4e86\u4ee5\u5bf9\u8bdd\u5f0fAI\u4ea4\u4e92\u3001\u534f\u540c\u521b\u9020\u548c\u5f00\u53d1\u8005\u5fc3\u6d41\u4e3a\u6838\u5fc3\u7684vibe coding\u7406\u8bba\u6846\u67b6\uff0c\u53d1\u73b0AI\u4fe1\u4efb\u5728\u59d4\u6258\u5230\u534f\u540c\u521b\u9020\u7684\u8fde\u7eed\u4f53\u4e2d\u8d77\u8c03\u8282\u4f5c\u7528\uff0c\u5e76\u8bc6\u522b\u4e86\u89c4\u8303\u3001\u53ef\u9760\u6027\u3001\u8c03\u8bd5\u7b49\u75db\u70b9\u548c\u6700\u4f73\u5b9e\u8df5\u3002", "conclusion": "\u7814\u7a76\u4e3aAI\u5f00\u53d1\u5de5\u5177\u7684\u672a\u6765\u53d1\u5c55\u63d0\u4f9b\u4e86\u91cd\u8981\u542f\u793a\uff0c\u5e76\u4e3avibe coding\u7684\u8fdb\u4e00\u6b65\u7814\u7a76\u6307\u660e\u4e86\u65b9\u5411\uff0c\u5f3a\u8c03\u4e86\u6301\u7eed\u5fc3\u6d41\u548c\u5f00\u53d1\u8005\u4f53\u9a8c\u7684\u91cd\u8981\u6027\u3002"}}
{"id": "2509.12968", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2509.12968", "abs": "https://arxiv.org/abs/2509.12968", "authors": ["Marta Kwiatkowska", "Gethin Norman", "David Parker"], "title": "Probabilistic Model Checking: Applications and Trends", "comment": null, "summary": "Probabilistic model checking is an approach to the formal modelling and\nanalysis of stochastic systems. Over the past twenty five years, the number of\ndifferent formalisms and techniques developed in this field has grown\nconsiderably, as has the range of problems to which it has been applied. In\nthis paper, we identify the main application domains in which probabilistic\nmodel checking has proved valuable and discuss how these have evolved over\ntime. We summarise the key strands of the underlying theory and technologies\nthat have contributed to these advances, and highlight examples which\nillustrate the benefits that probabilistic model checking can bring. The aim is\nto inform potential users of these techniques and to guide future developments\nin the field.", "AI": {"tldr": "\u6982\u7387\u6a21\u578b\u68c0\u9a8c\u5728\u968f\u673a\u7cfb\u7edf\u5f62\u5f0f\u5316\u5efa\u6a21\u4e0e\u5206\u6790\u4e2d\u7684\u5e94\u7528\u7efc\u8ff0\uff0c\u6db5\u76d625\u5e74\u6765\u7684\u4e3b\u8981\u5e94\u7528\u9886\u57df\u3001\u7406\u8bba\u6280\u672f\u53d1\u5c55\u548c\u5b9e\u9645\u6548\u76ca", "motivation": "\u603b\u7ed3\u6982\u7387\u6a21\u578b\u68c0\u9a8c\u5728\u8fc7\u53bb25\u5e74\u4e2d\u7684\u53d1\u5c55\u5386\u7a0b\uff0c\u8bc6\u522b\u5176\u4e3b\u8981\u5e94\u7528\u9886\u57df\u548c\u4ef7\u503c\uff0c\u4e3a\u6f5c\u5728\u7528\u6237\u63d0\u4f9b\u6280\u672f\u6307\u5bfc\u5e76\u63a8\u52a8\u8be5\u9886\u57df\u672a\u6765\u53d1\u5c55", "method": "\u901a\u8fc7\u6587\u732e\u7efc\u8ff0\u548c\u6848\u4f8b\u5206\u6790\u7684\u65b9\u6cd5\uff0c\u8bc6\u522b\u6982\u7387\u6a21\u578b\u68c0\u9a8c\u7684\u4e3b\u8981\u5e94\u7528\u9886\u57df\uff0c\u603b\u7ed3\u5173\u952e\u7406\u8bba\u548c\u6280\u672f\u53d1\u5c55\uff0c\u5e76\u901a\u8fc7\u5177\u4f53\u793a\u4f8b\u8bf4\u660e\u5176\u5b9e\u9645\u6548\u76ca", "result": "\u7cfb\u7edf\u68b3\u7406\u4e86\u6982\u7387\u6a21\u578b\u68c0\u9a8c\u5728\u4e0d\u540c\u5e94\u7528\u9886\u57df\u7684\u6210\u529f\u6848\u4f8b\uff0c\u5c55\u793a\u4e86\u8be5\u6280\u672f\u5728\u968f\u673a\u7cfb\u7edf\u5f62\u5f0f\u5316\u5206\u6790\u4e2d\u7684\u5e7f\u6cdb\u9002\u7528\u6027\u548c\u5b9e\u9645\u4ef7\u503c", "conclusion": "\u6982\u7387\u6a21\u578b\u68c0\u9a8c\u5df2\u6210\u4e3a\u968f\u673a\u7cfb\u7edf\u5206\u6790\u7684\u91cd\u8981\u5de5\u5177\uff0c\u5176\u5e94\u7528\u8303\u56f4\u4e0d\u65ad\u6269\u5927\uff0c\u672a\u6765\u53d1\u5c55\u9700\u8981\u7ee7\u7eed\u6269\u5c55\u5f62\u5f0f\u5316\u65b9\u6cd5\u548c\u6280\u672f\u4ee5\u5e94\u5bf9\u66f4\u590d\u6742\u7684\u5b9e\u9645\u95ee\u9898"}}
{"id": "2509.13261", "categories": ["cs.PL", "D.3.4"], "pdf": "https://arxiv.org/pdf/2509.13261", "abs": "https://arxiv.org/abs/2509.13261", "authors": ["No\u00e9 De Santo", "Stephanie Weirich"], "title": "Rebound: Efficient, Expressive, and Well-Scoped Binding", "comment": "15 pages, 5 figures, 3 tables. To be published in Proceedings of the\n  18th ACM SIGPLAN International Haskell Symposium (Haskell 2025)", "summary": "We introduce the Rebound library that supports well-scoped term\nrepresentations in Haskell and automates the definition of substitution,\nalpha-equivalence, and other operations that work with binding structures. The\nkey idea of our design is the use of first-class environments that map\nvariables to expressions in some new scope. By statically tracking scopes,\nusers of this library gain confidence that they have correctly maintained the\nsubtle invariants that stem from using de Bruijn indices. Behind the scenes,\nRebound uses environments to optimize the application of substitutions, while\nproviding explicit access to these data structures when desired. We demonstrate\nthat this library is expressive by using it to implement a wide range of\nlanguage features with sophisticated uses of binding and several different\noperations that use this abstract syntax. Our examples include pi-forall, a\ntutorial implementation of a type checker for a dependently-typed programming\nlanguage. Finally, we benchmark Rebound to understand its performance\ncharacteristics and find that it produces faster code than competing libraries.", "AI": {"tldr": "Rebound\u662f\u4e00\u4e2aHaskell\u5e93\uff0c\u901a\u8fc7\u9759\u6001\u8ffd\u8e2a\u4f5c\u7528\u57df\u548c\u4e00\u7b49\u73af\u5883\u6765\u652f\u6301\u826f\u597d\u4f5c\u7528\u57df\u7684\u9879\u8868\u793a\uff0c\u81ea\u52a8\u5b9a\u4e49\u66ff\u6362\u3001alpha\u7b49\u4ef7\u7b49\u7ed1\u5b9a\u7ed3\u6784\u64cd\u4f5c\uff0c\u63d0\u4f9b\u6027\u80fd\u4f18\u5316\u548c\u6b63\u786e\u6027\u4fdd\u8bc1\u3002", "motivation": "\u5904\u7406\u7ed1\u5b9a\u7ed3\u6784\u65f6\uff0cde Bruijn\u7d22\u5f15\u7b49\u6280\u672f\u7684\u5fae\u5999\u4e0d\u53d8\u91cf\u96be\u4ee5\u6b63\u786e\u7ef4\u62a4\uff0c\u9700\u8981\u81ea\u52a8\u5316\u5de5\u5177\u6765\u51cf\u5c11\u9519\u8bef\u5e76\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002", "method": "\u4f7f\u7528\u4e00\u7b49\u73af\u5883\u6620\u5c04\u53d8\u91cf\u5230\u8868\u8fbe\u5f0f\uff0c\u9759\u6001\u8ffd\u8e2a\u4f5c\u7528\u57df\uff0c\u4f18\u5316\u66ff\u6362\u5e94\u7528\uff0c\u540c\u65f6\u63d0\u4f9b\u5bf9\u73af\u5883\u6570\u636e\u7ed3\u6784\u7684\u663e\u5f0f\u8bbf\u95ee\u3002", "result": "\u5e93\u5177\u6709\u8868\u8fbe\u6027\uff0c\u80fd\u5b9e\u73b0\u590d\u6742\u7684\u8bed\u8a00\u7279\u6027\uff0c\u5728pi-forall\u4f9d\u8d56\u7c7b\u578b\u8bed\u8a00\u7c7b\u578b\u68c0\u67e5\u5668\u7b49\u793a\u4f8b\u4e2d\u8868\u73b0\u826f\u597d\uff0c\u6027\u80fd\u4f18\u4e8e\u7ade\u4e89\u5e93\u3002", "conclusion": "Rebound\u5e93\u901a\u8fc7\u4f5c\u7528\u57df\u8ffd\u8e2a\u548c\u73af\u5883\u7ba1\u7406\uff0c\u4e3aHaskell\u4e2d\u7684\u7ed1\u5b9a\u7ed3\u6784\u64cd\u4f5c\u63d0\u4f9b\u4e86\u6b63\u786e\u3001\u9ad8\u6548\u4e14\u8868\u8fbe\u6027\u5f3a\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2509.12629", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.12629", "abs": "https://arxiv.org/abs/2509.12629", "authors": ["Zhihong Sun", "Jia Li", "Yao Wan", "Chuanyi Li", "Hongyu Zhang", "Zhi jin", "Ge Li", "Hong Liu", "Chen Lyu", "Songlin Hu"], "title": "Ensembling Large Language Models for Code Vulnerability Detection: An Empirical Evaluation", "comment": "24 pages", "summary": "Code vulnerability detection is crucial for ensuring the security and\nreliability of modern software systems. Recently, Large Language Models (LLMs)\nhave shown promising capabilities in this domain. However, notable\ndiscrepancies in detection results often arise when analyzing identical code\nsegments across different training stages of the same model or among\narchitecturally distinct LLMs. While such inconsistencies may compromise\ndetection stability, they also highlight a key opportunity: the latent\ncomplementarity among models can be harnessed through ensemble learning to\ncreate more robust vulnerability detection systems. In this study, we explore\nthe potential of ensemble learning to enhance the performance of LLMs in source\ncode vulnerability detection. We conduct comprehensive experiments involving\nfive LLMs (i.e., DeepSeek-Coder-6.7B, CodeLlama-7B, CodeLlama-13B,\nCodeQwen1.5-7B, and StarCoder2-15B), using three ensemble strategies (i.e.,\nBagging, Boosting, and Stacking). These experiments are carried out across\nthree widely adopted datasets (i.e., Devign, ReVeal, and BigVul). Inspired by\nMixture of Experts (MoE) techniques, we further propose Dynamic Gated Stacking\n(DGS), a Stacking variant tailored for vulnerability detection. Our results\ndemonstrate that ensemble approaches can significantly improve detection\nperformance, with Boosting excelling in scenarios involving imbalanced\ndatasets. Moreover, DGS consistently outperforms traditional Stacking,\nparticularly in handling class imbalance and multi-class classification tasks.\nThese findings offer valuable insights into building more reliable and\neffective LLM-based vulnerability detection systems through ensemble learning.", "AI": {"tldr": "\u672c\u7814\u7a76\u63a2\u7d22\u96c6\u6210\u5b66\u4e60\u5728\u63d0\u5347\u5927\u8bed\u8a00\u6a21\u578b\u4ee3\u7801\u6f0f\u6d1e\u68c0\u6d4b\u6027\u80fd\u65b9\u9762\u7684\u6f5c\u529b\uff0c\u901a\u8fc7\u591a\u79cd\u96c6\u6210\u7b56\u7565\u548c\u63d0\u51fa\u7684\u52a8\u6001\u95e8\u63a7\u5806\u53e0\u65b9\u6cd5\uff0c\u663e\u8457\u63d0\u9ad8\u4e86\u68c0\u6d4b\u6548\u679c\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u4e0d\u5e73\u8861\u6570\u636e\u96c6\u548c\u591a\u5206\u7c7b\u4efb\u52a1\u65f6\u8868\u73b0\u4f18\u5f02\u3002", "motivation": "\u73b0\u6709\u5927\u8bed\u8a00\u6a21\u578b\u5728\u4ee3\u7801\u6f0f\u6d1e\u68c0\u6d4b\u4e2d\u5b58\u5728\u7ed3\u679c\u4e0d\u4e00\u81f4\u6027\u95ee\u9898\uff0c\u8fd9\u79cd\u4e0d\u4e00\u81f4\u6027\u867d\u7136\u5f71\u54cd\u68c0\u6d4b\u7a33\u5b9a\u6027\uff0c\u4f46\u4e5f\u63ed\u793a\u4e86\u6a21\u578b\u95f4\u7684\u6f5c\u5728\u4e92\u8865\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u96c6\u6210\u5b66\u4e60\u6765\u6784\u5efa\u66f4\u9c81\u68d2\u7684\u6f0f\u6d1e\u68c0\u6d4b\u7cfb\u7edf\u3002", "method": "\u4f7f\u75285\u4e2a\u5927\u8bed\u8a00\u6a21\u578b\uff08DeepSeek-Coder-6.7B\u3001CodeLlama-7B\u3001CodeLlama-13B\u3001CodeQwen1.5-7B\u3001StarCoder2-15B\uff09\u548c3\u79cd\u96c6\u6210\u7b56\u7565\uff08Bagging\u3001Boosting\u3001Stacking\uff09\uff0c\u57283\u4e2a\u6570\u636e\u96c6\uff08Devign\u3001ReVeal\u3001BigVul\uff09\u4e0a\u8fdb\u884c\u5b9e\u9a8c\uff0c\u5e76\u63d0\u51fa\u4e86\u57fa\u4e8e\u6df7\u5408\u4e13\u5bb6\u6280\u672f\u7684\u52a8\u6001\u95e8\u63a7\u5806\u53e0\uff08DGS\uff09\u65b9\u6cd5\u3002", "result": "\u96c6\u6210\u65b9\u6cd5\u663e\u8457\u63d0\u9ad8\u4e86\u68c0\u6d4b\u6027\u80fd\uff0cBoosting\u5728\u4e0d\u5e73\u8861\u6570\u636e\u96c6\u573a\u666f\u4e2d\u8868\u73b0\u4f18\u5f02\uff0cDGS\u5728\u4f20\u7edfStacking\u57fa\u7840\u4e0a\u8868\u73b0\u66f4\u597d\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u7c7b\u522b\u4e0d\u5e73\u8861\u548c\u591a\u5206\u7c7b\u4efb\u52a1\u65f6\u3002", "conclusion": "\u96c6\u6210\u5b66\u4e60\u80fd\u591f\u6709\u6548\u63d0\u5347\u57fa\u4e8e\u5927\u8bed\u8a00\u6a21\u578b\u7684\u6f0f\u6d1e\u68c0\u6d4b\u7cfb\u7edf\u7684\u53ef\u9760\u6027\u548c\u6709\u6548\u6027\uff0c\u4e3a\u6784\u5efa\u66f4\u7a33\u5065\u7684\u68c0\u6d4b\u7cfb\u7edf\u63d0\u4f9b\u4e86\u6709\u4ef7\u503c\u7684\u89c1\u89e3\u3002"}}
{"id": "2509.13018", "categories": ["cs.LO", "F.4.1"], "pdf": "https://arxiv.org/pdf/2509.13018", "abs": "https://arxiv.org/abs/2509.13018", "authors": ["\u00c1d\u00e1m Kurucz", "P\u00e9ter Bereczky", "D\u00e1niel Horp\u00e1csi"], "title": "On a Dependently Typed Encoding of Matching Logic", "comment": "In Proceedings FROM 2025, arXiv:2509.11877", "summary": "Matching logic is a general formal framework for reasoning about a wide range\nof theories, with particular emphasis on programming language semantics.\nNotably, the intermediate language of the K semantics framework is an extension\nof matching $\\mu$-logic, a sorted, polyadic variant of the logic. Metatheoretic\nreasoning requires the logic to be expressed within a foundational theory;\nopting for a dependently typed one enables well-sortedness in the object theory\nto correspond directly to well-typedness in the host theory. In this paper, we\npresent the first dependently typed definition of matching $\\mu$-logic,\nensuring well-sortedness via sorted contexts encoded in type indices. As a\nresult, ill-sorted syntax elements are unrepresentable, and the semantics of\nwell-sorted elements are guaranteed to lie within the domain of their\nassociated sort.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u7b2c\u4e00\u4e2a\u4f9d\u8d56\u7c7b\u578b\u5316\u7684\u5339\u914d\u03bc\u903b\u8f91\u5b9a\u4e49\uff0c\u901a\u8fc7\u7c7b\u578b\u7d22\u5f15\u4e2d\u7684\u6392\u5e8f\u4e0a\u4e0b\u6587\u786e\u4fdd\u826f\u597d\u6392\u5e8f\u6027\uff0c\u4f7f\u4e0d\u826f\u6392\u5e8f\u7684\u8bed\u6cd5\u5143\u7d20\u65e0\u6cd5\u8868\u793a\uff0c\u5e76\u4fdd\u8bc1\u826f\u597d\u6392\u5e8f\u5143\u7d20\u7684\u8bed\u4e49\u5728\u5176\u5173\u8054\u6392\u5e8f\u7684\u57df\u5185\u3002", "motivation": "\u5339\u914d\u903b\u8f91\u662f\u4e00\u4e2a\u901a\u7528\u7684\u5f62\u5f0f\u6846\u67b6\uff0c\u7279\u522b\u9002\u7528\u4e8e\u7f16\u7a0b\u8bed\u8a00\u8bed\u4e49\u63a8\u7406\u3002\u4e3a\u4e86\u8fdb\u884c\u5143\u7406\u8bba\u63a8\u7406\uff0c\u9700\u8981\u5c06\u903b\u8f91\u8868\u8fbe\u5728\u57fa\u7840\u7406\u8bba\u4e2d\uff0c\u9009\u62e9\u4f9d\u8d56\u7c7b\u578b\u7406\u8bba\u53ef\u4ee5\u4f7f\u5bf9\u8c61\u7406\u8bba\u4e2d\u7684\u826f\u597d\u6392\u5e8f\u6027\u76f4\u63a5\u5bf9\u5e94\u4e8e\u5bbf\u4e3b\u7406\u8bba\u4e2d\u7684\u826f\u597d\u7c7b\u578b\u6027\u3002", "method": "\u4f7f\u7528\u4f9d\u8d56\u7c7b\u578b\u5b9a\u4e49\u5339\u914d\u03bc\u903b\u8f91\uff0c\u901a\u8fc7\u7c7b\u578b\u7d22\u5f15\u4e2d\u7684\u6392\u5e8f\u4e0a\u4e0b\u6587\u6765\u7f16\u7801\u6392\u5e8f\u4fe1\u606f\uff0c\u786e\u4fdd\u8bed\u6cd5\u5143\u7d20\u7684\u826f\u597d\u6392\u5e8f\u6027\u3002", "result": "\u5b9e\u73b0\u4e86\u7b2c\u4e00\u4e2a\u4f9d\u8d56\u7c7b\u578b\u5316\u7684\u5339\u914d\u03bc\u903b\u8f91\u5b9a\u4e49\uff0c\u4f7f\u5f97\u4e0d\u826f\u6392\u5e8f\u7684\u8bed\u6cd5\u5143\u7d20\u65e0\u6cd5\u8868\u793a\uff0c\u540c\u65f6\u4fdd\u8bc1\u826f\u597d\u6392\u5e8f\u5143\u7d20\u7684\u8bed\u4e49\u5728\u5176\u5173\u8054\u6392\u5e8f\u7684\u57df\u5185\u3002", "conclusion": "\u4f9d\u8d56\u7c7b\u578b\u5316\u7684\u65b9\u6cd5\u4e3a\u5339\u914d\u03bc\u903b\u8f91\u63d0\u4f9b\u4e86\u4e25\u683c\u7684\u6392\u5e8f\u4fdd\u8bc1\uff0c\u4e3a\u5f62\u5f0f\u5316\u8bed\u4e49\u63a8\u7406\u63d0\u4f9b\u4e86\u66f4\u53ef\u9760\u7684\u57fa\u7840\u3002"}}
{"id": "2509.13026", "categories": ["cs.LO", "cs.PL", "math.CT"], "pdf": "https://arxiv.org/pdf/2509.13026", "abs": "https://arxiv.org/abs/2509.13026", "authors": ["Adriana Balan", "Silviu-George Pantelimon"], "title": "The Hidden Strength of Costrong Functors", "comment": "In Proceedings FROM 2025, arXiv:2509.11877", "summary": "Strong functors and monads are ubiquitous in Computer Science. More recently,\ncomonads have demonstrated their use in structuring context-dependent notions\nof computation. However, the dualisation of ``being strong'' property passed\nsomehow unobserved so far. We argue that ``being costrong'' gives a different\nunderstanding of how functors can interact with monoidal structures. This work\nin progress aims to explore costrong functors and their natural properties,\nwith an eye towards the semantics of computations.", "AI": {"tldr": "\u672c\u6587\u63a2\u8ba8\u4e86costrong\u51fd\u5b50\u7684\u6982\u5ff5\uff0c\u8fd9\u662fstrong\u51fd\u5b50\u7684\u5bf9\u5076\u6027\u8d28\uff0c\u65e8\u5728\u7814\u7a76\u51fd\u5b50\u4e0e\u5e7a\u534a\u7ed3\u6784\u4ea4\u4e92\u7684\u65b0\u65b9\u5f0f\u53ca\u5176\u5728\u8ba1\u7b97\u8bed\u4e49\u4e2d\u7684\u5e94\u7528", "motivation": "strong\u51fd\u5b50\u548cmonad\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u65e0\u5904\u4e0d\u5728\uff0ccomonad\u6700\u8fd1\u5728\u7ed3\u6784\u5316\u4e0a\u4e0b\u6587\u4f9d\u8d56\u8ba1\u7b97\u6982\u5ff5\u4e2d\u5c55\u793a\u4e86\u5176\u7528\u9014\uff0c\u4f46\"being strong\"\u6027\u8d28\u7684\u5bf9\u5076\u5316\u81f3\u4eca\u672a\u88ab\u5145\u5206\u7814\u7a76", "method": "\u63a2\u7d22costrong\u51fd\u5b50\u53ca\u5176\u81ea\u7136\u6027\u8d28\uff0c\u5206\u6790\u51fd\u5b50\u5982\u4f55\u4e0e\u5e7a\u534a\u7ed3\u6784\u4ea4\u4e92", "result": "\u63d0\u51fa\u4e86costrong\u51fd\u5b50\u7684\u6982\u5ff5\u6846\u67b6\uff0c\u4e3a\u7406\u89e3\u51fd\u5b50\u4e0e\u5e7a\u534a\u7ed3\u6784\u7684\u4ea4\u4e92\u63d0\u4f9b\u4e86\u65b0\u7684\u89c6\u89d2", "conclusion": "costrong\u51fd\u5b50\u4e3a\u8ba1\u7b97\u8bed\u4e49\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u7406\u89e3\u65b9\u5f0f\uff0c\u8fd9\u9879\u5de5\u4f5c\u4ecd\u5728\u8fdb\u884c\u4e2d\uff0c\u65e8\u5728\u8fdb\u4e00\u6b65\u63a2\u7d22\u8fd9\u4e9b\u6982\u5ff5"}}
{"id": "2509.12795", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.12795", "abs": "https://arxiv.org/abs/2509.12795", "authors": ["Yihua Chen", "Xingle Que", "Jiashuo Zhang", "Ting Chen", "Guangshun Li", "Jiachi Chen"], "title": "When Large Language Models Meet UAVs: How Far Are We?", "comment": null, "summary": "The integration of unmanned aerial vehicles (UAVs) and large language models\n(LLMs) has emerged as a research direction of growing interest, with the\npotential to address challenges in autonomous decision-making, human-UAV\ninteraction, and real-time adaptability. However, existing studies have\nremained largely in preliminary exploration with a limited understanding of\nreal-world practice, risking a misalignment between academic research and\npractical needs and hindering the translation of results. To examine and\naddress these potential challenges, we conducted an empirical study of 74\nselected papers and 56 public GitHub projects, identified nine task types for\nLLMs in UAV systems, and quantified their distribution. Our findings show that\nacademic research emphasizes theoretical modeling and task optimization with\ndispersed attention across tasks. In contrast, industrial projects focus on\nflight control, task planning, and human-machine interaction, prioritizing\noperability and efficiency. To further capture industry perspectives, we\ndistributed an online questionnaire. We obtained 52 valid responses: 40.4% of\npractitioners have attempted to apply LLMs to UAV tasks. We further identify\nfactors that impede real-world integration, including technological maturity,\nperformance, safety, cost, and other considerations. Finally, we highlight\nchallenges for future development and provide recommendations.", "AI": {"tldr": "\u672c\u7814\u7a76\u901a\u8fc7\u5206\u679074\u7bc7\u8bba\u6587\u548c56\u4e2aGitHub\u9879\u76ee\uff0c\u53d1\u73b0\u5b66\u672f\u754c\u4e0e\u5de5\u4e1a\u754c\u5728LLM-UAV\u878d\u5408\u5e94\u7528\u4e0a\u5b58\u5728\u5dee\u5f02\uff0c\u8bc6\u522b\u4e869\u79cd\u4efb\u52a1\u7c7b\u578b\u548c\u963b\u788d\u5b9e\u9645\u5e94\u7528\u7684\u5173\u952e\u56e0\u7d20\u3002", "motivation": "UAV\u4e0eLLM\u7684\u878d\u5408\u5177\u6709\u5de8\u5927\u6f5c\u529b\uff0c\u4f46\u73b0\u6709\u7814\u7a76\u591a\u4e3a\u521d\u6b65\u63a2\u7d22\uff0c\u7f3a\u4e4f\u5bf9\u5b9e\u9645\u5e94\u7528\u7684\u6df1\u5165\u7406\u89e3\uff0c\u5b58\u5728\u5b66\u672f\u7814\u7a76\u4e0e\u5b9e\u9645\u9700\u6c42\u8131\u8282\u7684\u98ce\u9669\u3002", "method": "\u91c7\u7528\u5b9e\u8bc1\u7814\u7a76\u65b9\u6cd5\uff0c\u5206\u679074\u7bc7\u5b66\u672f\u8bba\u6587\u548c56\u4e2a\u516c\u5f00GitHub\u9879\u76ee\uff0c\u8bc6\u522bLLM\u5728UAV\u7cfb\u7edf\u4e2d\u7684\u4efb\u52a1\u7c7b\u578b\u5206\u5e03\uff0c\u5e76\u901a\u8fc7\u5728\u7ebf\u95ee\u5377\u83b7\u53d652\u4efd\u6709\u6548\u53cd\u9988\u4e86\u89e3\u884c\u4e1a\u89c6\u89d2\u3002", "result": "\u53d1\u73b0\u5b66\u672f\u754c\u4fa7\u91cd\u7406\u8bba\u5efa\u6a21\u548c\u4efb\u52a1\u4f18\u5316\uff0c\u800c\u5de5\u4e1a\u754c\u66f4\u5173\u6ce8\u98de\u884c\u63a7\u5236\u3001\u4efb\u52a1\u89c4\u5212\u548c\u4eba\u673a\u4ea4\u4e92\uff1b40.4%\u7684\u4ece\u4e1a\u8005\u5c1d\u8bd5\u8fc7\u5c06LLM\u5e94\u7528\u4e8eUAV\u4efb\u52a1\uff0c\u8bc6\u522b\u51fa\u6280\u672f\u6210\u719f\u5ea6\u3001\u6027\u80fd\u3001\u5b89\u5168\u3001\u6210\u672c\u7b49\u963b\u788d\u56e0\u7d20\u3002", "conclusion": "\u7814\u7a76\u63ed\u793a\u4e86\u5b66\u672f\u4e0e\u5de5\u4e1a\u5b9e\u8df5\u7684\u5dee\u8ddd\uff0c\u63d0\u51fa\u4e86\u672a\u6765\u53d1\u5c55\u7684\u6311\u6218\u548c\u5efa\u8bae\uff0c\u4e3aLLM-UAV\u7cfb\u7edf\u7684\u5b9e\u9645\u5e94\u7528\u63d0\u4f9b\u4e86\u91cd\u8981\u6307\u5bfc\u3002"}}
{"id": "2509.13020", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2509.13020", "abs": "https://arxiv.org/abs/2509.13020", "authors": ["Ioana Leu\u015ftean", "Bogdan Macovei"], "title": "\u0141ukasiewicz Logic with Actions for Neural Networks training", "comment": "In Proceedings FROM 2025, arXiv:2509.11877", "summary": "Based on the already known connection between multilayer perceptrons and\nLukasiewicz logic with rational coefficients, we take a step forward in\nanalyzing its training process using a three-sorted hybrid modal logic: a\nmultilayer perceptron is a logical formula; the actions of the training process\nare modal operators; the training process is a sequence of logical deductions.\nUsing the proof assistant and the programming language Lean 4, the algorithmic\nimplementation of the training process is certified by logical proofs.", "AI": {"tldr": "\u5c06\u591a\u5c42\u611f\u77e5\u673a\u7684\u8bad\u7ec3\u8fc7\u7a0b\u5efa\u6a21\u4e3a\u4e09\u6392\u5e8f\u6df7\u5408\u6a21\u6001\u903b\u8f91\uff0c\u5176\u4e2d\u8bad\u7ec3\u52a8\u4f5c\u4f5c\u4e3a\u6a21\u6001\u7b97\u5b50\uff0c\u8bad\u7ec3\u8fc7\u7a0b\u662f\u903b\u8f91\u63a8\u5bfc\u5e8f\u5217\uff0c\u5e76\u4f7f\u7528Lean 4\u8fdb\u884c\u7b97\u6cd5\u5b9e\u73b0\u7684\u903b\u8f91\u8bc1\u660e\u8ba4\u8bc1", "motivation": "\u57fa\u4e8e\u591a\u5c42\u611f\u77e5\u673a\u4e0e\u5e26\u6709\u7406\u7cfb\u6570\u7684Lukasiewicz\u903b\u8f91\u4e4b\u95f4\u7684\u5df2\u77e5\u8054\u7cfb\uff0c\u8fdb\u4e00\u6b65\u5206\u6790\u5176\u8bad\u7ec3\u8fc7\u7a0b\u7684\u903b\u8f91\u57fa\u7840", "method": "\u4f7f\u7528\u4e09\u6392\u5e8f\u6df7\u5408\u6a21\u6001\u903b\u8f91\u6846\u67b6\uff1a\u5c06\u591a\u5c42\u611f\u77e5\u673a\u89c6\u4e3a\u903b\u8f91\u516c\u5f0f\uff0c\u8bad\u7ec3\u52a8\u4f5c\u4f5c\u4e3a\u6a21\u6001\u7b97\u5b50\uff0c\u8bad\u7ec3\u8fc7\u7a0b\u5efa\u6a21\u4e3a\u903b\u8f91\u63a8\u5bfc\u5e8f\u5217\uff0c\u5e76\u5229\u7528Lean 4\u8bc1\u660e\u52a9\u624b\u8fdb\u884c\u7b97\u6cd5\u5b9e\u73b0\u7684\u903b\u8f91\u8ba4\u8bc1", "result": "\u5efa\u7acb\u4e86\u591a\u5c42\u611f\u77e5\u673a\u8bad\u7ec3\u8fc7\u7a0b\u7684\u903b\u8f91\u5f62\u5f0f\u5316\u6a21\u578b\uff0c\u5e76\u901a\u8fc7Lean 4\u5b9e\u73b0\u4e86\u7b97\u6cd5\u6b63\u786e\u6027\u7684\u903b\u8f91\u8bc1\u660e", "conclusion": "\u8be5\u65b9\u6cd5\u4e3a\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u8fc7\u7a0b\u63d0\u4f9b\u4e86\u4e25\u683c\u7684\u903b\u8f91\u57fa\u7840\uff0c\u901a\u8fc7\u5f62\u5f0f\u5316\u9a8c\u8bc1\u786e\u4fdd\u4e86\u8bad\u7ec3\u7b97\u6cd5\u7684\u6b63\u786e\u6027\uff0c\u4e3a\u53ef\u4fe1AI\u7cfb\u7edf\u5f00\u53d1\u63d0\u4f9b\u4e86\u65b0\u9014\u5f84"}}
{"id": "2509.12798", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.12798", "abs": "https://arxiv.org/abs/2509.12798", "authors": ["Nenad Petrovic", "Lukasz Mazur", "Alois Knoll"], "title": "LLM-Based Approach for Enhancing Maintainability of Automotive Architectures", "comment": null, "summary": "There are many bottlenecks that decrease the flexibility of automotive\nsystems, making their long-term maintenance, as well as updates and extensions\nin later lifecycle phases increasingly difficult, mainly due to long\nre-engineering, standardization, and compliance procedures, as well as\nheterogeneity and numerosity of devices and underlying software components\ninvolved. In this paper, we explore the potential of Large Language Models\n(LLMs) when it comes to the automation of tasks and processes that aim to\nincrease the flexibility of automotive systems. Three case studies towards\nachieving this goal are considered as outcomes of early-stage research: 1)\nupdates, hardware abstraction, and compliance, 2) interface compatibility\nchecking, and 3) architecture modification suggestions. For proof-of-concept\nimplementation, we rely on OpenAI's GPT-4o model.", "AI": {"tldr": "\u672c\u6587\u63a2\u8ba8\u4e86\u5927\u578b\u8bed\u8a00\u6a21\u578b\u5728\u63d0\u9ad8\u6c7d\u8f66\u7cfb\u7edf\u7075\u6d3b\u6027\u65b9\u9762\u7684\u6f5c\u529b\uff0c\u901a\u8fc7\u4e09\u4e2a\u6848\u4f8b\u7814\u7a76\u5c55\u793a\u4e86LLMs\u5728\u81ea\u52a8\u5316\u66f4\u65b0\u3001\u786c\u4ef6\u62bd\u8c61\u3001\u5408\u89c4\u6027\u68c0\u67e5\u3001\u63a5\u53e3\u517c\u5bb9\u6027\u9a8c\u8bc1\u548c\u67b6\u6784\u4fee\u6539\u5efa\u8bae\u65b9\u9762\u7684\u5e94\u7528\u3002", "motivation": "\u6c7d\u8f66\u7cfb\u7edf\u5b58\u5728\u8bb8\u591a\u964d\u4f4e\u7075\u6d3b\u6027\u7684\u74f6\u9888\uff0c\u5305\u62ec\u957f\u671f\u7ef4\u62a4\u56f0\u96be\u3001\u540e\u671f\u66f4\u65b0\u6269\u5c55\u590d\u6742\u3001\u91cd\u5de5\u7a0b\u5e8f\u5197\u957f\u3001\u6807\u51c6\u5316\u5408\u89c4\u6d41\u7a0b\u7e41\u7410\uff0c\u4ee5\u53ca\u8bbe\u5907\u548c\u8f6f\u4ef6\u7ec4\u4ef6\u7684\u5f02\u6784\u6027\u548c\u6570\u91cf\u5e9e\u5927\u3002", "method": "\u91c7\u7528OpenAI\u7684GPT-4o\u6a21\u578b\u8fdb\u884c\u6982\u5ff5\u9a8c\u8bc1\u5b9e\u73b0\uff0c\u901a\u8fc7\u4e09\u4e2a\u6848\u4f8b\u7814\u7a76\uff1a1)\u66f4\u65b0\u3001\u786c\u4ef6\u62bd\u8c61\u548c\u5408\u89c4\u6027\u68c0\u67e5\uff1b2)\u63a5\u53e3\u517c\u5bb9\u6027\u9a8c\u8bc1\uff1b3)\u67b6\u6784\u4fee\u6539\u5efa\u8bae\u3002", "result": "\u65e9\u671f\u7814\u7a76\u8868\u660eLLMs\u5728\u81ea\u52a8\u5316\u6c7d\u8f66\u7cfb\u7edf\u76f8\u5173\u4efb\u52a1\u65b9\u9762\u5177\u6709\u6f5c\u529b\uff0c\u80fd\u591f\u63d0\u9ad8\u7cfb\u7edf\u7075\u6d3b\u6027\u5e76\u7b80\u5316\u7ef4\u62a4\u548c\u66f4\u65b0\u6d41\u7a0b\u3002", "conclusion": "\u5927\u578b\u8bed\u8a00\u6a21\u578b\u5728\u6c7d\u8f66\u7cfb\u7edf\u81ea\u52a8\u5316\u4efb\u52a1\u4e2d\u5c55\u73b0\u51fa\u5e94\u7528\u524d\u666f\uff0c\u6709\u671b\u89e3\u51b3\u4f20\u7edf\u6c7d\u8f66\u7cfb\u7edf\u9762\u4e34\u7684\u7075\u6d3b\u6027\u548c\u7ef4\u62a4\u6311\u6218\uff0c\u4f46\u4ecd\u9700\u8fdb\u4e00\u6b65\u7814\u7a76\u9a8c\u8bc1\u3002"}}
{"id": "2509.12809", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.12809", "abs": "https://arxiv.org/abs/2509.12809", "authors": ["Jinfeng Wen", "Jianshu Zhao", "Zixi Zhu", "Xiaomin Zhang", "Qi Liang", "Ao Zhou", "Shangguang Wang"], "title": "SateLight: A Satellite Application Update Framework for Satellite Computing", "comment": "This paper has been accepted for publication in ASE 2025!", "summary": "Satellite computing is an emerging paradigm that empowers satellites to\nperform onboard processing tasks (i.e., \\textit{satellite applications}),\nthereby reducing reliance on ground-based systems and improving responsiveness.\nHowever, enabling application software updates in this context remains a\nfundamental challenge due to application heterogeneity, limited\nground-to-satellite bandwidth, and harsh space conditions. Existing software\nupdate approaches, designed primarily for terrestrial systems, fail to address\nthese constraints, as they assume abundant computational capacity and stable\nconnectivity.\n  To address this gap, we propose SateLight, a practical and effective\nsatellite application update framework tailored for satellite computing.\nSateLight leverages containerization to encapsulate heterogeneous applications,\nenabling efficient deployment and maintenance. SateLight further integrates\nthree capabilities: (1) a content-aware differential strategy that minimizes\ncommunication data volume, (2) a fine-grained onboard update design that\nreconstructs target applications, and (3) a layer-based fault-tolerant recovery\nmechanism to ensure reliability under failure-prone space conditions.\nExperimental results on a satellite simulation environment with 10\nrepresentative satellite applications demonstrate that SateLight reduces\ntransmission latency by up to 91.18% (average 56.54%) compared to the best\ncurrently available baseline. It also consistently ensures 100% update\ncorrectness across all evaluated applications. Furthermore, a case study on a\nreal-world in-orbit satellite demonstrates the practicality of our approach.", "AI": {"tldr": "SateLight\u662f\u4e00\u4e2a\u9488\u5bf9\u536b\u661f\u8ba1\u7b97\u7684\u5e94\u7528\u66f4\u65b0\u6846\u67b6\uff0c\u901a\u8fc7\u5bb9\u5668\u5316\u3001\u5dee\u5206\u66f4\u65b0\u548c\u5bb9\u9519\u673a\u5236\uff0c\u663e\u8457\u51cf\u5c11\u4f20\u8f93\u5ef6\u8fdf\u5e76\u786e\u4fdd\u66f4\u65b0\u53ef\u9760\u6027", "motivation": "\u536b\u661f\u8ba1\u7b97\u9700\u8981\u5e94\u7528\u8f6f\u4ef6\u66f4\u65b0\uff0c\u4f46\u73b0\u6709\u5730\u9762\u7cfb\u7edf\u66f4\u65b0\u65b9\u6cd5\u65e0\u6cd5\u5e94\u5bf9\u536b\u661f\u73af\u5883\u7684\u5f02\u6784\u6027\u3001\u5e26\u5bbd\u9650\u5236\u548c\u6076\u52a3\u7a7a\u95f4\u6761\u4ef6", "method": "\u91c7\u7528\u5bb9\u5668\u5316\u5c01\u88c5\u5f02\u6784\u5e94\u7528\uff0c\u96c6\u6210\u5185\u5bb9\u611f\u77e5\u5dee\u5206\u7b56\u7565\u51cf\u5c11\u901a\u4fe1\u91cf\uff0c\u7ec6\u7c92\u5ea6\u661f\u4e0a\u66f4\u65b0\u8bbe\u8ba1\u91cd\u6784\u76ee\u6807\u5e94\u7528\uff0c\u4ee5\u53ca\u57fa\u4e8e\u5c42\u7684\u5bb9\u9519\u6062\u590d\u673a\u5236", "result": "\u5728\u536b\u661f\u6a21\u62df\u73af\u5883\u4e2d\uff0c\u4f20\u8f93\u5ef6\u8fdf\u964d\u4f4e\u6700\u9ad891.18%\uff08\u5e73\u574756.54%\uff09\uff0c\u6240\u6709\u8bc4\u4f30\u5e94\u7528\u5b9e\u73b0100%\u66f4\u65b0\u6b63\u786e\u6027\uff0c\u771f\u5b9e\u5728\u8f68\u536b\u661f\u6848\u4f8b\u9a8c\u8bc1\u4e86\u5b9e\u7528\u6027", "conclusion": "SateLight\u4e3a\u536b\u661f\u8ba1\u7b97\u63d0\u4f9b\u4e86\u4e00\u79cd\u5b9e\u7528\u6709\u6548\u7684\u5e94\u7528\u66f4\u65b0\u89e3\u51b3\u65b9\u6848\uff0c\u89e3\u51b3\u4e86\u536b\u661f\u73af\u5883\u4e0b\u7684\u7279\u6b8a\u7ea6\u675f\u95ee\u9898"}}
{"id": "2509.13038", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2509.13038", "abs": "https://arxiv.org/abs/2509.13038", "authors": ["Philippe Balbiani"], "title": "Intuitionistic modal logics: epistemic reasoning with distributed knowledge", "comment": null, "summary": "In this article, we add a diamond to the parametrized box-based propositional\nlanguage of intuitionistic doxastic logic and intuitionistic epistemic logic\nintroduced by Artemov and Protopopescu. The main results of this article are\nthe proofs of completeness with respect to their appropriate relational\nsemantics of the resulting intuitionistic doxastic logic and intuitionistic\nepistemic logic with distributed knowledge.", "AI": {"tldr": "\u672c\u6587\u5728Artemov\u548cProtopopescu\u63d0\u51fa\u7684\u76f4\u89c9\u4e3b\u4e49\u4fe1\u5ff5\u903b\u8f91\u548c\u76f4\u89c9\u4e3b\u4e49\u8ba4\u77e5\u903b\u8f91\u7684\u53c2\u6570\u5316\u76d2\u5f0f\u547d\u9898\u8bed\u8a00\u4e2d\u6dfb\u52a0\u4e86\u83f1\u5f62\u7b97\u5b50\uff0c\u8bc1\u660e\u4e86\u6269\u5c55\u540e\u7684\u76f4\u89c9\u4e3b\u4e49\u4fe1\u5ff5\u903b\u8f91\u548c\u5177\u6709\u5206\u5e03\u5f0f\u77e5\u8bc6\u7684\u76f4\u89c9\u4e3b\u4e49\u8ba4\u77e5\u903b\u8f91\u76f8\u5bf9\u4e8e\u5176\u5173\u7cfb\u8bed\u4e49\u7684\u5b8c\u5907\u6027\u3002", "motivation": "\u6269\u5c55\u76f4\u89c9\u4e3b\u4e49\u4fe1\u5ff5\u903b\u8f91\u548c\u76f4\u89c9\u4e3b\u4e49\u8ba4\u77e5\u903b\u8f91\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u901a\u8fc7\u6dfb\u52a0\u83f1\u5f62\u7b97\u5b50\u6765\u589e\u5f3a\u539f\u6709\u903b\u8f91\u7cfb\u7edf\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u5e76\u5efa\u7acb\u5b8c\u5907\u7684\u8bed\u4e49\u7406\u8bba\u3002", "method": "\u5728\u539f\u6709\u7684\u53c2\u6570\u5316\u76d2\u5f0f\u547d\u9898\u8bed\u8a00\u57fa\u7840\u4e0a\u6dfb\u52a0\u83f1\u5f62\u7b97\u5b50\uff0c\u6784\u5efa\u6269\u5c55\u7684\u903b\u8f91\u7cfb\u7edf\uff0c\u5e76\u4e3a\u5176\u8bbe\u8ba1\u9002\u5f53\u7684\u5173\u7cfb\u8bed\u4e49\u6a21\u578b\uff0c\u901a\u8fc7\u5f62\u5f0f\u5316\u8bc1\u660e\u65b9\u6cd5\u5efa\u7acb\u8bed\u6cd5\u548c\u8bed\u4e49\u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\u3002", "result": "\u6210\u529f\u8bc1\u660e\u4e86\u6269\u5c55\u540e\u7684\u76f4\u89c9\u4e3b\u4e49\u4fe1\u5ff5\u903b\u8f91\u548c\u5177\u6709\u5206\u5e03\u5f0f\u77e5\u8bc6\u7684\u76f4\u89c9\u4e3b\u4e49\u8ba4\u77e5\u903b\u8f91\u76f8\u5bf9\u4e8e\u5176\u5173\u7cfb\u8bed\u4e49\u7684\u5b8c\u5907\u6027\uff0c\u5373\u6240\u6709\u5728\u8bed\u4e49\u6a21\u578b\u4e2d\u6709\u6548\u7684\u516c\u5f0f\u90fd\u5728\u903b\u8f91\u7cfb\u7edf\u4e2d\u53ef\u8bc1\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002", "conclusion": "\u901a\u8fc7\u6dfb\u52a0\u83f1\u5f62\u7b97\u5b50\u6269\u5c55\u4e86\u76f4\u89c9\u4e3b\u4e49\u4fe1\u5ff5\u548c\u8ba4\u77e5\u903b\u8f91\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u5e76\u5efa\u7acb\u4e86\u5b8c\u5907\u7684\u8bed\u4e49\u7406\u8bba\u57fa\u7840\uff0c\u4e3a\u540e\u7eed\u76f8\u5173\u903b\u8f91\u7cfb\u7edf\u7684\u7814\u7a76\u63d0\u4f9b\u4e86\u91cd\u8981\u652f\u6491\u3002"}}
{"id": "2509.12973", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.12973", "abs": "https://arxiv.org/abs/2509.12973", "authors": ["Aamer Aljagthami", "Mohammed Banabila", "Musab Alshehri", "Mohammed Kabini", "Mohammad D. Alahmadi"], "title": "Evaluating Large Language Models for Code Translation: Effects of Prompt Language and Prompt Design", "comment": null, "summary": "Large language models (LLMs) have shown promise for automated source-code\ntranslation, a capability critical to software migration, maintenance, and\ninteroperability. Yet comparative evidence on how model choice, prompt design,\nand prompt language shape translation quality across multiple programming\nlanguages remains limited. This study conducts a systematic empirical\nassessment of state-of-the-art LLMs for code translation among C++, Java,\nPython, and C#, alongside a traditional baseline (TransCoder). Using BLEU and\nCodeBLEU, we quantify syntactic fidelity and structural correctness under two\nprompt styles (concise instruction and detailed specification) and two prompt\nlanguages (English and Arabic), with direction-aware evaluation across language\npairs. Experiments show that detailed prompts deliver consistent gains across\nmodels and translation directions, and English prompts outperform Arabic by\n13-15%. The top-performing model attains the highest CodeBLEU on challenging\npairs such as Java to C# and Python to C++. Our evaluation shows that each LLM\noutperforms TransCoder across the benchmark. These results demonstrate the\nvalue of careful prompt engineering and prompt language choice, and provide\npractical guidance for software modernization and cross-language\ninteroperability.", "AI": {"tldr": "\u672c\u7814\u7a76\u7cfb\u7edf\u8bc4\u4f30\u4e86\u5927\u578b\u8bed\u8a00\u6a21\u578b\u5728C++\u3001Java\u3001Python\u548cC#\u4e4b\u95f4\u7684\u4ee3\u7801\u7ffb\u8bd1\u6027\u80fd\uff0c\u53d1\u73b0\u8be6\u7ec6\u63d0\u793a\u548c\u82f1\u8bed\u63d0\u793a\u80fd\u663e\u8457\u63d0\u5347\u7ffb\u8bd1\u8d28\u91cf\uff0c\u6240\u6709LLM\u5747\u4f18\u4e8e\u4f20\u7edfTransCoder\u57fa\u51c6\u3002", "motivation": "\u5f53\u524d\u5173\u4e8e\u6a21\u578b\u9009\u62e9\u3001\u63d0\u793a\u8bbe\u8ba1\u548c\u63d0\u793a\u8bed\u8a00\u5982\u4f55\u5f71\u54cd\u591a\u7f16\u7a0b\u8bed\u8a00\u4ee3\u7801\u7ffb\u8bd1\u8d28\u91cf\u7684\u6bd4\u8f83\u8bc1\u636e\u6709\u9650\uff0c\u9700\u8981\u7cfb\u7edf\u8bc4\u4f30LLM\u5728\u4ee3\u7801\u7ffb\u8bd1\u4e2d\u7684\u8868\u73b0\u3002", "method": "\u4f7f\u7528BLEU\u548cCodeBLEU\u6307\u6807\uff0c\u5728\u4e24\u79cd\u63d0\u793a\u98ce\u683c\uff08\u7b80\u6d01\u6307\u4ee4\u548c\u8be6\u7ec6\u89c4\u8303\uff09\u548c\u4e24\u79cd\u63d0\u793a\u8bed\u8a00\uff08\u82f1\u8bed\u548c\u963f\u62c9\u4f2f\u8bed\uff09\u4e0b\uff0c\u5bf9\u6700\u5148\u8fdb\u7684LLM\u8fdb\u884c\u8de8\u8bed\u8a00\u5bf9\u7684\u4ee3\u7801\u7ffb\u8bd1\u8bc4\u4f30\u3002", "result": "\u8be6\u7ec6\u63d0\u793a\u5728\u6240\u6709\u6a21\u578b\u548c\u7ffb\u8bd1\u65b9\u5411\u4e0a\u5747\u5e26\u6765\u4e00\u81f4\u63d0\u5347\uff0c\u82f1\u8bed\u63d0\u793a\u6bd4\u963f\u62c9\u4f2f\u8bed\u63d0\u793a\u6027\u80fd\u9ad813-15%\u3002\u6700\u4f73\u6a21\u578b\u5728Java\u5230C#\u548cPython\u5230C++\u7b49\u6311\u6218\u6027\u8bed\u8a00\u5bf9\u4e0a\u83b7\u5f97\u6700\u9ad8CodeBLEU\u5206\u6570\uff0c\u6240\u6709LLM\u5747\u8d85\u8d8a\u4f20\u7edfTransCoder\u57fa\u51c6\u3002", "conclusion": "\u7814\u7a76\u8bc1\u660e\u4e86\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u63d0\u793a\u5de5\u7a0b\u548c\u63d0\u793a\u8bed\u8a00\u9009\u62e9\u7684\u91cd\u8981\u6027\uff0c\u4e3a\u8f6f\u4ef6\u73b0\u4ee3\u5316\u548c\u8de8\u8bed\u8a00\u4e92\u64cd\u4f5c\u6027\u63d0\u4f9b\u4e86\u5b9e\u7528\u6307\u5bfc\u3002"}}
{"id": "2509.13059", "categories": ["cs.LO", "68P05, 03G10, 03B52"], "pdf": "https://arxiv.org/pdf/2509.13059", "abs": "https://arxiv.org/abs/2509.13059", "authors": ["Yuxu Chen", "Jing Liu", "Lili Shen", "Xiaoye Tang"], "title": "Reducts of fuzzy contexts: Formal concept analysis vs. rough set theory", "comment": "17 pages", "summary": "We postulate the intuitive idea of reducts of fuzzy contexts based on formal\nconcept analysis and rough set theory. For a complete residuated lattice $L$,\nit is shown that reducts of $L$-contexts in formal concept analysis are\ninterdefinable with reducts of $L$-contexts in rough set theory via negation\nif, and only if, $L$ satisfies the law of double negation.", "AI": {"tldr": "\u672c\u6587\u57fa\u4e8e\u5f62\u5f0f\u6982\u5ff5\u5206\u6790\u548c\u7c97\u7cd9\u96c6\u7406\u8bba\uff0c\u63d0\u51fa\u4e86\u6a21\u7cca\u4e0a\u4e0b\u6587\u7684\u7ea6\u7b80\u6982\u5ff5\uff0c\u5e76\u8bc1\u660e\u4e86\u5728\u5b8c\u5168\u5269\u4f59\u683cL\u4e2d\uff0c\u5f62\u5f0f\u6982\u5ff5\u5206\u6790\u548c\u7c97\u7cd9\u96c6\u7406\u8bba\u7684L-\u4e0a\u4e0b\u6587\u7ea6\u7b80\u901a\u8fc7\u5426\u5b9a\u53ef\u76f8\u4e92\u5b9a\u4e49\u5f53\u4e14\u4ec5\u5f53L\u6ee1\u8db3\u53cc\u91cd\u5426\u5b9a\u5f8b\u3002", "motivation": "\u5c06\u5f62\u5f0f\u6982\u5ff5\u5206\u6790\u4e0e\u7c97\u7cd9\u96c6\u7406\u8bba\u4e2d\u7684\u7ea6\u7b80\u6982\u5ff5\u6269\u5c55\u5230\u6a21\u7cca\u4e0a\u4e0b\u6587\uff0c\u63a2\u7d22\u4e24\u8005\u4e4b\u95f4\u7684\u5185\u5728\u8054\u7cfb\u548c\u7b49\u4ef7\u6761\u4ef6\u3002", "method": "\u57fa\u4e8e\u5b8c\u5168\u5269\u4f59\u683cL\uff0c\u5efa\u7acbL-\u4e0a\u4e0b\u6587\u7684\u7ea6\u7b80\u7406\u8bba\uff0c\u901a\u8fc7\u6570\u5b66\u8bc1\u660e\u5206\u6790\u5f62\u5f0f\u6982\u5ff5\u5206\u6790\u548c\u7c97\u7cd9\u96c6\u7406\u8bba\u4e2d\u7ea6\u7b80\u6982\u5ff5\u7684\u7b49\u4ef7\u5173\u7cfb\u3002", "result": "\u8bc1\u660e\u4e86\u5f62\u5f0f\u6982\u5ff5\u5206\u6790\u548c\u7c97\u7cd9\u96c6\u7406\u8bba\u7684L-\u4e0a\u4e0b\u6587\u7ea6\u7b80\u901a\u8fc7\u5426\u5b9a\u53ef\u76f8\u4e92\u5b9a\u4e49\u5f53\u4e14\u4ec5\u5f53L\u6ee1\u8db3\u53cc\u91cd\u5426\u5b9a\u5f8b\u3002", "conclusion": "\u53cc\u91cd\u5426\u5b9a\u5f8b\u662f\u8fde\u63a5\u5f62\u5f0f\u6982\u5ff5\u5206\u6790\u548c\u7c97\u7cd9\u96c6\u7406\u8bba\u4e2d\u6a21\u7cca\u4e0a\u4e0b\u6587\u7ea6\u7b80\u6982\u5ff5\u7684\u5173\u952e\u6761\u4ef6\uff0c\u4e3a\u6a21\u7cca\u4fe1\u606f\u5904\u7406\u63d0\u4f9b\u4e86\u7406\u8bba\u57fa\u7840\u3002"}}
{"id": "2509.13023", "categories": ["cs.SE", "cs.AI", "I.2.2;D.2.5;D.2.4;D.4.6"], "pdf": "https://arxiv.org/pdf/2509.13023", "abs": "https://arxiv.org/abs/2509.13023", "authors": ["\u015etefan-Claudiu Susan", "Andrei Arusoaie", "Dorel Lucanu"], "title": "Validating Solidity Code Defects using Symbolic and Concrete Execution powered by Large Language Models", "comment": "In Proceedings FROM 2025, arXiv:2509.11877", "summary": "The high rate of false alarms from static analysis tools and Large Language\nModels (LLMs) complicates vulnerability detection in Solidity Smart Contracts,\ndemanding methods that can formally or empirically prove the presence of\ndefects. This paper introduces a novel detection pipeline that integrates\ncustom Slither-based detectors, LLMs, Kontrol, and Forge. Our approach is\ndesigned to reliably detect defects and generate proofs. We currently perform\nexperiments with promising results for seven types of critical defects. We\ndemonstrate the pipeline's efficacy by presenting our findings for three\nvulnerabilities -- Reentrancy, Complex Fallback, and Faulty Access Control\nPolicies -- that are challenging for current verification solutions, which\noften generate false alarms or fail to detect them entirely. We highlight the\npotential of either symbolic or concrete execution in correctly classifying\nsuch code faults. By chaining these instruments, our method effectively\nvalidates true positives, significantly reducing the manual verification\nburden. Although we identify potential limitations, such as the inconsistency\nand the cost of LLMs, our findings establish a robust framework for combining\nheuristic analysis with formal verification to achieve more reliable and\nautomated smart contract auditing.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408Slither\u68c0\u6d4b\u5668\u3001LLMs\u3001Kontrol\u548cForge\u7684\u65b0\u578b\u667a\u80fd\u5408\u7ea6\u6f0f\u6d1e\u68c0\u6d4b\u7ba1\u9053\uff0c\u80fd\u591f\u53ef\u9760\u68c0\u6d4b\u7f3a\u9677\u5e76\u751f\u6210\u8bc1\u660e\uff0c\u663e\u8457\u51cf\u5c11\u8bef\u62a5\u548c\u4eba\u5de5\u9a8c\u8bc1\u8d1f\u62c5\u3002", "motivation": "\u9759\u6001\u5206\u6790\u5de5\u5177\u548c\u5927\u578b\u8bed\u8a00\u6a21\u578b\u5728Solidity\u667a\u80fd\u5408\u7ea6\u6f0f\u6d1e\u68c0\u6d4b\u4e2d\u5b58\u5728\u9ad8\u8bef\u62a5\u7387\uff0c\u9700\u8981\u80fd\u591f\u6b63\u5f0f\u6216\u7ecf\u9a8c\u8bc1\u660e\u7f3a\u9677\u5b58\u5728\u7684\u65b9\u6cd5\u3002", "method": "\u96c6\u6210\u81ea\u5b9a\u4e49Slither\u68c0\u6d4b\u5668\u3001LLMs\u3001Kontrol\u548cForge\u7684\u68c0\u6d4b\u7ba1\u9053\uff0c\u901a\u8fc7\u7b26\u53f7\u6267\u884c\u6216\u5177\u4f53\u6267\u884c\u6765\u6b63\u786e\u5206\u7c7b\u4ee3\u7801\u6545\u969c\u3002", "result": "\u5bf9\u4e03\u79cd\u5173\u952e\u7f3a\u9677\u7c7b\u578b\u8fdb\u884c\u4e86\u5b9e\u9a8c\uff0c\u5c55\u793a\u4e86\u5728\u91cd\u5165\u653b\u51fb\u3001\u590d\u6742\u56de\u9000\u51fd\u6570\u548c\u9519\u8bef\u8bbf\u95ee\u63a7\u5236\u7b56\u7565\u7b49\u4e09\u79cd\u6f0f\u6d1e\u4e0a\u7684\u6709\u6548\u6027\u3002", "conclusion": "\u867d\u7136\u5b58\u5728LLMs\u4e0d\u4e00\u81f4\u6027\u548c\u6210\u672c\u7b49\u6f5c\u5728\u9650\u5236\uff0c\u4f46\u8be5\u65b9\u6cd5\u4e3a\u7ed3\u5408\u542f\u53d1\u5f0f\u5206\u6790\u548c\u5f62\u5f0f\u9a8c\u8bc1\u63d0\u4f9b\u4e86\u7a33\u5065\u6846\u67b6\uff0c\u53ef\u5b9e\u73b0\u66f4\u53ef\u9760\u7684\u667a\u80fd\u5408\u7ea6\u81ea\u52a8\u5316\u5ba1\u8ba1\u3002"}}
{"id": "2509.13258", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2509.13258", "abs": "https://arxiv.org/abs/2509.13258", "authors": ["Giorgio Bacci", "Adrian Francalanza"], "title": "Proceedings of the Sixteenth International Symposium on Games, Automata, Logics, and Formal Verification", "comment": null, "summary": "This volume contains the proceedings of GandALF 2025, the Sixteenth\nInternational Symposium on Games, Automata, Logics, and Formal Verification.\nGandALF 2025 took place on 16-17th September 2025, in Valletta, Malta. The aim\nof GandALF 2025 is to bring together researchers from academia and industry who\nare actively working in the fields of Games, Automata, Logics, and Formal\nVerification. The idea is to cover an ample spectrum of themes, ranging from\ntheory to applications, and stimulate cross-fertilisation.", "AI": {"tldr": "GandALF 2025\u4f1a\u8bae\u8bba\u6587\u96c6\uff0c\u805a\u7126\u6e38\u620f\u3001\u81ea\u52a8\u673a\u3001\u903b\u8f91\u548c\u5f62\u5f0f\u9a8c\u8bc1\u9886\u57df\u7684\u7814\u7a76", "motivation": "\u6c47\u96c6\u5b66\u672f\u754c\u548c\u5de5\u4e1a\u754c\u5728\u6e38\u620f\u3001\u81ea\u52a8\u673a\u3001\u903b\u8f91\u548c\u5f62\u5f0f\u9a8c\u8bc1\u9886\u57df\u7684\u7814\u7a76\u4eba\u5458\uff0c\u4fc3\u8fdb\u7406\u8bba\u5230\u5e94\u7528\u7684\u5e7f\u6cdb\u4e3b\u9898\u4ea4\u6d41\u4e0e\u8de8\u9886\u57df\u878d\u5408", "method": "\u901a\u8fc7\u56fd\u9645\u7814\u8ba8\u4f1a\u5f62\u5f0f\uff0c\u7ec4\u7ec7\u5b66\u672f\u4ea4\u6d41\u4f1a\u8bae\u548c\u8bba\u6587\u96c6\u51fa\u7248", "result": "\u6210\u529f\u4e3e\u529e\u4e86\u7b2c\u5341\u516d\u5c4a\u56fd\u9645\u7814\u8ba8\u4f1a\uff0c\u5e76\u51fa\u7248\u4e86\u5305\u542b\u76f8\u5173\u9886\u57df\u6700\u65b0\u7814\u7a76\u6210\u679c\u7684\u4f1a\u8bae\u8bba\u6587\u96c6", "conclusion": "GandALF\u4f1a\u8bae\u4e3a\u76f8\u5173\u9886\u57df\u7814\u7a76\u8005\u63d0\u4f9b\u4e86\u91cd\u8981\u7684\u4ea4\u6d41\u5e73\u53f0\uff0c\u4fc3\u8fdb\u4e86\u7406\u8bba\u7814\u7a76\u548c\u5b9e\u9645\u5e94\u7528\u7684\u4ea4\u53c9\u878d\u5408"}}
{"id": "2509.13025", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2509.13025", "abs": "https://arxiv.org/abs/2509.13025", "authors": ["Raul Zaharia", "Drago\u015f Gavrilu\u0163", "Gheorghi\u0163\u0103 Mutu"], "title": "GView: A Survey of Binary Forensics via Visual, Semantic, and AI-Enhanced Analysis", "comment": "In Proceedings FROM 2025, arXiv:2509.11877", "summary": "Cybersecurity threats continue to become more sophisticated and diverse in\ntheir artifacts, boosting both their volume and complexity. To overcome those\nchallenges, we present GView, an open-source forensic analysis framework with\nvisual and AI-enhanced reasoning. It started with focus on the practical\ncybersecurity industry. It has evolved significantly, incorporating large\nlanguage models (LLMs) to dynamically enhance reasoning and ease the forensic\nworkflows. This paper surveys both the current state of GView with its\npublished papers alongside those that are in the publishing process. It also\nincludes its innovative use of logical inference through predicates and\ninference rules for both the analyzed documents and the user's actions for\nbetter suggestions. We highlight the extensible architecture, showcasing its\npotential as a bridge between the practical forensics worlds with the academic\nresearch.", "AI": {"tldr": "GView\u662f\u4e00\u4e2a\u5f00\u6e90\u53d6\u8bc1\u5206\u6790\u6846\u67b6\uff0c\u7ed3\u5408\u53ef\u89c6\u5316\u4e0eAI\u589e\u5f3a\u63a8\u7406\uff0c\u5229\u7528\u5927\u8bed\u8a00\u6a21\u578b\u52a8\u6001\u6539\u8fdb\u53d6\u8bc1\u5de5\u4f5c\u6d41\u7a0b\uff0c\u901a\u8fc7\u903b\u8f91\u63a8\u7406\u548c\u53ef\u6269\u5c55\u67b6\u6784\u8fde\u63a5\u5b9e\u8df5\u4e0e\u5b66\u672f\u7814\u7a76\u3002", "motivation": "\u7f51\u7edc\u5b89\u5168\u5a01\u80c1\u65e5\u76ca\u590d\u6742\u591a\u6837\uff0c\u9700\u8981\u66f4\u5148\u8fdb\u7684\u53d6\u8bc1\u5206\u6790\u5de5\u5177\u6765\u5e94\u5bf9\u4e0d\u65ad\u589e\u957f\u7684\u5a01\u80c1\u6570\u91cf\u548c\u590d\u6742\u6027\u3002", "method": "\u5f00\u53d1\u5f00\u6e90\u53d6\u8bc1\u5206\u6790\u6846\u67b6GView\uff0c\u96c6\u6210\u5927\u8bed\u8a00\u6a21\u578b\u8fdb\u884c\u52a8\u6001\u63a8\u7406\u589e\u5f3a\uff0c\u91c7\u7528\u8c13\u8bcd\u548c\u63a8\u7406\u89c4\u5219\u8fdb\u884c\u903b\u8f91\u63a8\u7406\uff0c\u652f\u6301\u5bf9\u5206\u6790\u6587\u6863\u548c\u7528\u6237\u884c\u4e3a\u7684\u667a\u80fd\u5efa\u8bae\u3002", "result": "GView\u5df2\u53d1\u5c55\u6210\u4e3a\u8fde\u63a5\u5b9e\u8df5\u53d6\u8bc1\u4e0e\u5b66\u672f\u7814\u7a76\u7684\u6865\u6881\u5de5\u5177\uff0c\u5177\u6709\u53ef\u6269\u5c55\u67b6\u6784\uff0c\u80fd\u591f\u663e\u8457\u7b80\u5316\u53d6\u8bc1\u5de5\u4f5c\u6d41\u7a0b\u3002", "conclusion": "GView\u6846\u67b6\u901a\u8fc7AI\u589e\u5f3a\u548c\u53ef\u89c6\u5316\u63a8\u7406\uff0c\u6709\u6548\u5e94\u5bf9\u73b0\u4ee3\u7f51\u7edc\u5b89\u5168\u5a01\u80c1\u7684\u590d\u6742\u6027\uff0c\u4e3a\u53d6\u8bc1\u5206\u6790\u63d0\u4f9b\u4e86\u521b\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2509.13055", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.13055", "abs": "https://arxiv.org/abs/2509.13055", "authors": ["Youngkyoung Kim", "Sanghyeok Park", "Misoo Kim", "Gangho Yoon", "Eunseok Lee", "Simon S. Woo"], "title": "Automating Code Generation for Semiconductor Equipment Control from Developer Utterances with LLMs", "comment": null, "summary": "Semiconductors form the backbone of modern electronics, with their\nmanufacturing and testing relying on highly specialized equipment and\ndomain-specific programming languages. Equipment languages such as the\nAlgorithmic Pattern Generator (ALPG) are critical for precise hardware control\nbut are challenging to program due to their low-level syntax and steep learning\ncurve. While large language models (LLMs) have shown promise in generating\nhigh-level code from natural language, their effectiveness on low-level\nequipment languages remains limited. To address this, we propose Progressive\nKnowledge Enhancement (PKE), a novel multi-stage prompting framework that\nprogressively extracts and activates the latent knowledge within LLMs, guiding\nthem from simple to complex examples without extensive fine-tuning. Empirical\nevaluation on an industrial ALPG dataset shows that PKE significantly\noutperforms standard prompting and surpasses state-of-the-art methods in\ngenerating correct ALPG code, achieving 11.1\\% and 15.2\\% higher exact match\nscores compared to the second-best technique. Further analysis of individual\ncomponents confirms that progressive knowledge extraction based on difficulty\nenhances accuracy. Our study offer a practical approach to boosting LLM\ncapabilities for specialized low-level programming, supporting greater\nproductivity in semiconductor software development.", "AI": {"tldr": "\u63d0\u51fa\u6e10\u8fdb\u5f0f\u77e5\u8bc6\u589e\u5f3a(PKE)\u6846\u67b6\uff0c\u901a\u8fc7\u591a\u9636\u6bb5\u63d0\u793a\u9010\u6b65\u63d0\u53d6LLM\u6f5c\u5728\u77e5\u8bc6\uff0c\u663e\u8457\u63d0\u5347\u534a\u5bfc\u4f53\u8bbe\u5907\u8bed\u8a00ALPG\u4ee3\u7801\u751f\u6210\u51c6\u786e\u7387", "motivation": "\u534a\u5bfc\u4f53\u8bbe\u5907\u7f16\u7a0b\u8bed\u8a00(\u5982ALPG)\u8bed\u6cd5\u5e95\u5c42\u3001\u5b66\u4e60\u66f2\u7ebf\u9661\u5ced\uff0c\u73b0\u6709LLM\u5728\u751f\u6210\u8fd9\u7c7b\u4f4e\u7ea7\u8bbe\u5907\u8bed\u8a00\u4ee3\u7801\u65b9\u9762\u6548\u679c\u6709\u9650", "method": "\u6e10\u8fdb\u5f0f\u77e5\u8bc6\u589e\u5f3a(PKE)\u6846\u67b6\uff0c\u901a\u8fc7\u4ece\u7b80\u5355\u5230\u590d\u6742\u7684\u591a\u9636\u6bb5\u63d0\u793a\u9010\u6b65\u6fc0\u6d3bLLM\u7684\u6f5c\u5728\u77e5\u8bc6\uff0c\u65e0\u9700\u5927\u91cf\u5fae\u8c03", "result": "\u5728\u5de5\u4e1aALPG\u6570\u636e\u96c6\u4e0a\uff0cPKE\u663e\u8457\u4f18\u4e8e\u6807\u51c6\u63d0\u793a\u65b9\u6cd5\uff0c\u6bd4\u6b21\u4f18\u6280\u672f\u9ad8\u51fa11.1%\u548c15.2%\u7684\u7cbe\u786e\u5339\u914d\u5206\u6570", "conclusion": "PKE\u4e3a\u63d0\u5347LLM\u5728\u4e13\u4e1a\u4f4e\u7ea7\u7f16\u7a0b\u65b9\u9762\u7684\u80fd\u529b\u63d0\u4f9b\u4e86\u5b9e\u7528\u65b9\u6cd5\uff0c\u652f\u6301\u534a\u5bfc\u4f53\u8f6f\u4ef6\u5f00\u53d1\u751f\u4ea7\u529b\u7684\u63d0\u5347"}}
{"id": "2509.13103", "categories": ["cs.SE", "D.2"], "pdf": "https://arxiv.org/pdf/2509.13103", "abs": "https://arxiv.org/abs/2509.13103", "authors": ["Santiago Matalonga", "Domenico Amalfitano", "Jean Carlo Rossa Hauck", "Mart\u00edn Solari", "Guilherme H. Travassos"], "title": "Accelerating Discovery: Rapid Literature Screening with LLMs", "comment": "This version of the manuscript has been submitted to Empirical\n  Software Engieering Journal for consideration", "summary": "Background: Conducting Multi Vocal Literature Reviews (MVLRs) is often time\nand effort-intensive. Researchers must review and filter a large number of\nunstructured sources, which frequently contain sparse information and are\nunlikely to be included in the final study. Our experience conducting an MVLR\non Context-Aware Software Systems (CASS) Testing in the avionics domain\nexemplified this challenge, with over 8,000 highly heterogeneous documents\nrequiring review. Therefore, we developed a Large Language Model (LLM)\nassistant to support the search and filtering of documents. Aims: To develop\nand validate an LLM based tool that can support researchers in performing the\nsearch and filtering of documents for an MVLR without compromising the rigor of\nthe research protocol. Method: We applied sound engineering practices to\ndevelop an on-premises LLM-based tool incorporating Retrieval Augmented\nGeneration (RAG) to process candidate sources. Progress towards the aim was\nquantified using the Positive Percent Agreement (PPA) as the primary metric to\nensure the performance of the LLM based tool. Convenience sampling, supported\nby human judgment and statistical sampling, were used to verify and validate\nthe tool's quality-in-use. Results: The tool currently demonstrates a PPA\nagreement with human researchers of 90% for sources that are not relevant to\nthe study. Development details are shared to support domain-specific adaptation\nof the tool. Conclusions: Using LLM-based tools to support academic researchers\nin rigorous MVLR is feasible. These tools can free valuable time for\nhigher-level, abstract tasks. However, researcher participation remains\nessential to ensure that the tool supports thorough research.", "AI": {"tldr": "\u5f00\u53d1\u4e86\u4e00\u4e2a\u57fa\u4e8eLLM\u7684\u5de5\u5177\u6765\u652f\u6301\u591a\u58f0\u90e8\u6587\u732e\u7efc\u8ff0\u4e2d\u7684\u6587\u6863\u641c\u7d22\u548c\u7b5b\u9009\uff0c\u8be5\u5de5\u5177\u5728\u8bc6\u522b\u4e0d\u76f8\u5173\u6587\u732e\u65b9\u9762\u4e0e\u4eba\u5de5\u7814\u7a76\u8005\u670990%\u7684\u4e00\u81f4\u6027\uff0c\u80fd\u591f\u8282\u7701\u7814\u7a76\u4eba\u5458\u65f6\u95f4\u7528\u4e8e\u66f4\u9ad8\u7ea7\u522b\u7684\u62bd\u8c61\u4efb\u52a1\u3002", "motivation": "\u591a\u58f0\u90e8\u6587\u732e\u7efc\u8ff0(MVLR)\u8fc7\u7a0b\u8017\u65f6\u8017\u529b\uff0c\u7814\u7a76\u4eba\u5458\u9700\u8981\u5ba1\u67e5\u548c\u7b5b\u9009\u5927\u91cf\u975e\u7ed3\u6784\u5316\u6587\u6863\uff0c\u5176\u4e2d\u5f88\u591a\u4fe1\u606f\u7a00\u758f\u4e14\u4e0d\u592a\u53ef\u80fd\u88ab\u7eb3\u5165\u6700\u7ec8\u7814\u7a76\u3002\u5728\u822a\u7a7a\u7535\u5b50\u9886\u57df\u7684\u4e0a\u4e0b\u6587\u611f\u77e5\u8f6f\u4ef6\u7cfb\u7edf\u6d4b\u8bd5MVLR\u4e2d\uff0c\u9700\u8981\u5ba1\u67e5\u8d85\u8fc78000\u4efd\u9ad8\u5ea6\u5f02\u6784\u7684\u6587\u6863\uff0c\u56e0\u6b64\u9700\u8981\u5f00\u53d1LLM\u52a9\u624b\u6765\u652f\u6301\u6587\u6863\u641c\u7d22\u548c\u7b5b\u9009\u3002", "method": "\u5e94\u7528\u5065\u5168\u7684\u5de5\u7a0b\u5b9e\u8df5\u5f00\u53d1\u57fa\u4e8e\u672c\u5730\u90e8\u7f72\u7684LLM\u5de5\u5177\uff0c\u6574\u5408\u68c0\u7d22\u589e\u5f3a\u751f\u6210(RAG)\u6280\u672f\u5904\u7406\u5019\u9009\u6587\u732e\u6e90\u3002\u4f7f\u7528\u9633\u6027\u4e00\u81f4\u6027\u767e\u5206\u6bd4(PPA)\u4f5c\u4e3a\u4e3b\u8981\u6307\u6807\u91cf\u5316\u5de5\u5177\u6027\u80fd\uff0c\u901a\u8fc7\u4fbf\u5229\u62bd\u6837\u3001\u4eba\u5de5\u5224\u65ad\u548c\u7edf\u8ba1\u62bd\u6837\u6765\u9a8c\u8bc1\u5de5\u5177\u7684\u4f7f\u7528\u8d28\u91cf\u3002", "result": "\u5f53\u524d\u5de5\u5177\u5728\u8bc6\u522b\u4e0e\u7814\u7a76\u4e0d\u76f8\u5173\u7684\u6587\u732e\u6e90\u65b9\u9762\uff0c\u4e0e\u4eba\u5de5\u7814\u7a76\u8005\u7684\u4e00\u81f4\u6027\u8fbe\u523090%\u3002\u5206\u4eab\u4e86\u5f00\u53d1\u7ec6\u8282\u4ee5\u652f\u6301\u5de5\u5177\u7684\u9886\u57df\u7279\u5b9a\u9002\u914d\u3002", "conclusion": "\u4f7f\u7528\u57fa\u4e8eLLM\u7684\u5de5\u5177\u652f\u6301\u5b66\u672f\u7814\u7a76\u4eba\u5458\u8fdb\u884c\u4e25\u8c28\u7684MVLR\u662f\u53ef\u884c\u7684\uff0c\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u91ca\u653e\u5b9d\u8d35\u65f6\u95f4\u7528\u4e8e\u66f4\u9ad8\u7ea7\u522b\u7684\u62bd\u8c61\u4efb\u52a1\uff0c\u4f46\u7814\u7a76\u4eba\u5458\u7684\u53c2\u4e0e\u4ecd\u7136\u662f\u786e\u4fdd\u5de5\u5177\u652f\u6301\u5f7b\u5e95\u7814\u7a76\u7684\u5173\u952e\u3002"}}
{"id": "2509.13117", "categories": ["cs.SE", "cs.CR"], "pdf": "https://arxiv.org/pdf/2509.13117", "abs": "https://arxiv.org/abs/2509.13117", "authors": ["Jukka Ruohonen", "Sani Abdullahi", "Abhishek Tiwari"], "title": "Vulnerability Patching Across Software Products and Software Components: A Case Study of Red Hat's Product Portfolio", "comment": "Submitted to SecITC 2025", "summary": "Motivated by software maintenance and the more recent concept of security\ndebt, the paper presents a time series analysis of vulnerability patching of\nRed Hat's products and components between 1999 and 2024. According to the\nresults based on segmented regression analysis, the amounts of vulnerable\nproducts and components have not been stable; a linear trend describes many of\nthe series well. Nor do the amounts align well with trends characterizing\nvulnerabilities in general. There are also visible breakpoints indicating that\nthe linear trend is not universally applicable and that the growing security\ndebt may be stabilizing.", "AI": {"tldr": "\u5bf9Red Hat\u4ea7\u54c11999-2024\u5e74\u6f0f\u6d1e\u4fee\u590d\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u663e\u793a\uff0c\u6613\u53d7\u653b\u51fb\u4ea7\u54c1\u548c\u7ec4\u4ef6\u6570\u91cf\u4e0d\u7a33\u5b9a\uff0c\u5448\u7ebf\u6027\u589e\u957f\u8d8b\u52bf\uff0c\u4f46\u4e0e\u6574\u4f53\u6f0f\u6d1e\u8d8b\u52bf\u4e0d\u4e00\u81f4\uff0c\u4e14\u5b58\u5728\u8f6c\u6298\u70b9\u8868\u660e\u5b89\u5168\u503a\u52a1\u589e\u957f\u53ef\u80fd\u8d8b\u4e8e\u7a33\u5b9a\u3002", "motivation": "\u57fa\u4e8e\u8f6f\u4ef6\u7ef4\u62a4\u548c\u5b89\u5168\u503a\u52a1\u6982\u5ff5\uff0c\u7814\u7a76Red Hat\u4ea7\u54c1\u6f0f\u6d1e\u4fee\u590d\u7684\u65f6\u95f4\u5e8f\u5217\u7279\u5f81\uff0c\u4e86\u89e3\u5b89\u5168\u503a\u52a1\u7684\u6f14\u53d8\u8d8b\u52bf\u3002", "method": "\u91c7\u7528\u5206\u6bb5\u56de\u5f52\u5206\u6790\u65b9\u6cd5\u5bf9Red Hat\u4ea7\u54c11999-2024\u5e74\u95f4\u7684\u6f0f\u6d1e\u4fee\u590d\u6570\u636e\u8fdb\u884c\u65f6\u95f4\u5e8f\u5217\u5206\u6790\u3002", "result": "\u6613\u53d7\u653b\u51fb\u4ea7\u54c1\u548c\u7ec4\u4ef6\u6570\u91cf\u4e0d\u7a33\u5b9a\uff0c\u591a\u6570\u5e8f\u5217\u5448\u73b0\u7ebf\u6027\u589e\u957f\u8d8b\u52bf\uff0c\u4f46\u4e0e\u6574\u4f53\u6f0f\u6d1e\u8d8b\u52bf\u4e0d\u4e00\u81f4\uff0c\u5b58\u5728\u660e\u663e\u8f6c\u6298\u70b9\u3002", "conclusion": "\u7ebf\u6027\u8d8b\u52bf\u5e76\u975e\u666e\u904d\u9002\u7528\uff0c\u5b89\u5168\u503a\u52a1\u7684\u589e\u957f\u53ef\u80fd\u6b63\u5728\u8d8b\u4e8e\u7a33\u5b9a\uff0c\u9700\u8981\u6301\u7eed\u76d1\u63a7\u548c\u7ba1\u7406\u5b89\u5168\u503a\u52a1\u3002"}}
{"id": "2509.13134", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.13134", "abs": "https://arxiv.org/abs/2509.13134", "authors": ["Talaya Farasat", "Joachim Posegga"], "title": "Optimizing Code Embeddings and ML Classifiers for Python Source Code Vulnerability Detection", "comment": null, "summary": "In recent years, the growing complexity and scale of source code have\nrendered manual software vulnerability detection increasingly impractical. To\naddress this challenge, automated approaches leveraging machine learning and\ncode embeddings have gained substantial attention. This study investigates the\noptimal combination of code embedding techniques and machine learning\nclassifiers for vulnerability detection in Python source code. We evaluate\nthree embedding techniques, i.e., Word2Vec, CodeBERT, and GraphCodeBERT\nalongside two deep learning classifiers, i.e., Bidirectional Long Short-Term\nMemory (BiLSTM) networks and Convolutional Neural Networks (CNN). While CNN\npaired with GraphCodeBERT exhibits strong performance, the BiLSTM model using\nWord2Vec consistently achieves superior overall results. These findings suggest\nthat, despite the advanced architectures of recent models like CodeBERT and\nGraphCodeBERT, classical embeddings such as Word2Vec, when used with\nsequence-based models like BiLSTM, can offer a slight yet consistent\nperformance advantage. The study underscores the critical importance of\nselecting appropriate combinations of embeddings and classifiers to enhance the\neffectiveness of automated vulnerability detection systems, particularly for\nPython source code.", "AI": {"tldr": "\u672c\u7814\u7a76\u8bc4\u4f30\u4e86Word2Vec\u3001CodeBERT\u548cGraphCodeBERT\u4e09\u79cd\u4ee3\u7801\u5d4c\u5165\u6280\u672f\u4e0eBiLSTM\u548cCNN\u4e24\u79cd\u6df1\u5ea6\u5b66\u4e60\u5206\u7c7b\u5668\u5728Python\u6e90\u4ee3\u7801\u6f0f\u6d1e\u68c0\u6d4b\u4e2d\u7684\u7ec4\u5408\u6548\u679c\u3002\u7814\u7a76\u53d1\u73b0\uff0c\u5c3d\u7ba1GraphCodeBERT+CNN\u8868\u73b0\u826f\u597d\uff0c\u4f46Word2Vec+BiLSTM\u7ec4\u5408\u59cb\u7ec8\u83b7\u5f97\u6700\u4f73\u6027\u80fd\u3002", "motivation": "\u968f\u7740\u6e90\u4ee3\u7801\u590d\u6742\u6027\u548c\u89c4\u6a21\u7684\u589e\u52a0\uff0c\u624b\u52a8\u6f0f\u6d1e\u68c0\u6d4b\u53d8\u5f97\u4e0d\u5207\u5b9e\u9645\uff0c\u9700\u8981\u7814\u7a76\u81ea\u52a8\u5316\u7684\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u3002\u672c\u7814\u7a76\u65e8\u5728\u5bfb\u627e\u4ee3\u7801\u5d4c\u5165\u6280\u672f\u548c\u673a\u5668\u5b66\u4e60\u5206\u7c7b\u5668\u7684\u6700\u4f73\u7ec4\u5408\uff0c\u4ee5\u63d0\u9ad8Python\u6e90\u4ee3\u7801\u6f0f\u6d1e\u68c0\u6d4b\u7684\u6548\u679c\u3002", "method": "\u8bc4\u4f30\u4e86\u4e09\u79cd\u4ee3\u7801\u5d4c\u5165\u6280\u672f\uff08Word2Vec\u3001CodeBERT\u3001GraphCodeBERT\uff09\u548c\u4e24\u79cd\u6df1\u5ea6\u5b66\u4e60\u5206\u7c7b\u5668\uff08\u53cc\u5411\u957f\u77ed\u671f\u8bb0\u5fc6\u7f51\u7edcBiLSTM\u3001\u5377\u79ef\u795e\u7ecf\u7f51\u7edcCNN\uff09\u7684\u4e0d\u540c\u7ec4\u5408\u3002", "result": "CNN\u4e0eGraphCodeBERT\u7ec4\u5408\u8868\u73b0\u826f\u597d\uff0c\u4f46BiLSTM\u4e0eWord2Vec\u7ec4\u5408\u59cb\u7ec8\u83b7\u5f97\u6700\u4f18\u7684\u6574\u4f53\u6027\u80fd\uff0c\u8868\u660e\u7ecf\u5178\u5d4c\u5165\u6280\u672f\u4e0e\u5e8f\u5217\u6a21\u578b\u7684\u7ec4\u5408\u4ecd\u5177\u6709\u4f18\u52bf\u3002", "conclusion": "\u9009\u62e9\u5408\u9002\u7684\u5d4c\u5165\u6280\u672f\u548c\u5206\u7c7b\u5668\u7ec4\u5408\u5bf9\u4e8e\u63d0\u9ad8\u81ea\u52a8\u5316\u6f0f\u6d1e\u68c0\u6d4b\u7cfb\u7edf\u7684\u6709\u6548\u6027\u81f3\u5173\u91cd\u8981\uff0c\u7279\u522b\u662f\u5728Python\u6e90\u4ee3\u7801\u68c0\u6d4b\u4e2d\uff0c\u7ecf\u5178\u65b9\u6cd5\u5982Word2Vec\u4e0eBiLSTM\u7684\u7ec4\u5408\u4ecd\u80fd\u63d0\u4f9b\u7a33\u5b9a\u4f18\u52bf\u3002"}}
{"id": "2509.13144", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2509.13144", "abs": "https://arxiv.org/abs/2509.13144", "authors": ["Lingli Cao", "Shanshan Li", "Ying Fan", "Danyang Li", "Chenxing Zhong"], "title": "Towards the Next Generation of Software: Insights from Grey Literature on AI-Native Applications", "comment": null, "summary": "Background: The rapid advancement of large language models (LLMs) has given\nrise to AI-native applications, a new paradigm in software engineering that\nfundamentally redefines how software is designed, developed, and evolved.\nDespite their growing prominence, AI-native applications still lack a unified\nengineering definition and architectural blueprint, leaving practitioners\nwithout systematic guidance for system design, quality assurance, and\ntechnology selection.\n  Objective: This study seeks to establish a comprehensive understanding of\nAI-native applications by identifying their defining characteristics, key\nquality attributes, and typical technology stacks, as well as by clarifying the\nopportunities and challenges they present.\n  Method: We conducted a grey literature review, integrating conceptual\nperspectives retrieved from targeted Google and Bing searches with practical\ninsights derived from leading open-source projects on GitHub. A structured\nprotocol encompassing source selection, quality assessment, and thematic\nanalysis was applied to synthesize findings across heterogeneous sources.\n  Results: We finally identified 106 studies based on the selection criteria.\nThe analysis reveals that AI-native applications are distinguished by two core\npillars: the central role of AI as the system's intelligence paradigm and their\ninherently probabilistic, non-deterministic nature. Critical quality attributes\ninclude reliability, usability, performance efficiency, and AI-specific\nobservability. In addition, a typical technology stack has begun to emerge,\ncomprising LLM orchestration frameworks, vector databases, and AI-native\nobservability platforms. These systems emphasize response quality,\ncost-effectiveness, and outcome predictability, setting them apart from\nconventional software systems.\n  Conclusion: This study is the first to propose a dual-layered engineering\nblueprint...", "AI": {"tldr": "\u672c\u7814\u7a76\u901a\u8fc7\u7070\u8272\u6587\u732e\u7efc\u8ff0\u9996\u6b21\u63d0\u51fa\u4e86AI\u539f\u751f\u5e94\u7528\u7684\u53cc\u5c42\u5de5\u7a0b\u84dd\u56fe\uff0c\u660e\u786e\u4e86\u5176\u4ee5AI\u4e3a\u6838\u5fc3\u667a\u80fd\u8303\u5f0f\u548c\u6982\u7387\u6027\u672c\u8d28\u7684\u4e24\u5927\u652f\u67f1\u7279\u5f81\uff0c\u8bc6\u522b\u4e86\u5173\u952e\u8d28\u91cf\u5c5e\u6027\u548c\u5178\u578b\u6280\u672f\u6808\u3002", "motivation": "\u968f\u7740\u5927\u8bed\u8a00\u6a21\u578b\u7684\u5feb\u901f\u53d1\u5c55\uff0cAI\u539f\u751f\u5e94\u7528\u4f5c\u4e3a\u4e00\u79cd\u65b0\u7684\u8f6f\u4ef6\u5de5\u7a0b\u8303\u5f0f\u6b63\u5728\u5174\u8d77\uff0c\u4f46\u76ee\u524d\u7f3a\u4e4f\u7edf\u4e00\u7684\u5de5\u7a0b\u5b9a\u4e49\u548c\u67b6\u6784\u84dd\u56fe\uff0c\u4ece\u4e1a\u8005\u7f3a\u4e4f\u7cfb\u7edf\u6027\u7684\u8bbe\u8ba1\u3001\u8d28\u91cf\u4fdd\u8bc1\u548c\u6280\u672f\u9009\u62e9\u6307\u5bfc\u3002", "method": "\u91c7\u7528\u7070\u8272\u6587\u732e\u7efc\u8ff0\u65b9\u6cd5\uff0c\u7ed3\u5408Google\u548cBing\u641c\u7d22\u83b7\u53d6\u7684\u6982\u5ff5\u89c6\u89d2\u4e0eGitHub\u4e0a\u9886\u5148\u5f00\u6e90\u9879\u76ee\u7684\u5b9e\u8df5\u6d1e\u5bdf\uff0c\u901a\u8fc7\u5305\u542b\u6765\u6e90\u9009\u62e9\u3001\u8d28\u91cf\u8bc4\u4f30\u548c\u4e3b\u9898\u5206\u6790\u7684\u7ed3\u6784\u5316\u534f\u8bae\u5bf9\u5f02\u6784\u6765\u6e90\u8fdb\u884c\u7efc\u5408\u5206\u6790\u3002", "result": "\u57fa\u4e8e\u9009\u62e9\u6807\u51c6\u6700\u7ec8\u786e\u5b9a\u4e86106\u9879\u7814\u7a76\uff0c\u5206\u6790\u53d1\u73b0AI\u539f\u751f\u5e94\u7528\u5177\u6709\u4e24\u5927\u6838\u5fc3\u652f\u67f1\uff1aAI\u4f5c\u4e3a\u7cfb\u7edf\u667a\u80fd\u8303\u5f0f\u7684\u6838\u5fc3\u4f5c\u7528\u53ca\u5176\u56fa\u6709\u7684\u6982\u7387\u6027\u3001\u975e\u786e\u5b9a\u6027\u672c\u8d28\u3002\u5173\u952e\u8d28\u91cf\u5c5e\u6027\u5305\u62ec\u53ef\u9760\u6027\u3001\u53ef\u7528\u6027\u3001\u6027\u80fd\u6548\u7387\u548cAI\u7279\u5b9a\u7684\u53ef\u89c2\u6d4b\u6027\u3002\u5178\u578b\u6280\u672f\u6808\u5305\u62ecLLM\u7f16\u6392\u6846\u67b6\u3001\u5411\u91cf\u6570\u636e\u5e93\u548cAI\u539f\u751f\u53ef\u89c2\u6d4b\u6027\u5e73\u53f0\u3002", "conclusion": "\u672c\u7814\u7a76\u9996\u6b21\u63d0\u51fa\u4e86AI\u539f\u751f\u5e94\u7528\u7684\u53cc\u5c42\u5de5\u7a0b\u84dd\u56fe\uff0c\u4e3a\u4ece\u4e1a\u8005\u63d0\u4f9b\u4e86\u7cfb\u7edf\u6027\u7684\u8bbe\u8ba1\u6307\u5bfc\uff0c\u5f3a\u8c03\u4e86\u54cd\u5e94\u8d28\u91cf\u3001\u6210\u672c\u6548\u76ca\u548c\u7ed3\u679c\u53ef\u9884\u6d4b\u6027\u7b49\u533a\u522b\u4e8e\u4f20\u7edf\u8f6f\u4ef6\u7cfb\u7edf\u7684\u7279\u70b9\u3002"}}
