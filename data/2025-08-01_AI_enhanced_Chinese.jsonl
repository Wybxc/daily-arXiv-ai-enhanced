{"id": "2507.23603", "categories": ["cs.LO"], "pdf": "https://arxiv.org/pdf/2507.23603", "abs": "https://arxiv.org/abs/2507.23603", "authors": ["Andoni Rodriguez", "Irfansha Shaik", "Davide Corsi", "Roy Fox", "Cesar Sanchez"], "title": "Explanations for Unrealizability of Infinite-State Safety Shields", "comment": null, "summary": "Safe Reinforcement Learning focuses on developing optimal policies while\nensuring safety. A popular method to address such task is shielding, in which a\ncorrect-by-construction safety component is synthesized from logical\nspecifications. Recently, shield synthesis has been extended to infinite-state\ndomains, such as continuous environments. This makes shielding more applicable\nto realistic scenarios. However, often shields might be unrealizable because\nthe specification is inconsistent (e.g., contradictory). In order to address\nthis gap, we present a method to obtain simple unconditional and conditional\nexplanations that witness unrealizability, which goes by temporal formula\nunrolling. In this paper, we show different variants of the technique and its\napplicability.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u901a\u8fc7\u65f6\u95f4\u516c\u5f0f\u5c55\u5f00\u7684\u65b9\u6cd5\uff0c\u4e3a\u4e0d\u53ef\u5b9e\u73b0\u7684\u5c4f\u853d\u63d0\u4f9b\u65e0\u6761\u4ef6\u6216\u6709\u6761\u4ef6\u7684\u89e3\u91ca\uff0c\u4ee5\u89e3\u51b3\u5b89\u5168\u5f3a\u5316\u5b66\u4e60\u4e2d\u89c4\u8303\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002", "motivation": "\u5b89\u5168\u5f3a\u5316\u5b66\u4e60\u4e2d\uff0c\u5c4f\u853d\u65b9\u6cd5\u5e38\u56e0\u89c4\u8303\u4e0d\u4e00\u81f4\u800c\u4e0d\u53ef\u5b9e\u73b0\uff0c\u9700\u8981\u4e00\u79cd\u89e3\u91ca\u65b9\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e00\u7f3a\u9677\u3002", "method": "\u91c7\u7528\u65f6\u95f4\u516c\u5f0f\u5c55\u5f00\u6280\u672f\uff0c\u751f\u6210\u65e0\u6761\u4ef6\u6216\u6709\u6761\u4ef6\u7684\u89e3\u91ca\uff0c\u4ee5\u8bc1\u660e\u5c4f\u853d\u7684\u4e0d\u53ef\u5b9e\u73b0\u6027\u3002", "result": "\u5c55\u793a\u4e86\u8be5\u6280\u672f\u7684\u4e0d\u540c\u53d8\u4f53\u53ca\u5176\u9002\u7528\u6027\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u4e3a\u89e3\u51b3\u5c4f\u853d\u4e0d\u53ef\u5b9e\u73b0\u6027\u95ee\u9898\u63d0\u4f9b\u4e86\u6709\u6548\u7684\u89e3\u91ca\u5de5\u5177\u3002"}}
{"id": "2507.23151", "categories": ["cs.PL", "cs.LO"], "pdf": "https://arxiv.org/pdf/2507.23151", "abs": "https://arxiv.org/abs/2507.23151", "authors": ["Louis Rustenholz", "Pedro Lopez-Garcia", "Manuel V. Hermenegildo"], "title": "Abstractions of Sequences, Functions and Operators", "comment": "Under consideration for publication in STTT", "summary": "We present theoretical and practical results on the order theory of lattices\nof functions, focusing on Galois connections that abstract (sets of) functions\n- a topic known as higher-order abstract interpretation.\n  We are motivated by the challenge of inferring closed-form bounds on\nfunctions which are defined recursively, i.e. as the fixed point of an operator\nor, equivalently, as the solution to a functional equation. This has multiple\napplications in program analysis (e.g. cost analysis, loop acceleration,\ndeclarative language analysis) and in hybrid systems governed by differential\nequations.\n  Our main contribution is a new family of constraint-based abstract domains\nfor abstracting numerical functions, B-bound domains, which abstract a function\nf by a conjunction of bounds from a preselected set of boundary functions. They\nallow inferring highly non-linear numerical invariants, which classical\nnumerical abstract domains struggle with. We uncover a convexity property in\nthe constraint space that simplifies, and, in some cases, fully automates,\ntransfer function design.\n  We also introduce domain abstraction, a functor that lifts arbitrary mappings\nin value space to Galois connections in function space. This supports\nabstraction from symbolic to numerical functions (i.e. size abstraction), and\nenables dimensionality reduction of equations.\n  We base our constructions of transfer functions on a simple operator\nlanguage, starting with sequences, and extending to more general functions,\nincluding multivariate, piecewise, and non-discrete domains.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u7ea6\u675f\u62bd\u8c61\u57df\uff08B-bound domains\uff09\uff0c\u7528\u4e8e\u62bd\u8c61\u6570\u503c\u51fd\u6570\uff0c\u5e76\u5f15\u5165\u57df\u62bd\u8c61\uff08domain abstraction\uff09\u6280\u672f\uff0c\u652f\u6301\u4ece\u7b26\u53f7\u51fd\u6570\u5230\u6570\u503c\u51fd\u6570\u7684\u8f6c\u6362\u3002", "motivation": "\u7814\u7a76\u52a8\u673a\u662f\u89e3\u51b3\u9012\u5f52\u5b9a\u4e49\u7684\u51fd\u6570\u7684\u95ed\u5f0f\u8fb9\u754c\u63a8\u65ad\u95ee\u9898\uff0c\u5e94\u7528\u4e8e\u7a0b\u5e8f\u5206\u6790\u548c\u6df7\u5408\u7cfb\u7edf\u3002", "method": "\u65b9\u6cd5\u5305\u62ec\u63d0\u51faB-bound domains\u62bd\u8c61\u57df\uff0c\u5229\u7528\u51f8\u6027\u7b80\u5316\u4f20\u9012\u51fd\u6570\u8bbe\u8ba1\uff0c\u5e76\u5f15\u5165\u57df\u62bd\u8c61\u6280\u672f\u3002", "result": "\u7ed3\u679c\u5c55\u793a\u4e86B-bound domains\u80fd\u591f\u63a8\u65ad\u9ad8\u5ea6\u975e\u7ebf\u6027\u6570\u503c\u4e0d\u53d8\u91cf\uff0c\u4f18\u4e8e\u4f20\u7edf\u6570\u503c\u62bd\u8c61\u57df\u3002", "conclusion": "\u7ed3\u8bba\u662f\u8be5\u65b9\u6cd5\u5728\u7a0b\u5e8f\u5206\u6790\u548c\u6df7\u5408\u7cfb\u7edf\u4e2d\u5177\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u6f5c\u529b\u3002"}}
{"id": "2507.23205", "categories": ["cs.PL", "cs.SE"], "pdf": "https://arxiv.org/pdf/2507.23205", "abs": "https://arxiv.org/abs/2507.23205", "authors": ["Hebi Li", "Forrest Sheng Bao", "Qi Xiao", "Jin Tian"], "title": "Kernel-FFI: Transparent Foreign Function Interfaces for Interactive Notebooks", "comment": null, "summary": "Foreign Function Interfaces (FFIs) are essential for enabling\ninteroperability between programming languages, yet existing FFI solutions are\nill-suited for the dynamic, interactive workflows prevalent in modern notebook\nenvironments such as Jupyter. Current approaches require extensive manual\nconfiguration, introduce significant boilerplate, and often lack support for\nrecursive calls and object-oriented programming (OOP) constructs-features\ncritical for productive, multi-language development.\n  We present Kernel-FFI, a transparent, language-agnostic framework that\nenables seamless cross-language function calls and object manipulation within\ninteractive notebooks. Kernel-FFI employs source-level transformation to\nautomatically rewrite cross-language invocations, eliminating the need for\nmanual bindings or boilerplate. Kernel-FFI provides robust support for OOP by\nenabling foreign object referencing and automatic resource management across\nlanguage boundaries. Furthermore, to address the blocking nature of Jupyter\nkernels and support recursive and asynchronous foreign calls, we introduce a\nnovel side-channel communication mechanism. Our tool will be open-sourced and\navailable at https://codepod.io/docs/kernel-ffi", "AI": {"tldr": "Kernel-FFI\u662f\u4e00\u4e2a\u8bed\u8a00\u65e0\u5173\u7684\u6846\u67b6\uff0c\u7528\u4e8e\u5728\u4ea4\u4e92\u5f0f\u7b14\u8bb0\u672c\u4e2d\u5b9e\u73b0\u65e0\u7f1d\u8de8\u8bed\u8a00\u51fd\u6570\u8c03\u7528\u548c\u5bf9\u8c61\u64cd\u4f5c\uff0c\u89e3\u51b3\u4e86\u73b0\u6709FFI\u89e3\u51b3\u65b9\u6848\u5728\u52a8\u6001\u5de5\u4f5c\u6d41\u4e2d\u7684\u4e0d\u8db3\u3002", "motivation": "\u73b0\u6709FFI\u89e3\u51b3\u65b9\u6848\u5728\u52a8\u6001\u3001\u4ea4\u4e92\u5f0f\u7b14\u8bb0\u672c\u73af\u5883\u4e2d\uff08\u5982Jupyter\uff09\u5b58\u5728\u914d\u7f6e\u590d\u6742\u3001\u6837\u677f\u4ee3\u7801\u591a\u3001\u7f3a\u4e4f\u5bf9\u9012\u5f52\u8c03\u7528\u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08OOP\uff09\u7684\u652f\u6301\u7b49\u95ee\u9898\u3002", "method": "Kernel-FFI\u901a\u8fc7\u6e90\u4ee3\u7801\u7ea7\u8f6c\u6362\u81ea\u52a8\u91cd\u5199\u8de8\u8bed\u8a00\u8c03\u7528\uff0c\u65e0\u9700\u624b\u52a8\u7ed1\u5b9a\u6216\u6837\u677f\u4ee3\u7801\uff0c\u5e76\u652f\u6301OOP\u548c\u8de8\u8bed\u8a00\u8d44\u6e90\u7ba1\u7406\u3002\u6b64\u5916\uff0c\u901a\u8fc7\u4fa7\u4fe1\u9053\u901a\u4fe1\u673a\u5236\u89e3\u51b3Jupyter\u5185\u6838\u7684\u963b\u585e\u95ee\u9898\u3002", "result": "Kernel-FFI\u5b9e\u73b0\u4e86\u65e0\u7f1d\u8de8\u8bed\u8a00\u8c03\u7528\u548c\u5bf9\u8c61\u64cd\u4f5c\uff0c\u652f\u6301\u9012\u5f52\u548c\u5f02\u6b65\u8c03\u7528\uff0c\u89e3\u51b3\u4e86\u73b0\u6709FFI\u7684\u5c40\u9650\u6027\u3002", "conclusion": "Kernel-FFI\u4e3a\u52a8\u6001\u7b14\u8bb0\u672c\u73af\u5883\u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u6548\u3001\u900f\u660e\u7684\u8de8\u8bed\u8a00\u4e92\u64cd\u4f5c\u89e3\u51b3\u65b9\u6848\uff0c\u672a\u6765\u5c06\u5f00\u6e90\u3002"}}
{"id": "2507.23087", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.23087", "abs": "https://arxiv.org/abs/2507.23087", "authors": ["Fabian Stiehle", "Hans Weytjens", "Ingo Weber"], "title": "On LLM-Assisted Generation of Smart Contracts from Business Processes", "comment": "Accepted at the Workshop on Distributed Ledger Technologies in\n  Business Process Management, At the International Conference for Business\n  Process Management (BPM), 2025", "summary": "Large language models (LLMs) have changed the reality of how software is\nproduced. Within the wider software engineering community, among many other\npurposes, they are explored for code generation use cases from different types\nof input. In this work, we present an exploratory study to investigate the use\nof LLMs for generating smart contract code from business process descriptions,\nan idea that has emerged in recent literature to overcome the limitations of\ntraditional rule-based code generation approaches. However, current LLM-based\nwork evaluates generated code on small samples, relying on manual inspection,\nor testing whether code compiles but ignoring correct execution. With this\nwork, we introduce an automated evaluation framework and provide empirical data\nfrom larger data sets of process models. We test LLMs of different types and\nsizes in their capabilities of achieving important properties of process\nexecution, including enforcing process flow, resource allocation, and\ndata-based conditions. Our results show that LLM performance falls short of the\nperfect reliability required for smart contract development. We suggest future\nwork to explore responsible LLM integrations in existing tools for code\ngeneration to ensure more reliable output. Our benchmarking framework can serve\nas a foundation for developing and evaluating such integrations.", "AI": {"tldr": "\u7814\u7a76\u63a2\u8ba8\u4e86\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u4ece\u4e1a\u52a1\u6d41\u7a0b\u63cf\u8ff0\u751f\u6210\u667a\u80fd\u5408\u7ea6\u4ee3\u7801\u7684\u80fd\u529b\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u4e2a\u81ea\u52a8\u5316\u8bc4\u4f30\u6846\u67b6\uff0c\u53d1\u73b0LLMs\u5728\u53ef\u9760\u6027\u4e0a\u5b58\u5728\u4e0d\u8db3\u3002", "motivation": "\u63a2\u7d22LLMs\u5728\u667a\u80fd\u5408\u7ea6\u4ee3\u7801\u751f\u6210\u4e2d\u7684\u5e94\u7528\uff0c\u4ee5\u514b\u670d\u4f20\u7edf\u57fa\u4e8e\u89c4\u5219\u7684\u4ee3\u7801\u751f\u6210\u65b9\u6cd5\u7684\u5c40\u9650\u6027\u3002", "method": "\u901a\u8fc7\u81ea\u52a8\u5316\u8bc4\u4f30\u6846\u67b6\uff0c\u6d4b\u8bd5\u4e0d\u540c\u7c7b\u578b\u548c\u5927\u5c0f\u7684LLMs\u5728\u751f\u6210\u4ee3\u7801\u65f6\u662f\u5426\u6ee1\u8db3\u6d41\u7a0b\u6267\u884c\u7684\u5173\u952e\u5c5e\u6027\uff08\u5982\u6d41\u7a0b\u6d41\u3001\u8d44\u6e90\u5206\u914d\u7b49\uff09\u3002", "result": "LLMs\u5728\u667a\u80fd\u5408\u7ea6\u5f00\u53d1\u4e2d\u7684\u8868\u73b0\u672a\u80fd\u8fbe\u5230\u6240\u9700\u7684\u5b8c\u7f8e\u53ef\u9760\u6027\u3002", "conclusion": "\u5efa\u8bae\u672a\u6765\u7814\u7a76\u63a2\u7d22\u5982\u4f55\u5c06LLMs\u8d1f\u8d23\u4efb\u5730\u96c6\u6210\u5230\u73b0\u6709\u4ee3\u7801\u751f\u6210\u5de5\u5177\u4e2d\uff0c\u4ee5\u63d0\u9ad8\u8f93\u51fa\u53ef\u9760\u6027\uff0c\u5e76\u63d0\u4f9b\u4e86\u57fa\u51c6\u6846\u67b6\u4f5c\u4e3a\u57fa\u7840\u3002"}}
{"id": "2507.23118", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.23118", "abs": "https://arxiv.org/abs/2507.23118", "authors": ["Mattia Di Profio", "Mingjun Zhong", "Yaji Sripada", "Marcel Jaspars"], "title": "FlowETL: An Autonomous Example-Driven Pipeline for Data Engineering", "comment": null, "summary": "The Extract, Transform, Load (ETL) workflow is fundamental for populating and\nmaintaining data warehouses and other data stores accessed by analysts for\ndownstream tasks. A major shortcoming of modern ETL solutions is the extensive\nneed for a human-in-the-loop, required to design and implement\ncontext-specific, and often non-generalisable transformations. While related\nwork in the field of ETL automation shows promising progress, there is a lack\nof solutions capable of automatically designing and applying these\ntransformations. We present FlowETL, a novel example-based autonomous ETL\npipeline architecture designed to automatically standardise and prepare input\ndatasets according to a concise, user-defined target dataset. FlowETL is an\necosystem of components which interact together to achieve the desired outcome.\nA Planning Engine uses a paired input-output datasets sample to construct a\ntransformation plan, which is then applied by an ETL worker to the source\ndataset. Monitoring and logging provide observability throughout the entire\npipeline. The results show promising generalisation capabilities across 14\ndatasets of various domains, file structures, and file sizes.", "AI": {"tldr": "FlowETL\u662f\u4e00\u79cd\u57fa\u4e8e\u793a\u4f8b\u7684\u81ea\u4e3bETL\u7ba1\u9053\u67b6\u6784\uff0c\u65e8\u5728\u81ea\u52a8\u6807\u51c6\u5316\u548c\u51c6\u5907\u8f93\u5165\u6570\u636e\u96c6\uff0c\u51cf\u5c11\u4eba\u5de5\u5e72\u9884\u3002", "motivation": "\u73b0\u4ee3ETL\u89e3\u51b3\u65b9\u6848\u9700\u8981\u5927\u91cf\u4eba\u5de5\u8bbe\u8ba1\u7279\u5b9a\u4e0a\u4e0b\u6587\u4e14\u4e0d\u53ef\u901a\u7528\u7684\u8f6c\u6362\uff0c\u7f3a\u4e4f\u81ea\u52a8\u5316\u80fd\u529b\u3002", "method": "FlowETL\u901a\u8fc7\u89c4\u5212\u5f15\u64ce\u548cETL\u5de5\u4f5c\u5668\u81ea\u52a8\u6784\u5efa\u5e76\u5e94\u7528\u8f6c\u6362\u8ba1\u5212\uff0c\u540c\u65f6\u63d0\u4f9b\u76d1\u63a7\u548c\u65e5\u5fd7\u529f\u80fd\u3002", "result": "\u572814\u4e2a\u4e0d\u540c\u9886\u57df\u3001\u6587\u4ef6\u7ed3\u6784\u548c\u5927\u5c0f\u7684\u6570\u636e\u96c6\u4e0a\u8868\u73b0\u51fa\u826f\u597d\u7684\u6cdb\u5316\u80fd\u529b\u3002", "conclusion": "FlowETL\u5c55\u793a\u4e86\u81ea\u52a8\u5316ETL\u6d41\u7a0b\u7684\u6f5c\u529b\uff0c\u51cf\u5c11\u4e86\u4eba\u5de5\u5e72\u9884\u7684\u9700\u6c42\u3002"}}
{"id": "2507.23120", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.23120", "abs": "https://arxiv.org/abs/2507.23120", "authors": ["Jordi Cabot"], "title": "Vibe Modeling: Challenges and Opportunities", "comment": null, "summary": "There is a pressing need for better development methods and tools to keep up\nwith the growing demand and increasing complexity of new software systems. New\ntypes of user interfaces, the need for intelligent components, sustainability\nconcerns, ... bring new challenges that we need to handle. In the last years,\nmodel-driven engineering (MDE) has been key to improving the quality and\nproductivity of software development, but models themselves are becoming\nincreasingly complex to specify and manage. At the same time, we are witnessing\nthe growing popularity of vibe coding approaches that rely on Large Language\nModels (LLMs) to transform natural language descriptions into running code at\nthe expenses of code vulnerabilities, scalability issues and maintainability\nconcerns. In this paper, we introduce the concept of \\textit{vibe modeling} as\na novel approach to integrate the best of both worlds (AI and MDE) to speed up\nthe development of reliable complex systems. We outline the key concepts of\nvibe modeling and highlight the opportunities and open challenges it presents\nfor the future of modeling.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408AI\u548c\u6a21\u578b\u9a71\u52a8\u5de5\u7a0b\uff08MDE\uff09\u7684\u201c\u6c1b\u56f4\u5efa\u6a21\u201d\u65b9\u6cd5\uff0c\u4ee5\u52a0\u901f\u53ef\u9760\u590d\u6742\u7cfb\u7edf\u7684\u5f00\u53d1\u3002", "motivation": "\u968f\u7740\u8f6f\u4ef6\u7cfb\u7edf\u9700\u6c42\u7684\u589e\u957f\u548c\u590d\u6742\u6027\u589e\u52a0\uff0c\u73b0\u6709\u5f00\u53d1\u65b9\u6cd5\u548c\u5de5\u5177\u9762\u4e34\u6311\u6218\uff0c\u9700\u8981\u7ed3\u5408AI\u548cMDE\u7684\u4f18\u52bf\u3002", "method": "\u63d0\u51fa\u201c\u6c1b\u56f4\u5efa\u6a21\u201d\u6982\u5ff5\uff0c\u6574\u5408\u81ea\u7136\u8bed\u8a00\u5904\u7406\u548c\u6a21\u578b\u9a71\u52a8\u5de5\u7a0b\uff0c\u4ee5\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u548c\u8d28\u91cf\u3002", "result": "\u6c1b\u56f4\u5efa\u6a21\u4e3a\u590d\u6742\u7cfb\u7edf\u5f00\u53d1\u63d0\u4f9b\u4e86\u65b0\u601d\u8def\uff0c\u4f46\u4e5f\u5e26\u6765\u4e86\u65b0\u7684\u673a\u9047\u548c\u6311\u6218\u3002", "conclusion": "\u6c1b\u56f4\u5efa\u6a21\u6709\u671b\u6210\u4e3a\u672a\u6765\u5efa\u6a21\u9886\u57df\u7684\u91cd\u8981\u65b9\u5411\uff0c\u4f46\u4ecd\u9700\u89e3\u51b3\u5f00\u653e\u6027\u95ee\u9898\u3002"}}
{"id": "2507.23168", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.23168", "abs": "https://arxiv.org/abs/2507.23168", "authors": ["Elmira Onagh", "Maleknaz Nayebi"], "title": "Extension Decisions in Open Source Software Ecosystem", "comment": "Paper published in JSS journal", "summary": "GitHub Marketplace is expanding by approximately 41% annually, with new\ntools; however, many additions replicate existing functionality. We study this\nphenomenon in the platform's largest segment, Continuous Integration (CI), by\nlinking 6,983 CI Actions to 3,869 providers and mining their version histories.\nOur graph model timestamps every functionality's debut, tracks its adoption,\nand clusters redundant tools. We find that approximately 65% of new CI Actions\nreplicate existing capabilities, typically within six months, and that a small\nset of first-mover Actions accounts for most subsequent forks and extensions.\nThese insights enable developers to choose the optimal moment to launch, target\nunmet functionality, and help maintainers eliminate redundant tools. We publish\nthe complete graph and dataset to encourage longitudinal research on innovation\nand competition in software ecosystems, and to provide practitioners with a\ndata-driven roadmap for identifying emerging trends and guiding product\nstrategy.", "AI": {"tldr": "\u7814\u7a76\u53d1\u73b0GitHub Marketplace\u4e2d65%\u7684\u65b0CI Actions\u529f\u80fd\u91cd\u590d\uff0c\u4e14\u901a\u5e38\u5728\u516d\u4e2a\u6708\u5185\u51fa\u73b0\uff0c\u5c11\u6570\u5148\u884c\u8005\u5360\u636e\u4e3b\u5bfc\u3002", "motivation": "\u7814\u7a76GitHub Marketplace\u4e2dCI\u5de5\u5177\u7684\u529f\u80fd\u91cd\u590d\u73b0\u8c61\uff0c\u4e3a\u5f00\u53d1\u8005\u548c\u7ef4\u62a4\u8005\u63d0\u4f9b\u6570\u636e\u652f\u6301\u3002", "method": "\u901a\u8fc7\u94fe\u63a56,983\u4e2aCI Actions\u52303,869\u4e2a\u63d0\u4f9b\u8005\uff0c\u5e76\u6316\u6398\u5176\u7248\u672c\u5386\u53f2\uff0c\u6784\u5efa\u65f6\u95f4\u6233\u56fe\u6a21\u578b\u3002", "result": "65%\u7684\u65b0CI Actions\u529f\u80fd\u91cd\u590d\uff0c\u5c11\u6570\u5148\u884c\u8005\u4e3b\u5bfc\u540e\u7eed\u5206\u53c9\u548c\u6269\u5c55\u3002", "conclusion": "\u7814\u7a76\u7ed3\u679c\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u53d1\u5e03\u65f6\u673a\u548c\u529f\u80fd\u5b9a\u4f4d\u5efa\u8bae\uff0c\u5e76\u5e2e\u52a9\u7ef4\u62a4\u8005\u6e05\u7406\u5197\u4f59\u5de5\u5177\u3002"}}
{"id": "2507.23178", "categories": ["cs.SE", "cs.AI", "I.2.5"], "pdf": "https://arxiv.org/pdf/2507.23178", "abs": "https://arxiv.org/abs/2507.23178", "authors": ["Siyuan Liu", "Zhice Yang", "Huangxun Chen"], "title": "AutoBridge: Automating Smart Device Integration with Centralized Platform", "comment": "14 pages, 12 figures, under review", "summary": "Multimodal IoT systems coordinate diverse IoT devices to deliver\nhuman-centered services. The ability to incorporate new IoT devices under the\nmanagement of a centralized platform is an essential requirement. However, it\nrequires significant human expertise and effort to program the complex IoT\nintegration code that enables the platform to understand and control the device\nfunctions. Therefore, we propose AutoBridge to automate IoT integration code\ngeneration. Specifically, AutoBridge adopts a divide-and-conquer strategy: it\nfirst generates device control logic by progressively retrieving\ndevice-specific knowledge, then synthesizes platformcompliant integration code\nusing platform-specific knowledge. To ensure correctness, AutoBridge features a\nmulti-stage debugging pipeline, including an automated debugger for virtual IoT\ndevice testing and an interactive hardware-in-the-loop debugger that requires\nonly binary user feedback (yes and no) for real-device verification. We\nevaluate AutoBridge on a benchmark of 34 IoT devices across two open-source IoT\nplatforms. The results demonstrate that AutoBridge can achieves an average\nsuccess rate of 93.87% and an average function coverage of 94.87%, without any\nhuman involvement. With minimal binary yes and no feedback from users, the code\nis then revised to reach 100% function coverage. A user study with 15\nparticipants further shows that AutoBridge outperforms expert programmers by\n50% to 80% in code accuracy, even when the programmers are allowed to use\ncommercial code LLMs.", "AI": {"tldr": "AutoBridge\u81ea\u52a8\u5316\u751f\u6210\u7269\u8054\u7f51\u8bbe\u5907\u96c6\u6210\u4ee3\u7801\uff0c\u901a\u8fc7\u5206\u6cbb\u7b56\u7565\u548c\u591a\u9636\u6bb5\u8c03\u8bd5\u7ba1\u9053\uff0c\u663e\u8457\u51cf\u5c11\u4eba\u5de5\u5e72\u9884\uff0c\u6210\u529f\u7387\u548c\u529f\u80fd\u8986\u76d6\u7387\u5747\u8d85\u8fc790%\u3002", "motivation": "\u7269\u8054\u7f51\u8bbe\u5907\u96c6\u6210\u9700\u8981\u5927\u91cf\u4eba\u5de5\u7f16\u7a0b\uff0cAutoBridge\u65e8\u5728\u81ea\u52a8\u5316\u8fd9\u4e00\u8fc7\u7a0b\uff0c\u51cf\u5c11\u4e13\u5bb6\u4f9d\u8d56\u3002", "method": "\u91c7\u7528\u5206\u6cbb\u7b56\u7565\uff0c\u5148\u751f\u6210\u8bbe\u5907\u63a7\u5236\u903b\u8f91\uff0c\u518d\u5408\u6210\u5e73\u53f0\u517c\u5bb9\u4ee3\u7801\uff0c\u5e76\u901a\u8fc7\u591a\u9636\u6bb5\u8c03\u8bd5\u786e\u4fdd\u6b63\u786e\u6027\u3002", "result": "\u572834\u4e2a\u8bbe\u5907\u4e0a\u6d4b\u8bd5\uff0c\u5e73\u5747\u6210\u529f\u7387\u8fbe93.87%\uff0c\u529f\u80fd\u8986\u76d6\u7387\u8fbe94.87%\uff0c\u7528\u6237\u53cd\u9988\u540e\u53ef\u8fbe100%\u3002", "conclusion": "AutoBridge\u5728\u4ee3\u7801\u51c6\u786e\u6027\u548c\u6548\u7387\u4e0a\u663e\u8457\u4f18\u4e8e\u4eba\u5de5\u7f16\u7a0b\uff0c\u5c55\u793a\u4e86\u81ea\u52a8\u5316\u96c6\u6210\u7684\u6f5c\u529b\u3002"}}
{"id": "2507.23269", "categories": ["cs.SE", "cs.AI", "cs.MA"], "pdf": "https://arxiv.org/pdf/2507.23269", "abs": "https://arxiv.org/abs/2507.23269", "authors": ["Peter Fettke", "Fabiana Fournier", "Lior Limonad", "Andreas Metzger", "Stefanie Rinderle-Ma", "Barbara Weber"], "title": "XABPs: Towards eXplainable Autonomous Business Processes", "comment": null, "summary": "Autonomous business processes (ABPs), i.e., self-executing workflows\nleveraging AI/ML, have the potential to improve operational efficiency, reduce\nerrors, lower costs, improve response times, and free human workers for more\nstrategic and creative work. However, ABPs may raise specific concerns\nincluding decreased stakeholder trust, difficulties in debugging, hindered\naccountability, risk of bias, and issues with regulatory compliance. We argue\nfor eXplainable ABPs (XABPs) to address these concerns by enabling systems to\narticulate their rationale. The paper outlines a systematic approach to XABPs,\ncharacterizing their forms, structuring explainability, and identifying key BPM\nresearch challenges towards XABPs.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u53ef\u89e3\u91ca\u7684\u81ea\u4e3b\u4e1a\u52a1\u6d41\u7a0b\uff08XABPs\uff09\uff0c\u4ee5\u89e3\u51b3\u81ea\u4e3b\u4e1a\u52a1\u6d41\u7a0b\uff08ABPs\uff09\u53ef\u80fd\u5e26\u6765\u7684\u4fe1\u4efb\u3001\u8c03\u8bd5\u3001\u8d23\u4efb\u3001\u504f\u89c1\u548c\u5408\u89c4\u6027\u95ee\u9898\u3002", "motivation": "\u81ea\u4e3b\u4e1a\u52a1\u6d41\u7a0b\uff08ABPs\uff09\u867d\u80fd\u63d0\u5347\u6548\u7387\u548c\u964d\u4f4e\u6210\u672c\uff0c\u4f46\u53ef\u80fd\u5f15\u53d1\u4fe1\u4efb\u3001\u8c03\u8bd5\u3001\u8d23\u4efb\u7b49\u95ee\u9898\uff0c\u9700\u901a\u8fc7\u53ef\u89e3\u91ca\u6027\u89e3\u51b3\u3002", "method": "\u63d0\u51fa\u7cfb\u7edf\u6027\u65b9\u6cd5\uff0c\u5305\u62ec\u5f62\u5f0f\u5316XABPs\u3001\u7ed3\u6784\u5316\u53ef\u89e3\u91ca\u6027\uff0c\u5e76\u8bc6\u522b\u5173\u952e\u7814\u7a76\u6311\u6218\u3002", "result": "XABPs\u80fd\u901a\u8fc7\u89e3\u91ca\u5176\u51b3\u7b56\u903b\u8f91\uff0c\u7f13\u89e3ABPs\u7684\u6f5c\u5728\u95ee\u9898\u3002", "conclusion": "XABPs\u4e3a\u89e3\u51b3ABPs\u7684\u6311\u6218\u63d0\u4f9b\u4e86\u53ef\u884c\u8def\u5f84\uff0c\u672a\u6765\u9700\u8fdb\u4e00\u6b65\u7814\u7a76\u5176\u5b9e\u73b0\u548c\u5e94\u7528\u3002"}}
{"id": "2507.23348", "categories": ["cs.SE", "cs.CL", "cs.LG"], "pdf": "https://arxiv.org/pdf/2507.23348", "abs": "https://arxiv.org/abs/2507.23348", "authors": ["Han Li", "Yuling Shi", "Shaoxin Lin", "Xiaodong Gu", "Heng Lian", "Xin Wang", "Yantao Jia", "Tao Huang", "Qianxiang Wang"], "title": "SWE-Debate: Competitive Multi-Agent Debate for Software Issue Resolution", "comment": "Our code and data are available at\n  https://github.com/YerbaPage/SWE-Debate", "summary": "Issue resolution has made remarkable progress thanks to the advanced\nreasoning capabilities of large language models (LLMs). Recently, agent-based\nframeworks such as SWE-agent have further advanced this progress by enabling\nautonomous, tool-using agents to tackle complex software engineering tasks.\nWhile existing agent-based issue resolution approaches are primarily based on\nagents' independent explorations, they often get stuck in local solutions and\nfail to identify issue patterns that span across different parts of the\ncodebase. To address this limitation, we propose SWE-Debate, a competitive\nmulti-agent debate framework that encourages diverse reasoning paths and\nachieves more consolidated issue localization. SWE-Debate first creates\nmultiple fault propagation traces as localization proposals by traversing a\ncode dependency graph. Then, it organizes a three-round debate among\nspecialized agents, each embodying distinct reasoning perspectives along the\nfault propagation trace. This structured competition enables agents to\ncollaboratively converge on a consolidated fix plan. Finally, this consolidated\nfix plan is integrated into an MCTS-based code modification agent for patch\ngeneration. Experiments on the SWE-bench benchmark show that SWE-Debate\nachieves new state-of-the-art results in open-source agent frameworks and\noutperforms baselines by a large margin.", "AI": {"tldr": "SWE-Debate\u662f\u4e00\u79cd\u7ade\u4e89\u6027\u591a\u4ee3\u7406\u8fa9\u8bba\u6846\u67b6\uff0c\u901a\u8fc7\u591a\u6837\u5316\u63a8\u7406\u8def\u5f84\u548c\u534f\u4f5c\u6027\u8ba8\u8bba\uff0c\u63d0\u5347\u8f6f\u4ef6\u5de5\u7a0b\u95ee\u9898\u7684\u89e3\u51b3\u80fd\u529b\u3002", "motivation": "\u73b0\u6709\u57fa\u4e8e\u4ee3\u7406\u7684\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5\u5e38\u9677\u5165\u5c40\u90e8\u89e3\uff0c\u96be\u4ee5\u8bc6\u522b\u8de8\u4ee3\u7801\u5e93\u7684\u95ee\u9898\u6a21\u5f0f\u3002", "method": "SWE-Debate\u901a\u8fc7\u751f\u6210\u591a\u4e2a\u6545\u969c\u4f20\u64ad\u8def\u5f84\uff0c\u7ec4\u7ec7\u4e09\u8f6e\u8fa9\u8bba\uff0c\u7531\u4e0d\u540c\u89c6\u89d2\u7684\u4ee3\u7406\u534f\u4f5c\u8fbe\u6210\u7edf\u4e00\u4fee\u590d\u8ba1\u5212\u3002", "result": "\u5728SWE-bench\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0cSWE-Debate\u8868\u73b0\u4f18\u4e8e\u73b0\u6709\u57fa\u7ebf\uff0c\u8fbe\u5230\u6700\u65b0\u6280\u672f\u6c34\u5e73\u3002", "conclusion": "SWE-Debate\u901a\u8fc7\u591a\u4ee3\u7406\u8fa9\u8bba\u663e\u8457\u63d0\u5347\u4e86\u95ee\u9898\u5b9a\u4f4d\u548c\u4fee\u590d\u80fd\u529b\u3002"}}
{"id": "2507.23356", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.23356", "abs": "https://arxiv.org/abs/2507.23356", "authors": ["Shmulik Froimovich", "Raviv Gal", "Wesam Ibraheem", "Avi Ziv"], "title": "Quality Evaluation of COBOL to Java Code Transformation", "comment": "Submitted to ASE 2025", "summary": "We present an automated evaluation system for assessing COBOL-to-Java code\ntranslation within IBM's watsonx Code Assistant for Z (WCA4Z). The system\naddresses key challenges in evaluating LLM-based translators, including model\nopacity and the complexity of translation quality assessment. Our approach\ncombines analytic checkers with LLM-as-a-judge (LaaJ) techniques to deliver\nscalable, multi-faceted evaluations. The system supports continuous integration\nworkflows, enables large-scale benchmarking, and reduces reliance on manual\nreview. We describe the system architecture, evaluation strategies, and\nreporting mechanisms that provide actionable insights for developers and\nproject managers, facilitating the evolution of high-quality, modernized\ncodebases.", "AI": {"tldr": "IBM\u5f00\u53d1\u4e86\u4e00\u4e2a\u81ea\u52a8\u5316\u8bc4\u4f30\u7cfb\u7edf\uff0c\u7528\u4e8e\u8bc4\u4f30COBOL\u5230Java\u4ee3\u7801\u7684\u7ffb\u8bd1\u8d28\u91cf\uff0c\u7ed3\u5408\u5206\u6790\u68c0\u67e5\u5668\u548cLLM\u4f5c\u4e3a\u8bc4\u5224\u6280\u672f\uff0c\u652f\u6301\u6301\u7eed\u96c6\u6210\u548c\u5927\u89c4\u6a21\u57fa\u51c6\u6d4b\u8bd5\u3002", "motivation": "\u89e3\u51b3\u57fa\u4e8eLLM\u7684\u7ffb\u8bd1\u5668\u8bc4\u4f30\u4e2d\u7684\u6a21\u578b\u4e0d\u900f\u660e\u6027\u548c\u7ffb\u8bd1\u8d28\u91cf\u8bc4\u4f30\u590d\u6742\u6027\u7b49\u5173\u952e\u6311\u6218\u3002", "method": "\u7ed3\u5408\u5206\u6790\u68c0\u67e5\u5668\u548cLLM-as-a-judge\uff08LaaJ\uff09\u6280\u672f\uff0c\u63d0\u4f9b\u53ef\u6269\u5c55\u7684\u591a\u65b9\u9762\u8bc4\u4f30\u3002", "result": "\u7cfb\u7edf\u652f\u6301\u6301\u7eed\u96c6\u6210\u5de5\u4f5c\u6d41\uff0c\u51cf\u5c11\u5bf9\u4eba\u5de5\u5ba1\u67e5\u7684\u4f9d\u8d56\uff0c\u5e76\u4e3a\u5f00\u53d1\u8005\u548c\u9879\u76ee\u7ecf\u7406\u63d0\u4f9b\u53ef\u64cd\u4f5c\u7684\u89c1\u89e3\u3002", "conclusion": "\u8be5\u7cfb\u7edf\u6709\u52a9\u4e8e\u63a8\u52a8\u9ad8\u8d28\u91cf\u3001\u73b0\u4ee3\u5316\u4ee3\u7801\u5e93\u7684\u53d1\u5c55\u3002"}}
{"id": "2507.23361", "categories": ["cs.SE", "cs.CL", "cs.LG"], "pdf": "https://arxiv.org/pdf/2507.23361", "abs": "https://arxiv.org/abs/2507.23361", "authors": ["Silin Chen", "Shaoxin Lin", "Xiaodong Gu", "Yuling Shi", "Heng Lian", "Longfei Yun", "Dong Chen", "Weiguo Sun", "Lin Cao", "Qianxiang Wang"], "title": "SWE-Exp: Experience-Driven Software Issue Resolution", "comment": "Our code and data are available at\n  https://github.com/YerbaPage/SWE-Exp", "summary": "Recent advances in large language model (LLM) agents have shown remarkable\nprogress in software issue resolution, leveraging advanced techniques such as\nmulti-agent collaboration and Monte Carlo Tree Search (MCTS). However, current\nagents act as memoryless explorers - treating each problem separately without\nretaining or reusing knowledge from previous repair experiences. This leads to\nredundant exploration of failed trajectories and missed chances to adapt\nsuccessful issue resolution methods to similar problems. To address this\nproblem, we introduce SWE-Exp, an experience - enhanced approach that distills\nconcise and actionable experience from prior agent trajectories, enabling\ncontinuous learning across issues. Our method introduces a multi-faceted\nexperience bank that captures both successful and failed repair attempts.\nSpecifically, it extracts reusable issue resolution knowledge at different\nlevels - from high-level problem comprehension to specific code changes.\nExperiments show that SWE-Exp achieves state-of-the-art resolution rate (41.6%\nPass@1) on SWE-bench-Verified under open-source agent frameworks. Our approach\nestablishes a new paradigm in which automated software engineering agents\nsystematically accumulate and leverage repair expertise, fundamentally shifting\nfrom trial-and-error exploration to strategic, experience-driven issue\nresolution.", "AI": {"tldr": "SWE-Exp\u662f\u4e00\u79cd\u901a\u8fc7\u7ecf\u9a8c\u589e\u5f3a\u7684LLM\u4ee3\u7406\u65b9\u6cd5\uff0c\u89e3\u51b3\u4e86\u73b0\u6709\u4ee3\u7406\u5728\u8f6f\u4ef6\u95ee\u9898\u89e3\u51b3\u4e2d\u7f3a\u4e4f\u8bb0\u5fc6\u548c\u77e5\u8bc6\u590d\u7528\u7684\u95ee\u9898\uff0c\u63d0\u9ad8\u4e86\u95ee\u9898\u89e3\u51b3\u6548\u7387\u3002", "motivation": "\u5f53\u524dLLM\u4ee3\u7406\u5728\u89e3\u51b3\u8f6f\u4ef6\u95ee\u9898\u65f6\u7f3a\u4e4f\u8bb0\u5fc6\u80fd\u529b\uff0c\u65e0\u6cd5\u590d\u7528\u4e4b\u524d\u7684\u4fee\u590d\u7ecf\u9a8c\uff0c\u5bfc\u81f4\u5197\u4f59\u63a2\u7d22\u548c\u6548\u7387\u4f4e\u4e0b\u3002", "method": "\u63d0\u51faSWE-Exp\u65b9\u6cd5\uff0c\u901a\u8fc7\u591a\u7ef4\u5ea6\u7ecf\u9a8c\u5e93\u6355\u83b7\u6210\u529f\u548c\u5931\u8d25\u7684\u4fee\u590d\u5c1d\u8bd5\uff0c\u63d0\u53d6\u53ef\u590d\u7528\u7684\u77e5\u8bc6\u3002", "result": "\u5b9e\u9a8c\u663e\u793aSWE-Exp\u5728SWE-bench-Verified\u4e0a\u8fbe\u523041.6%\u7684Pass@1\u89e3\u51b3\u7387\u3002", "conclusion": "SWE-Exp\u4e3a\u81ea\u52a8\u5316\u8f6f\u4ef6\u5de5\u7a0b\u4ee3\u7406\u5f15\u5165\u4e86\u7ecf\u9a8c\u9a71\u52a8\u7684\u6218\u7565\u4fee\u590d\u6a21\u5f0f\uff0c\u663e\u8457\u63d0\u5347\u4e86\u95ee\u9898\u89e3\u51b3\u6548\u7387\u3002"}}
{"id": "2507.23370", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.23370", "abs": "https://arxiv.org/abs/2507.23370", "authors": ["Trae Research Team", "Pengfei Gao", "Zhao Tian", "Xiangxin Meng", "Xinchen Wang", "Ruida Hu", "Yuanan Xiao", "Yizhou Liu", "Zhao Zhang", "Junjie Chen", "Cuiyun Gao", "Yun Lin", "Yingfei Xiong", "Chao Peng", "Xia Liu"], "title": "Trae Agent: An LLM-based Agent for Software Engineering with Test-time Scaling", "comment": "Pengfei Gao and Zhao Tian contributed equally to this technical\n  report", "summary": "Software issue resolution is a critical challenge in software engineering and\nhas garnered increasing attention in recent years. With the rapid advancement\nof large language models (LLMs), substantial progress has been made in\naddressing real-world software engineering tasks. Recent studies have\nintroduced ensemble reasoning techniques to enhance the performance of\nLLM-based issue resolution. However, existing prompting-based methods still\nface limitations in effectively exploring large ensemble spaces and lack the\ncapacity for repository-level understanding, both of which constrain their\noverall effectiveness. In this paper, we propose Trae Agent, the first\nagent-based ensemble reasoning approach for repository-level issue resolution.\nTrae Agent formulates our goal as an optimal solution search problem and\naddresses two key challenges, i.e., large ensemble spaces and repository-level\nunderstanding, through modular agents for generation, pruning, and selection.\nWe conduct extensive experiments using three leading LLMs on the widely-adopted\nSWE-bench benchmark, comparing Trae Agent against four state-of-the-art\nensemble reasoning techniques. Experimental results demonstrate that Trae Agent\nconsistently achieves superior performance, with an average improvement of\n10.22% over all baselines in terms of Pass@1. Trae Agent has achieved first\nplace on the SWE-bench Verified leaderboard, with a notable Pass@1 score of\n75.20%. We are pleased to release Trae Agent as an open-source project to\nsupport the research community, with all resources available at\nhttps://github.com/bytedance/trae-agent.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u4ee3\u7406\u7684\u96c6\u6210\u63a8\u7406\u65b9\u6cd5Trae Agent\uff0c\u7528\u4e8e\u89e3\u51b3\u8f6f\u4ef6\u95ee\u9898\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6027\u80fd\u3002", "motivation": "\u73b0\u6709\u57fa\u4e8e\u63d0\u793a\u7684\u65b9\u6cd5\u5728\u63a2\u7d22\u5927\u578b\u96c6\u6210\u7a7a\u95f4\u548c\u4ed3\u5e93\u7ea7\u7406\u89e3\u65b9\u9762\u5b58\u5728\u5c40\u9650\u6027\uff0c\u9650\u5236\u4e86\u5176\u6548\u679c\u3002", "method": "Trae Agent\u901a\u8fc7\u6a21\u5757\u5316\u4ee3\u7406\uff08\u751f\u6210\u3001\u526a\u679d\u548c\u9009\u62e9\uff09\u5c06\u76ee\u6807\u5efa\u6a21\u4e3a\u6700\u4f18\u89e3\u641c\u7d22\u95ee\u9898\u3002", "result": "\u5728SWE-bench\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0cTrae Agent\u5e73\u5747Pass@1\u63d0\u534710.22%\uff0c\u5e76\u4ee575.20%\u7684\u5206\u6570\u4f4d\u5c45\u699c\u9996\u3002", "conclusion": "Trae Agent\u662f\u4e00\u79cd\u9ad8\u6548\u7684\u4ed3\u5e93\u7ea7\u95ee\u9898\u89e3\u51b3\u65b9\u6cd5\uff0c\u5df2\u5f00\u6e90\u4ee5\u652f\u6301\u7814\u7a76\u793e\u533a\u3002"}}
{"id": "2507.23425", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.23425", "abs": "https://arxiv.org/abs/2507.23425", "authors": ["Daphn\u00e9 Larrivain", "Shinhyung Yang", "Wilhelm Hasselbring"], "title": "Dynamic and Static Analysis of Python Software with Kieker Including Reconstructed Architectures", "comment": "9 pages, 9 figures", "summary": "The Kieker observability framework is a tool that provides users with the\nmeans to design a custom observability pipeline for their application.\nOriginally tailored for Java, supporting Python with Kieker is worthwhile.\nPython's popularity has exploded over the years, thus making structural\ninsights of Python applications highly valuable. Our Python analysis pipeline\ncombines static and dynamic analysis in order to build a complete picture of a\ngiven system.", "AI": {"tldr": "Kieker\u6846\u67b6\u6269\u5c55\u652f\u6301Python\uff0c\u7ed3\u5408\u9759\u6001\u548c\u52a8\u6001\u5206\u6790\uff0c\u63d0\u4f9b\u5168\u9762\u7684\u7cfb\u7edf\u89c2\u5bdf\u80fd\u529b\u3002", "motivation": "Python\u7684\u6d41\u884c\u4f7f\u5f97\u5bf9\u5176\u5e94\u7528\u7684\u7ed3\u6784\u5316\u6d1e\u5bdf\u53d8\u5f97\u91cd\u8981\uff0cKieker\u539f\u4e3aJava\u8bbe\u8ba1\uff0c\u6269\u5c55\u652f\u6301Python\u5177\u6709\u4ef7\u503c\u3002", "method": "\u7ed3\u5408\u9759\u6001\u548c\u52a8\u6001\u5206\u6790\uff0c\u6784\u5efa\u5b8c\u6574\u7684\u7cfb\u7edf\u89c6\u56fe\u3002", "result": "\u5b9e\u73b0\u4e86\u5bf9Python\u5e94\u7528\u7684\u5168\u9762\u89c2\u5bdf\u80fd\u529b\u3002", "conclusion": "Kieker\u6846\u67b6\u6210\u529f\u6269\u5c55\u81f3Python\uff0c\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u66f4\u5e7f\u6cdb\u7684\u5de5\u5177\u652f\u6301\u3002"}}
{"id": "2507.23640", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.23640", "abs": "https://arxiv.org/abs/2507.23640", "authors": ["Samah Kansab", "Mohammed Sayagh", "Francis Bordeleau", "Ali Tizghadam"], "title": "An Empirical Study on the Amount of Changes Required for Merge Request Acceptance", "comment": null, "summary": "Code review (CR) is essential to software development, helping ensure that\nnew code is properly integrated. However, the CR process often involves\nsignificant effort, including code adjustments, responses to reviewers, and\ncontinued implementation. While past studies have examined CR delays and\niteration counts, few have investigated the effort based on the volume of code\nchanges required, especially in the context of GitLab Merge Requests (MRs),\nwhich remains underexplored. In this paper, we define and measure CR effort as\nthe amount of code modified after submission, using a dataset of over 23,600\nMRs from four GitLab projects. We find that up to 71% of MRs require\nadjustments after submission, and 28% of these involve changes to more than 200\nlines of code. Surprisingly, this effort is not correlated with review time or\nthe number of participants. To better understand and predict CR effort, we\ntrain an interpretable machine learning model using metrics across multiple\ndimensions: text features, code complexity, developer experience, review\nhistory, and branching. Our model achieves strong performance (AUC 0.84-0.88)\nand reveals that complexity, experience, and text features are key predictors.\nHistorical project characteristics also influence current review effort. Our\nfindings highlight the feasibility of using machine learning to explain and\nanticipate the effort needed to integrate code changes during review.", "AI": {"tldr": "\u8bba\u6587\u7814\u7a76\u4e86\u4ee3\u7801\u5ba1\u67e5\uff08CR\uff09\u4e2d\u7684\u5de5\u4f5c\u91cf\uff0c\u57fa\u4e8eGitLab\u5408\u5e76\u8bf7\u6c42\uff08MRs\uff09\u7684\u6570\u636e\uff0c\u53d1\u73b071%\u7684MRs\u9700\u8981\u8c03\u6574\uff0c28%\u6d89\u53ca\u8d85\u8fc7200\u884c\u4ee3\u7801\u4fee\u6539\u3002\u673a\u5668\u5b66\u4e60\u6a21\u578b\u80fd\u6709\u6548\u9884\u6d4b\u5de5\u4f5c\u91cf\u3002", "motivation": "\u73b0\u6709\u7814\u7a76\u8f83\u5c11\u5173\u6ce8\u57fa\u4e8e\u4ee3\u7801\u4fee\u6539\u91cf\u7684CR\u5de5\u4f5c\u91cf\uff0c\u5c24\u5176\u662f\u5728GitLab MRs\u80cc\u666f\u4e0b\u3002\u672c\u6587\u65e8\u5728\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\u3002", "method": "\u4f7f\u752823,600\u591a\u4e2aMRs\u6570\u636e\u96c6\uff0c\u5b9a\u4e49CR\u5de5\u4f5c\u91cf\u4e3a\u63d0\u4ea4\u540e\u7684\u4ee3\u7801\u4fee\u6539\u91cf\uff0c\u5e76\u8bad\u7ec3\u53ef\u89e3\u91ca\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\u3002", "result": "71%\u7684MRs\u9700\u8981\u8c03\u6574\uff0c28%\u6d89\u53ca\u8d85\u8fc7200\u884c\u4ee3\u7801\u4fee\u6539\u3002\u6a21\u578bAUC\u8fbe0.84-0.88\uff0c\u590d\u6742\u5ea6\u3001\u7ecf\u9a8c\u548c\u6587\u672c\u7279\u5f81\u662f\u5173\u952e\u9884\u6d4b\u56e0\u5b50\u3002", "conclusion": "\u673a\u5668\u5b66\u4e60\u53ef\u7528\u4e8e\u89e3\u91ca\u548c\u9884\u6d4bCR\u5de5\u4f5c\u91cf\uff0c\u9879\u76ee\u5386\u53f2\u7279\u5f81\u5bf9\u5f53\u524d\u5de5\u4f5c\u91cf\u6709\u5f71\u54cd\u3002"}}
