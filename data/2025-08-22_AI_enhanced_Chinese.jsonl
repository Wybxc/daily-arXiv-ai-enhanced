{"id": "2508.15109", "categories": ["cs.PL", "D.3.0; F.3.1"], "pdf": "https://arxiv.org/pdf/2508.15109", "abs": "https://arxiv.org/abs/2508.15109", "authors": ["Ziteng Wang", "Ruijie Fang", "Linus Zheng", "Dixin Tang", "Isil Dillig"], "title": "Homomorphism Calculus for User-Defined Aggregations", "comment": null, "summary": "Data processing frameworks like Apache Spark and Flink provide built-in\nsupport for user-defined aggregation functions (UDAFs), enabling the\nintegration of domain-specific logic. However, for these frameworks to support\n\\emph{efficient} UDAF execution, the function needs to satisfy a\n\\emph{homomorphism property}, which ensures that partial results from\nindependent computations can be merged correctly. Motivated by this problem,\nthis paper introduces a novel \\emph{homomorphism calculus} that can both verify\nand refute whether a UDAF is a dataframe homomorphism. If so, our calculus also\nenables the construction of a corresponding merge operator which can be used\nfor incremental computation and parallel execution. We have implemented an\nalgorithm based on our proposed calculus and evaluate it on real-world UDAFs,\ndemonstrating that our approach significantly outperforms two leading\nsynthesizers.", "AI": {"tldr": "\u8fd9\u7bc7\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u540c\u6001\u5f62\u5f0f\u5fae\u79ef\u5206\u65b9\u6cd5\uff0c\u7528\u4e8e\u9a8c\u8bc1\u548c\u62d2\u7edd\u7528\u6237\u5b9a\u4e49\u805a\u5408\u51fd\u6570\u662f\u5426\u6ee1\u8db3\u540c\u6001\u6027\u8d28\uff0c\u4ee5\u652f\u6301\u9ad8\u6548\u7684\u5e76\u884c\u6267\u884c\u548c\u589e\u91cf\u8ba1\u7b97\u3002", "motivation": "\u867d\u7136Spark\u548cFlink\u7b49\u6846\u67b6\u652f\u6301\u7528\u6237\u5b9a\u4e49\u805a\u5408\u51fd\u6570\uff0c\u4f46\u8981\u5b9e\u73b0\u9ad8\u6548\u6267\u884c\uff0c\u51fd\u6570\u5fc5\u987b\u6ee1\u8db3\u540c\u6001\u6027\u8d28\uff0c\u8fd9\u662f\u5f53\u524d\u7684\u6280\u672f\u6311\u6218\u3002", "method": "\u8bbe\u8ba1\u4e86\u4e00\u79cd\u540c\u6001\u5f62\u5f0f\u5fae\u79ef\u5206\u65b9\u6cd5\uff0c\u80fd\u591f\u81ea\u52a8\u9a8c\u8bc1UDAF\u662f\u5426\u6ee1\u8db3\u540c\u6001\u6027\u8d28\uff0c\u5e76\u4e3a\u6ee1\u8db3\u6761\u4ef6\u7684\u51fd\u6570\u6784\u9020\u5408\u5e76\u8fd0\u7b97\u7b26\u3002", "result": "\u5728\u771f\u5b9e\u4e16\u754cUDAF\u4e0a\u8bc4\u4f30\u5b9e\u73b0\u7b97\u6cd5\uff0c\u8868\u73b0\u663e\u8457\u8d85\u8fc7\u4e86\u4e24\u4e2a\u9886\u5148\u7684\u7efc\u5408\u5668\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u6709\u6548\u89e3\u51b3\u4e86\u6570\u636e\u5904\u7406\u6846\u67b6\u4e2dUDAF\u9ad8\u6548\u6267\u884c\u7684\u540c\u6001\u6027\u9a8c\u8bc1\u95ee\u9898\uff0c\u4e3a\u5e76\u884c\u5316\u548c\u589e\u91cf\u8ba1\u7b97\u63d0\u4f9b\u4e86\u53ef\u9760\u652f\u6301\u3002"}}
{"id": "2508.15137", "categories": ["cs.PL", "cs.SE"], "pdf": "https://arxiv.org/pdf/2508.15137", "abs": "https://arxiv.org/abs/2508.15137", "authors": ["Ruijie Fang", "Zachary Kincaid", "Thomas Reps"], "title": "Software Model Checking via Summary-Guided Search (Extended Version)", "comment": "Preliminary manuscript of extended version of paper that will appear\n  in OOPSLA 2025. 36 pages", "summary": "In this work, we describe a new software model-checking algorithm called GPS.\nGPS treats the task of model checking a program as a directed search of the\nprogram states, guided by a compositional, summary-based static analysis. The\nsummaries produced by static analysis are used both to prune away infeasible\npaths and to drive test generation to reach new, unexplored program states. GPS\ncan find both proofs of safety and counter-examples to safety (i.e., inputs\nthat trigger bugs), and features a novel two-layered search strategy that\nrenders it particularly efficient at finding bugs in programs featuring long,\ninput-dependent error paths. To make GPS refutationally complete (in the sense\nthat it will find an error if one exists, if it is allotted enough time), we\nintroduce an instrumentation technique and show that it helps GPS achieve\nrefutation-completeness without sacrificing overall performance. We benchmarked\nGPS on a suite of benchmarks including both programs from the Software\nVerification Competition (SV-COMP) and from prior literature, and found that\nour implementation of GPS outperforms state-of-the-art software model checkers\n(including the top performers in SV-COMP ReachSafety-Loops category), both in\nterms of the number of benchmarks solved and in terms of running time.", "AI": {"tldr": "GPS\u662f\u4e00\u79cd\u65b0\u7684\u8f6f\u4ef6\u6a21\u578b\u68c0\u6d4b\u7b97\u6cd5\uff0c\u7ed3\u5408\u4e86\u9759\u6001\u5206\u6790\u548c\u5b9a\u5411\u641c\u7d22\uff0c\u80fd\u591f\u9ad8\u6548\u53d1\u73b0\u7a0b\u5e8f\u5b89\u5168\u8bc1\u660e\u548c\u53cd\u4f8b\uff0c\u5728\u6027\u80fd\u6d4b\u8bd5\u4e2d\u4f18\u4e8e\u73b0\u6709\u6700\u5148\u8fdb\u5de5\u5177\u3002", "motivation": "\u73b0\u6709\u7684\u8f6f\u4ef6\u6a21\u578b\u68c0\u6d4b\u5de5\u5177\u5728\u5904\u7406\u5305\u542b\u957f\u8f93\u5165\u4f9d\u8d56\u9519\u8bef\u8def\u5f84\u7684\u7a0b\u5e8f\u65f6\u6548\u7387\u4e0d\u9ad8\uff0c\u9700\u8981\u4e00\u79cd\u80fd\u591f\u540c\u65f6\u4fdd\u8bc1\u5b8c\u5907\u6027\u548c\u9ad8\u6548\u6027\u7684\u65b0\u65b9\u6cd5\u3002", "method": "GPS\u91c7\u7528\u7ec4\u5408\u5f0f\u57fa\u4e8e\u6458\u8981\u7684\u9759\u6001\u5206\u6790\u6765\u6307\u5bfc\u7a0b\u5e8f\u72b6\u6001\u7684\u5b9a\u5411\u641c\u7d22\uff0c\u4f7f\u7528\u9759\u6001\u5206\u6790\u6458\u8981\u6765\u526a\u679d\u4e0d\u53ef\u884c\u8def\u5f84\u5e76\u9a71\u52a8\u6d4b\u8bd5\u751f\u6210\uff0c\u91c7\u7528\u53cc\u5c42\u641c\u7d22\u7b56\u7565\u548c\u63d2\u6869\u6280\u672f\u5b9e\u73b0\u53cd\u4f8b\u5b8c\u5907\u6027\u3002", "result": "\u5728\u5305\u542bSV-COMP\u548c\u5148\u524d\u6587\u732e\u7684\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0cGPS\u5728\u89e3\u51b3\u7684\u95ee\u9898\u6570\u91cf\u548c\u8fd0\u884c\u65f6\u95f4\u65b9\u9762\u90fd\u4f18\u4e8e\u6700\u5148\u8fdb\u7684\u8f6f\u4ef6\u6a21\u578b\u68c0\u6d4b\u5668\uff08\u5305\u62ecSV-COMP ReachSafety-Loops\u7c7b\u522b\u7684\u9876\u7ea7\u5de5\u5177\uff09\u3002", "conclusion": "GPS\u901a\u8fc7\u7ed3\u5408\u9759\u6001\u5206\u6790\u548c\u5b9a\u5411\u641c\u7d22\u7684\u65b0\u9896\u65b9\u6cd5\uff0c\u5728\u4fdd\u6301\u53cd\u4f8b\u5b8c\u5907\u6027\u7684\u540c\u65f6\u663e\u8457\u63d0\u9ad8\u4e86\u8f6f\u4ef6\u6a21\u578b\u68c0\u6d4b\u7684\u6548\u7387\uff0c\u7279\u522b\u662f\u5728\u5904\u7406\u590d\u6742\u9519\u8bef\u8def\u5f84\u65b9\u9762\u8868\u73b0\u51fa\u8272\u3002"}}
{"id": "2508.15157", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2508.15157", "abs": "https://arxiv.org/abs/2508.15157", "authors": ["David M Kahn", "Jan Hoffmann", "Runming Li"], "title": "Big-Stop Semantics: A Simple Way to Get the Benefits of Small-Step Semantics in a Big-Step Judgment", "comment": "26 pages, 27 figures", "summary": "As evident in the programming language literature, many practitioners favor\nspecifying dynamic program behavior using big-step over small-step semantics.\nUnlike small-step semantics, which must dwell on every intermediate program\nstate, big-step semantics conveniently jump directly to the ever-important\nresult of the computation. Big-step semantics also typically involve fewer\ninference rules than their small-step counterparts. However, in exchange for\nergonomics, big-step semantics give up power: Small-step semantics describes\nprogram behaviors that are outside the grasp of big-step semantics, notably\ndivergence. This work presents a little-known extension of big-step semantics\nwith inductive definitions that captures diverging computations without\nintroducing error states. This big-stop semantics is illustrated for typed,\nuntyped, and effectful variants of PCF, as well as a while-loop-based\nimperative language. Big-stop semantics extends the standard big-step inference\nrules with a few additional rules to define an evaluation judgment that is\nequivalent to the reflexive-transitive closure of small-step transitions. This\nsimple extension contrasts with other solutions in the literature which\nsacrifice ergonomics by introducing many additional inference rules, global\nstate, and/or less-commonly-understood reasoning principles like coinduction.", "AI": {"tldr": "\u5927\u6b65\u6b65\u5faa\u73af\u8bed\u4e49\u6269\u5c55\u4e3a\u5927\u505c\u6b65\u8bed\u4e49\uff0c\u901a\u8fc7\u5f52\u7eb3\u5b9a\u4e49\u6355\u83b7\u5206\u6563\u8ba1\u7b97\uff0c\u4fdd\u6301\u4e86\u5927\u6b65\u6b65\u8bed\u4e49\u7684\u4fbf\u6377\u6027\u540c\u65f6\u63d0\u4f9b\u4e0e\u5c0f\u6b65\u6b65\u8bed\u4e49\u76f8\u7b49\u7684\u8868\u8fbe\u80fd\u529b\u3002", "motivation": "\u5927\u6b65\u6b65\u8bed\u4e49\u867d\u7136\u4fbf\u6377\u4f46\u65e0\u6cd5\u63cf\u8ff0\u5206\u6563\u8ba1\u7b97\uff0c\u5c0f\u6b65\u6b65\u8bed\u4e49\u867d\u80fd\u63cf\u8ff0\u5206\u6563\u4f46\u89c4\u5219\u590d\u6742\u3002\u9700\u8981\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u7ed3\u5408\u4e24\u8005\u4f18\u70b9\u3002", "method": "\u901a\u8fc7\u5f52\u7eb3\u5b9a\u4e49\u6269\u5c55\u5927\u6b65\u6b65\u8bed\u4e49\u4e3a\u5927\u505c\u6b65\u8bed\u4e49\uff0c\u5728\u6807\u51c6\u8bc4\u4f30\u89c4\u5219\u57fa\u7840\u4e0a\u6dfb\u52a0\u5c11\u91cf\u89c4\u5219\uff0c\u5b9a\u4e49\u4e0e\u5c0f\u6b65\u6b65\u8fc7\u6e21\u5173\u7cfb\u95ed\u5305\u7b49\u4ef7\u7684\u8bc4\u4f30\u5224\u65ad\u3002", "result": "\u5927\u505c\u6b65\u8bed\u4e49\u80fd\u591f\u6355\u83b7\u5206\u6563\u8ba1\u7b97\u800c\u4e0d\u5f15\u5165\u9519\u8bef\u72b6\u6001\uff0c\u5e76\u5728\u7c7b\u578b\u5316\u3001\u975e\u7c7b\u578b\u5316\u548c\u5e26\u6548\u679c\u7684PCF\u4ee5\u53ca\u547d\u4ee4\u5f0f\u8bed\u8a00\u4e2d\u5f97\u5230\u9a8c\u8bc1\u3002", "conclusion": "\u5927\u505c\u6b65\u8bed\u4e49\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u6d01\u800c\u5f3a\u5927\u7684\u65b9\u6cd5\uff0c\u5728\u4fdd\u6301\u5927\u6b65\u6b65\u8bed\u4e49\u4fbf\u6377\u6027\u7684\u540c\u65f6\u8fbe\u5230\u4e86\u4e0e\u5c0f\u6b65\u6b65\u8bed\u4e49\u76f8\u7b49\u7684\u8868\u8fbe\u80fd\u529b\uff0c\u907f\u514d\u4e86\u5176\u4ed6\u65b9\u6848\u7684\u590d\u6742\u6027\u3002"}}
{"id": "2508.15166", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2508.15166", "abs": "https://arxiv.org/abs/2508.15166", "authors": ["Jingbo Wang", "Shashin Halalingaiah", "Weiyi Chen", "Chao Wang", "Isil Dillig"], "title": "Probabilistic Inference for Datalog with Correlated Inputs", "comment": "Accepted for publication at OOPSLA 2025 (R2)", "summary": "Probabilistic extensions of logic programming languages, such as ProbLog,\nintegrate logical reasoning with probabilistic inference to evaluate\nprobabilities of output relations; however, prior work does not account for\npotential statistical correlations among input facts. This paper introduces\nPraline, a new extension to Datalog designed for precise probabilistic\ninference in the presence of (partially known) input correlations. We formulate\nthe inference task as a constrained optimization problem, where the solution\nyields sound and precise probability bounds for output facts. However, due to\nthe complexity of the resulting optimization problem, this approach alone often\ndoes not scale to large programs. To address scalability, we propose a more\nefficient $\\delta$-exact inference algorithm that leverages constraint solving,\nstatic analysis, and iterative refinement. Our empirical evaluation on\nchallenging real-world benchmarks, including side-channel analysis,\ndemonstrates that our method not only scales effectively but also delivers\ntight probability bounds.", "AI": {"tldr": "Praline\u662f\u4e00\u4e2a\u65b0\u7684Datalog\u6269\u5c55\uff0c\u7528\u4e8e\u5904\u7406\u8f93\u5165\u4e8b\u5b9e\u95f4\u5b58\u5728\u7edf\u8ba1\u76f8\u5173\u6027\u65f6\u7684\u7cbe\u786e\u6982\u7387\u63a8\u7406\uff0c\u901a\u8fc7\u7ea6\u675f\u4f18\u5316\u548c\u03b4-\u7cbe\u786e\u63a8\u7406\u7b97\u6cd5\u63d0\u4f9b\u53ef\u6269\u5c55\u7684\u7d27\u81f4\u6982\u7387\u8fb9\u754c\u3002", "motivation": "\u73b0\u6709\u7684\u6982\u7387\u903b\u8f91\u7f16\u7a0b\u8bed\u8a00\uff08\u5982ProbLog\uff09\u5728\u8bc4\u4f30\u8f93\u51fa\u5173\u7cfb\u6982\u7387\u65f6\u672a\u8003\u8651\u8f93\u5165\u4e8b\u5b9e\u95f4\u7684\u7edf\u8ba1\u76f8\u5173\u6027\uff0c\u8fd9\u9650\u5236\u4e86\u63a8\u7406\u7684\u7cbe\u786e\u6027\u3002", "method": "\u5c06\u63a8\u7406\u4efb\u52a1\u5efa\u6a21\u4e3a\u7ea6\u675f\u4f18\u5316\u95ee\u9898\uff0c\u63d0\u51fa\u03b4-\u7cbe\u786e\u63a8\u7406\u7b97\u6cd5\uff0c\u7ed3\u5408\u7ea6\u675f\u6c42\u89e3\u3001\u9759\u6001\u5206\u6790\u548c\u8fed\u4ee3\u4f18\u5316\u6765\u63d0\u9ad8\u53ef\u6269\u5c55\u6027\u3002", "result": "\u5728\u5305\u62ec\u4fa7\u4fe1\u9053\u5206\u6790\u5728\u5185\u7684\u771f\u5b9e\u57fa\u51c6\u6d4b\u8bd5\u4e2d\uff0c\u8be5\u65b9\u6cd5\u4e0d\u4ec5\u5177\u6709\u826f\u597d\u53ef\u6269\u5c55\u6027\uff0c\u8fd8\u80fd\u63d0\u4f9b\u7d27\u81f4\u7684\u6982\u7387\u8fb9\u754c\u3002", "conclusion": "Praline\u6210\u529f\u89e3\u51b3\u4e86\u6982\u7387\u903b\u8f91\u7f16\u7a0b\u4e2d\u8f93\u5165\u76f8\u5173\u6027\u7684\u5904\u7406\u95ee\u9898\uff0c\u901a\u8fc7\u521b\u65b0\u7684\u4f18\u5316\u65b9\u6cd5\u5b9e\u73b0\u4e86\u7cbe\u786e\u4e14\u53ef\u6269\u5c55\u7684\u6982\u7387\u63a8\u7406\u3002"}}
{"id": "2508.15402", "categories": ["cs.FL", "cs.LO", "68Q45", "F.4.3"], "pdf": "https://arxiv.org/pdf/2508.15402", "abs": "https://arxiv.org/abs/2508.15402", "authors": ["Antonio Casares"], "title": "Transition-based vs stated-based acceptance for automata over infinite words", "comment": null, "summary": "Automata over infinite objects are a well-established model with applications\nin logic and formal verification. Traditionally, acceptance in such automata is\ndefined based on the set of states visited infinitely often during a run.\nHowever, there is a growing trend towards defining acceptance based on\ntransitions rather than states.\n  In this survey, we analyse the reasons for this shift and advocate using\ntransition-based acceptance in the context of automata over infinite words. We\npresent a collection of problems where the choice of formalism has a major\nimpact and discuss the causes of these differences.", "AI": {"tldr": "\u8fd9\u7bc7\u8bba\u6587\u662f\u4e00\u4e2a\u5173\u4e8e\u5728\u65e0\u9650\u5b57\u81ea\u52a8\u673a\u4e2d\u4ece\u72b6\u6001\u63a5\u53d7\u5411\u8fc7\u6e21\u63a5\u53d7\u8f6c\u53d8\u7684\u8c03\u67e5\u6027\u7814\u7a76\uff0c\u5206\u6790\u4e86\u8fd9\u79cd\u8f6c\u53d8\u7684\u539f\u56e0\u548c\u5f71\u54cd\u3002", "motivation": "\u4f20\u7edf\u7684\u65e0\u9650\u5b57\u81ea\u52a8\u673a\u4f7f\u7528\u72b6\u6001\u63a5\u53d7\u6761\u4ef6\uff0c\u4f46\u8fd1\u671f\u8d8b\u5411\u4e8e\u4f7f\u7528\u8fc7\u6e21\u63a5\u53d7\u6761\u4ef6\uff0c\u9700\u8981\u5206\u6790\u8fd9\u79cd\u8f6c\u53d8\u7684\u7406\u7531\u548c\u4f18\u52bf\u3002", "method": "\u901a\u8fc7\u8c03\u67e5\u7814\u7a76\u65b9\u6cd5\uff0c\u6536\u96c6\u5e76\u5206\u6790\u4e86\u591a\u4e2a\u95ee\u9898\u9886\u57df\uff0c\u5728\u8fd9\u4e9b\u9886\u57df\u4e2d\u5f62\u5f0f\u5316\u65b9\u6cd5\u7684\u9009\u62e9\u4f1a\u4ea7\u751f\u91cd\u5927\u5f71\u54cd\u3002", "result": "\u8bba\u6587\u63ed\u793a\u4e86\u4ece\u72b6\u6001\u63a5\u53d7\u5411\u8fc7\u6e21\u63a5\u53d8\u8f6c\u53d8\u7684\u5408\u7406\u6027\uff0c\u5e76\u8ba8\u8bba\u4e86\u8fd9\u79cd\u53d8\u5316\u5728\u4e0d\u540c\u95ee\u9898\u4e2d\u5bfc\u81f4\u7684\u5dee\u5f02\u53ca\u5176\u6839\u6e90\u3002", "conclusion": "\u5728\u65e0\u9650\u5b57\u81ea\u52a8\u673a\u4e2d\u63a8\u5e7f\u4f7f\u7528\u8fc7\u6e21\u63a5\u53d7\u6761\u4ef6\u662f\u6709\u5229\u7684\uff0c\u8fd9\u79cd\u5f62\u5f0f\u65b9\u6cd5\u5728\u8bb8\u591a\u95ee\u9898\u4e2d\u90fd\u663e\u793a\u51fa\u4f18\u52bf\u3002"}}
{"id": "2508.15135", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.15135", "abs": "https://arxiv.org/abs/2508.15135", "authors": ["Sumudu Liyanage", "Sherlock A. Licorish", "Markus Wagner", "Stephen G. MacDonell"], "title": "On the need to perform comprehensive evaluations of automated program repair benchmarks: Sorald case study", "comment": null, "summary": "In supporting the development of high-quality software, especially necessary\nin the era of LLMs, automated program repair (APR) tools aim to improve code\nquality by automatically addressing violations detected by static analysis\nprofilers. Previous research tends to evaluate APR tools only for their ability\nto clear violations, neglecting their potential introduction of new (sometimes\nsevere) violations, changes to code functionality and degrading of code\nstructure. There is thus a need for research to develop and assess\ncomprehensive evaluation frameworks for APR tools. This study addresses this\nresearch gap, and evaluates Sorald (a state-of-the-art APR tool) as a proof of\nconcept. Sorald's effectiveness was evaluated in repairing 3,529 SonarQube\nviolations across 30 rules within 2,393 Java code snippets extracted from Stack\nOverflow. Outcomes show that while Sorald fixes specific rule violations, it\nintroduced 2,120 new faults (32 bugs, 2088 code smells), reduced code\nfunctional correctness--as evidenced by a 24% unit test failure rate--and\ndegraded code structure, demonstrating the utility of our framework. Findings\nemphasize the need for evaluation methodologies that capture the full spectrum\nof APR tool effects, including side effects, to ensure their safe and effective\nadoption.", "AI": {"tldr": "\u672c\u7814\u7a76\u5f00\u53d1\u4e86\u4e00\u4e2a\u5168\u9762\u7684\u81ea\u52a8\u5316\u7a0b\u5e8f\u4fee\u590d(APR)\u5de5\u5177\u8bc4\u4f30\u6846\u67b6\uff0c\u5e76\u4ee5Sorald\u5de5\u5177\u4e3a\u4f8b\u8fdb\u884c\u8bc4\u4f30\uff0c\u53d1\u73b0\u867d\u7136\u80fd\u4fee\u590d\u7279\u5b9a\u89c4\u5219\u8fdd\u89c4\uff0c\u4f46\u4f1a\u5f15\u5165\u65b0\u6545\u969c\u3001\u964d\u4f4e\u529f\u80fd\u6b63\u786e\u6027\u548c\u4ee3\u7801\u7ed3\u6784\u8d28\u91cf\u3002", "motivation": "\u73b0\u6709\u7814\u7a76\u4ec5\u8bc4\u4f30APR\u5de5\u5177\u6e05\u9664\u8fdd\u89c4\u7684\u80fd\u529b\uff0c\u5ffd\u7565\u4e86\u5176\u53ef\u80fd\u5f15\u5165\u65b0\u8fdd\u89c4\u3001\u6539\u53d8\u4ee3\u7801\u529f\u80fd\u548c\u964d\u4f4e\u4ee3\u7801\u7ed3\u6784\u7684\u6f5c\u5728\u95ee\u9898\uff0c\u9700\u8981\u5f00\u53d1\u5168\u9762\u7684\u8bc4\u4f30\u6846\u67b6\u3002", "method": "\u4ee5Sorald\u4f5c\u4e3a\u6982\u5ff5\u9a8c\u8bc1\uff0c\u8bc4\u4f30\u5176\u4fee\u590d3,529\u4e2aSonarQube\u8fdd\u89c4\u7684\u80fd\u529b\uff0c\u5206\u67902,393\u4e2aJava\u4ee3\u7801\u7247\u6bb5\uff0c\u68c0\u67e5\u65b0\u6545\u969c\u5f15\u5165\u3001\u529f\u80fd\u6b63\u786e\u6027\u548c\u4ee3\u7801\u7ed3\u6784\u53d8\u5316\u3002", "result": "Sorald\u4fee\u590d\u4e86\u7279\u5b9a\u89c4\u5219\u8fdd\u89c4\uff0c\u4f46\u5f15\u5165\u4e862,120\u4e2a\u65b0\u6545\u969c(32\u4e2abug\uff0c2,088\u4e2a\u4ee3\u7801\u5f02\u5473)\uff0c\u5355\u5143\u6d4b\u8bd5\u5931\u8d25\u7387\u8fbe24%\uff0c\u4ee3\u7801\u7ed3\u6784\u9000\u5316\u3002", "conclusion": "\u9700\u8981\u80fd\u6355\u6349APR\u5de5\u5177\u5168\u65b9\u4f4d\u5f71\u54cd\u7684\u8bc4\u4f30\u65b9\u6cd5\uff0c\u5305\u62ec\u526f\u4f5c\u7528\uff0c\u4ee5\u786e\u4fdd\u5176\u5b89\u5168\u6709\u6548\u91c7\u7528\u3002"}}
{"id": "2508.15264", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2508.15264", "abs": "https://arxiv.org/abs/2508.15264", "authors": ["Patrick Redmond", "Jonathan Castello", "Jos\u00e9 Manuel Calder\u00f3n Trilla", "Lindsey Kuper"], "title": "Exploring the Theory and Practice of Concurrency in the Entity-Component-System Pattern", "comment": "This is an extended version (with appendices) of the OOPSLA 2025\n  paper", "summary": "The Entity-Component-System (ECS) software design pattern, long used in game\ndevelopment, encourages a clean separation of identity (entities), data\nproperties (components), and computational behaviors (systems). Programs\nwritten using the ECS pattern are naturally concurrent, and the pattern offers\nmodularity, flexibility, and performance benefits that have led to a\nproliferation of ECS frameworks. Nevertheless, the ECS pattern is little-known\nand not well understood outside of a few domains. Existing explanations of the\nECS pattern tend to be mired in the concrete details of particular ECS\nframeworks, or they explain the pattern in terms of imperfect metaphors or in\nterms of what it is not. We seek a rigorous understanding of the ECS pattern\nvia the design of a formal model, Core ECS, that abstracts away the details of\nspecific implementations to reveal the essence of software using the ECS\npattern. We identify a class of Core ECS programs that behave deterministically\nregardless of scheduling, enabling use of the ECS pattern as a\ndeterministic-by-construction concurrent programming model. With Core ECS as a\npoint of comparison, we then survey several real-world ECS frameworks and find\nthat they all leave opportunities for deterministic concurrency unexploited.\nOur findings point out a space for new ECS implementation techniques that\nbetter leverage such opportunities.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86Core ECS\u5f62\u5f0f\u5316\u6a21\u578b\uff0c\u62bd\u8c61ECS\u6a21\u5f0f\u7684\u672c\u8d28\uff0c\u8bc6\u522b\u51fa\u786e\u5b9a\u6027\u5e76\u53d1\u884c\u4e3a\u7c7b\u522b\uff0c\u5e76\u53d1\u73b0\u73b0\u6709ECS\u6846\u67b6\u672a\u80fd\u5145\u5206\u5229\u7528\u786e\u5b9a\u6027\u5e76\u53d1\u673a\u4f1a\u3002", "motivation": "ECS\u6a21\u5f0f\u5728\u6e38\u620f\u5f00\u53d1\u4e2d\u5e7f\u6cdb\u5e94\u7528\u4f46\u5916\u754c\u4e86\u89e3\u6709\u9650\uff0c\u73b0\u6709\u89e3\u91ca\u8fc7\u4e8e\u5173\u6ce8\u5177\u4f53\u6846\u67b6\u7ec6\u8282\u6216\u4f7f\u7528\u4e0d\u5b8c\u7f8e\u6bd4\u55bb\uff0c\u9700\u8981\u5efa\u7acb\u4e25\u8c28\u7684\u5f62\u5f0f\u5316\u6a21\u578b\u6765\u7406\u89e3\u5176\u672c\u8d28\u3002", "method": "\u8bbe\u8ba1Core ECS\u5f62\u5f0f\u5316\u6a21\u578b\uff0c\u62bd\u8c61\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\uff0c\u8bc6\u522b\u786e\u5b9a\u6027\u884c\u4e3a\u7684\u7a0b\u5e8f\u7c7b\u522b\uff0c\u5e76\u8c03\u7814\u591a\u4e2a\u771f\u5b9eECS\u6846\u67b6\u8fdb\u884c\u6bd4\u8f83\u5206\u6790\u3002", "result": "\u53d1\u73b0\u4e00\u7c7bCore ECS\u7a0b\u5e8f\u5177\u6709\u8c03\u5ea6\u65e0\u5173\u7684\u786e\u5b9a\u6027\u884c\u4e3a\uff0c\u73b0\u6709ECS\u6846\u67b6\u90fd\u672a\u80fd\u5145\u5206\u5229\u7528\u8fd9\u79cd\u786e\u5b9a\u6027\u5e76\u53d1\u673a\u4f1a\u3002", "conclusion": "\u7814\u7a76\u6307\u51fa\u4e86\u65b0\u7684ECS\u5b9e\u73b0\u6280\u672f\u7a7a\u95f4\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u5229\u7528\u786e\u5b9a\u6027\u5e76\u53d1\u673a\u4f1a\uff0c\u5c06ECS\u6a21\u5f0f\u4f5c\u4e3a\u786e\u5b9a\u6027\u6784\u9020\u7684\u5e76\u53d1\u7f16\u7a0b\u6a21\u578b\u3002"}}
{"id": "2508.15655", "categories": ["cs.FL", "68Q45", "F.1.1"], "pdf": "https://arxiv.org/pdf/2508.15655", "abs": "https://arxiv.org/abs/2508.15655", "authors": ["Mikhail V. Volkov"], "title": "List of Results on the \u010cern\u00fd Conjecture and Reset Thresholds for Synchronizing Automata", "comment": "28 pages, 5 figures", "summary": "We survey results in the literature that establish the \\v{C}ern\\'y conjecture\nfor various classes of finite automata. We also list classes for which the\nconjecture remains open, but a quadratic (in the number of states) upper bound\non the minimum length of reset words is known. The results presented reflect\nthe state of the art as of August 21, 2025.", "AI": {"tldr": "\u672c\u6587\u7efc\u8ff0\u4e86\u5173\u4e8e\u010cern\u00fd\u731c\u60f3\u5728\u4e0d\u540c\u6709\u9650\u81ea\u52a8\u673a\u7c7b\u522b\u4e2d\u7684\u7814\u7a76\u6210\u679c\uff0c\u5217\u51fa\u4e86\u5df2\u88ab\u8bc1\u660e\u6210\u7acb\u7684\u7c7b\u522b\u4ee5\u53ca\u4ecd\u4fdd\u6301\u5f00\u653e\u4f46\u5df2\u77e5\u4e8c\u6b21\u4e0a\u754c\u7684\u7c7b\u522b\uff0c\u53cd\u6620\u4e86\u622a\u81f32025\u5e748\u670821\u65e5\u7684\u6700\u65b0\u7814\u7a76\u8fdb\u5c55\u3002", "motivation": "\u010cern\u00fd\u731c\u60f3\u662f\u81ea\u52a8\u673a\u7406\u8bba\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u672a\u89e3\u51b3\u95ee\u9898\uff0c\u8be5\u731c\u60f3\u8ba4\u4e3an\u72b6\u6001\u540c\u6b65\u81ea\u52a8\u673a\u7684\u6700\u77ed\u91cd\u7f6e\u8bcd\u957f\u5ea6\u4e0d\u8d85\u8fc7(n-1)^2\u3002\u672c\u6587\u65e8\u5728\u7cfb\u7edf\u68b3\u7406\u8be5\u731c\u60f3\u5728\u4e0d\u540c\u81ea\u52a8\u673a\u7c7b\u522b\u4e2d\u7684\u7814\u7a76\u73b0\u72b6\u3002", "method": "\u91c7\u7528\u6587\u732e\u7efc\u8ff0\u7684\u65b9\u6cd5\uff0c\u6536\u96c6\u548c\u5206\u6790\u5df2\u53d1\u8868\u7684\u5173\u4e8e\u010cern\u00fd\u731c\u60f3\u7684\u7814\u7a76\u6210\u679c\uff0c\u5bf9\u4e0d\u540c\u7c7b\u522b\u7684\u6709\u9650\u81ea\u52a8\u673a\u8fdb\u884c\u5206\u7c7b\u603b\u7ed3\u3002", "result": "\u6574\u7406\u51fa\u4e86\u010cern\u00fd\u731c\u60f3\u5df2\u88ab\u8bc1\u660e\u6210\u7acb\u7684\u591a\u4e2a\u81ea\u52a8\u673a\u7c7b\u522b\uff0c\u4ee5\u53ca\u90a3\u4e9b\u731c\u60f3\u867d\u672a\u8bc1\u660e\u4f46\u5df2\u77e5\u5b58\u5728\u4e8c\u6b21\u4e0a\u754c\uff08\u5173\u4e8e\u72b6\u6001\u6570\u7684\u5e73\u65b9\uff09\u7684\u7c7b\u522b\u3002", "conclusion": "\u8be5\u7efc\u8ff0\u63d0\u4f9b\u4e86\u010cern\u00fd\u731c\u60f3\u7814\u7a76\u73b0\u72b6\u7684\u5168\u9762\u6982\u89c8\uff0c\u6307\u51fa\u4e86\u5df2\u89e3\u51b3\u548c\u672a\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u4e3a\u540e\u7eed\u7814\u7a76\u63d0\u4f9b\u4e86\u91cd\u8981\u53c2\u8003\uff0c\u53cd\u6620\u4e86\u8be5\u9886\u57df\u622a\u81f32025\u5e74\u7684\u6700\u65b0\u8fdb\u5c55\u3002"}}
{"id": "2508.15411", "categories": ["cs.SE", "cs.CL", "cs.LG", "cs.MA"], "pdf": "https://arxiv.org/pdf/2508.15411", "abs": "https://arxiv.org/abs/2508.15411", "authors": ["Frederik Vandeputte"], "title": "Foundational Design Principles and Patterns for Building Robust and Adaptive GenAI-Native Systems", "comment": null, "summary": "Generative AI (GenAI) has emerged as a transformative technology,\ndemonstrating remarkable capabilities across diverse application domains.\nHowever, GenAI faces several major challenges in developing reliable and\nefficient GenAI-empowered systems due to its unpredictability and inefficiency.\nThis paper advocates for a paradigm shift: future GenAI-native systems should\nintegrate GenAI's cognitive capabilities with traditional software engineering\nprinciples to create robust, adaptive, and efficient systems.\n  We introduce foundational GenAI-native design principles centered around five\nkey pillars -- reliability, excellence, evolvability, self-reliance, and\nassurance -- and propose architectural patterns such as GenAI-native cells,\norganic substrates, and programmable routers to guide the creation of resilient\nand self-evolving systems. Additionally, we outline the key ingredients of a\nGenAI-native software stack and discuss the impact of these systems from\ntechnical, user adoption, economic, and legal perspectives, underscoring the\nneed for further validation and experimentation. Our work aims to inspire\nfuture research and encourage relevant communities to implement and refine this\nconceptual framework.", "AI": {"tldr": "\u672c\u6587\u63d0\u51faGenAI\u539f\u751f\u7cfb\u7edf\u8bbe\u8ba1\u539f\u5219\uff0c\u5c06\u751f\u6210\u5f0fAI\u4e0e\u4f20\u7edf\u8f6f\u4ef6\u5de5\u7a0b\u7ed3\u5408\uff0c\u6784\u5efa\u53ef\u9760\u3001\u81ea\u9002\u5e94\u3001\u9ad8\u6548\u7684\u7cfb\u7edf\u67b6\u6784", "motivation": "\u751f\u6210\u5f0fAI\u867d\u7136\u5177\u6709\u53d8\u9769\u6027\u80fd\u529b\uff0c\u4f46\u7531\u4e8e\u4e0d\u53ef\u9884\u6d4b\u6027\u548c\u4f4e\u6548\u6027\uff0c\u5728\u5f00\u53d1\u53ef\u9760\u7cfb\u7edf\u65f6\u9762\u4e34\u91cd\u5927\u6311\u6218\uff0c\u9700\u8981\u65b0\u7684\u8bbe\u8ba1\u8303\u5f0f", "method": "\u63d0\u51fa\u57fa\u4e8e\u4e94\u5927\u652f\u67f1\uff08\u53ef\u9760\u6027\u3001\u5353\u8d8a\u6027\u3001\u53ef\u8fdb\u5316\u6027\u3001\u81ea\u4f9d\u8d56\u6027\u3001\u4fdd\u969c\u6027\uff09\u7684GenAI\u539f\u751f\u8bbe\u8ba1\u539f\u5219\uff0c\u4ee5\u53caGenAI\u539f\u751f\u5355\u5143\u3001\u6709\u673a\u57fa\u8d28\u3001\u53ef\u7f16\u7a0b\u8def\u7531\u5668\u7b49\u67b6\u6784\u6a21\u5f0f", "result": "\u6784\u5efa\u4e86GenAI\u539f\u751f\u8f6f\u4ef6\u6808\u7684\u5173\u952e\u8981\u7d20\u6846\u67b6\uff0c\u5e76\u4ece\u6280\u672f\u3001\u7528\u6237\u91c7\u7eb3\u3001\u7ecf\u6d4e\u3001\u6cd5\u5f8b\u7b49\u591a\u89d2\u5ea6\u5206\u6790\u4e86\u7cfb\u7edf\u5f71\u54cd", "conclusion": "\u8be5\u6846\u67b6\u4e3a\u672a\u6765\u7814\u7a76\u63d0\u4f9b\u542f\u53d1\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u9a8c\u8bc1\u548c\u5b9e\u9a8c\uff0c\u9f13\u52b1\u76f8\u5173\u793e\u533a\u5b9e\u65bd\u548c\u5b8c\u5584\u8fd9\u4e00\u6982\u5ff5\u6846\u67b6"}}
{"id": "2508.15333", "categories": ["cs.PL", "F.3.3"], "pdf": "https://arxiv.org/pdf/2508.15333", "abs": "https://arxiv.org/abs/2508.15333", "authors": ["Francesco Dagnino", "Paola Giannini", "Violet Ka I Pun", "Ulises Torrella"], "title": "Fair Termination for Resource-Aware Active Objects", "comment": "18 pages, 12 pages of appendix, 12 figures, APLAS 2025", "summary": "Active object systems are a model of distributed computation that has been\nadopted for modelling distributed systems and business process workflows. This\nfield of modelling is, in essence, concurrent and resource-aware, motivating\nthe development of resource-aware formalisations on the active object model.\nThe contributions of this work are the development of a core calculus for\nresource-aware active objects together with a type system ensuring that\nwell-typed programs are fairly terminating, i.e., they can always eventually\nterminate. To achieve this, we combine techniques from graded semantics and\ntype systems, which are quite well understood for sequential programs, with\nthose for fair termination, which have been developed for synchronous~sessions.", "AI": {"tldr": "\u5f00\u53d1\u4e86\u4e00\u4e2a\u8d44\u6e90\u611f\u77e5\u7684\u4e3b\u52a8\u5bf9\u8c61\u6838\u5fc3\u6f14\u7b97\u548c\u7c7b\u578b\u7cfb\u7edf\uff0c\u786e\u4fdd\u826f\u7c7b\u578b\u7a0b\u5e8f\u80fd\u591f\u516c\u5e73\u7ec8\u6b62", "motivation": "\u4e3b\u52a8\u5bf9\u8c61\u7cfb\u7edf\u662f\u5206\u5e03\u5f0f\u8ba1\u7b97\u6a21\u578b\uff0c\u7528\u4e8e\u5efa\u6a21\u5206\u5e03\u5f0f\u7cfb\u7edf\u548c\u4e1a\u52a1\u6d41\u7a0b\u5de5\u4f5c\u6d41\uff0c\u9700\u8981\u8d44\u6e90\u611f\u77e5\u7684\u5f62\u5f0f\u5316\u65b9\u6cd5", "method": "\u7ed3\u5408\u5206\u7ea7\u8bed\u4e49\u548c\u7c7b\u578b\u7cfb\u7edf\u6280\u672f\uff08\u9002\u7528\u4e8e\u987a\u5e8f\u7a0b\u5e8f\uff09\u4e0e\u516c\u5e73\u7ec8\u6b62\u6280\u672f\uff08\u9002\u7528\u4e8e\u540c\u6b65\u4f1a\u8bdd\uff09", "result": "\u63d0\u51fa\u4e86\u786e\u4fdd\u7a0b\u5e8f\u516c\u5e73\u7ec8\u6b62\u7684\u7c7b\u578b\u7cfb\u7edf", "conclusion": "\u6210\u529f\u5c06\u987a\u5e8f\u7a0b\u5e8f\u7684\u5206\u7ea7\u7c7b\u578b\u6280\u672f\u4e0e\u540c\u6b65\u4f1a\u8bdd\u7684\u516c\u5e73\u7ec8\u6b62\u6280\u672f\u76f8\u7ed3\u5408\uff0c\u4e3a\u8d44\u6e90\u611f\u77e5\u4e3b\u52a8\u5bf9\u8c61\u6a21\u578b\u63d0\u4f9b\u4e86\u5f62\u5f0f\u5316\u57fa\u7840"}}
{"id": "2508.15423", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2508.15423", "abs": "https://arxiv.org/abs/2508.15423", "authors": ["Ruiqi Wang", "Zezhou Yang", "Cuiyun Gao", "Xin Xia", "Qing Liao"], "title": "An Empirical Study of Knowledge Distillation for Code Understanding Tasks", "comment": "Accepted by ICSE 2026 (Cycle 1)", "summary": "Pre-trained language models (PLMs) have emerged as powerful tools for code\nunderstanding. However, deploying these PLMs in large-scale applications faces\npractical challenges due to their computational intensity and inference\nlatency. Knowledge distillation (KD), a promising model compression and\nacceleration technique, addresses these limitations by transferring knowledge\nfrom large teacher models to compact student models, enabling efficient\ninference while preserving most of the teacher models' capabilities. While this\ntechnique has shown remarkable success in natural language processing and\ncomputer vision domains, its potential for code understanding tasks remains\nlargely underexplored.\n  In this paper, we systematically investigate the effectiveness and usage of\nKD in code understanding tasks. Our study encompasses two popular types of KD\nmethods, i.e., logit-based and feature-based KD methods, experimenting across\neight student models and two teacher PLMs from different domains on three\ndownstream tasks. The experimental results indicate that KD consistently offers\nnotable performance boosts across student models with different sizes compared\nwith standard fine-tuning. Notably, code-specific PLM demonstrates better\neffectiveness as the teacher model. Among all KD methods, the latest\nfeature-based KD methods exhibit superior performance, enabling student models\nto retain up to 98% teacher performance with merely 5% parameters. Regarding\nstudent architecture, our experiments reveal that similarity with teacher\narchitecture does not necessarily lead to better performance. We further\ndiscuss the efficiency and behaviors in the KD process and inference, summarize\nthe implications of findings, and identify promising future directions.", "AI": {"tldr": "\u672c\u6587\u7cfb\u7edf\u7814\u7a76\u4e86\u77e5\u8bc6\u84b8\u998f\u5728\u4ee3\u7801\u7406\u89e3\u4efb\u52a1\u4e2d\u7684\u6709\u6548\u6027\uff0c\u53d1\u73b0\u7279\u5f81\u84b8\u998f\u65b9\u6cd5\u6548\u679c\u6700\u4f73\uff0c\u5b66\u751f\u6a21\u578b\u4ec5\u97005%\u53c2\u6570\u5373\u53ef\u8fbe\u5230\u6559\u5e08\u6a21\u578b98%\u7684\u6027\u80fd", "motivation": "\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u5728\u4ee3\u7801\u7406\u89e3\u4e2d\u8868\u73b0\u51fa\u8272\u4f46\u8ba1\u7b97\u5bc6\u96c6\uff0c\u77e5\u8bc6\u84b8\u998f\u53ef\u89e3\u51b3\u90e8\u7f72\u65f6\u7684\u8ba1\u7b97\u548c\u5ef6\u8fdf\u95ee\u9898\uff0c\u4f46\u5728\u4ee3\u7801\u7406\u89e3\u9886\u57df\u7684\u6f5c\u529b\u5c1a\u672a\u5145\u5206\u63a2\u7d22", "method": "\u7814\u7a76\u4e24\u79cd\u4e3b\u6d41\u77e5\u8bc6\u84b8\u998f\u65b9\u6cd5\uff08\u57fa\u4e8elogit\u548c\u57fa\u4e8e\u7279\u5f81\uff09\uff0c\u57288\u4e2a\u5b66\u751f\u6a21\u578b\u548c2\u4e2a\u6559\u5e08PLM\u4e0a\u8fdb\u884c\u5b9e\u9a8c\uff0c\u6db5\u76d6\u4e09\u4e2a\u4e0b\u6e38\u4efb\u52a1", "result": "\u77e5\u8bc6\u84b8\u998f\u76f8\u6bd4\u6807\u51c6\u5fae\u8c03\u80fd\u663e\u8457\u63d0\u5347\u6027\u80fd\uff0c\u4ee3\u7801\u4e13\u7528PLM\u4f5c\u4e3a\u6559\u5e08\u6548\u679c\u66f4\u597d\uff0c\u7279\u5f81\u84b8\u998f\u65b9\u6cd5\u8868\u73b0\u6700\u4f18\uff0c\u5b66\u751f\u6a21\u578b\u67b6\u6784\u4e0e\u6559\u5e08\u76f8\u4f3c\u6027\u4e0d\u4e00\u5b9a\u5e26\u6765\u66f4\u597d\u6027\u80fd", "conclusion": "\u77e5\u8bc6\u84b8\u998f\u662f\u4ee3\u7801\u7406\u89e3\u4efb\u52a1\u4e2d\u6709\u6548\u7684\u6a21\u578b\u538b\u7f29\u6280\u672f\uff0c\u7279\u5f81\u84b8\u998f\u65b9\u6cd5\u6700\u5177\u6f5c\u529b\uff0c\u4e3a\u9ad8\u6548\u4ee3\u7801\u7406\u89e3\u6a21\u578b\u90e8\u7f72\u63d0\u4f9b\u4e86\u91cd\u8981\u6307\u5bfc"}}
{"id": "2508.15576", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2508.15576", "abs": "https://arxiv.org/abs/2508.15576", "authors": ["Andreas L\u00f6\u00f6w", "Seung Hoon Park", "Daniele Nantes-Sobrinho", "Sacha-\u00c9lie Ayoun", "Opale Sj\u00f6stedt", "Philippa Gardner"], "title": "Compositional Symbolic Execution for the Next 700 Memory Models (Extended Version)", "comment": null, "summary": "Multiple successful compositional symbolic execution (CSE) tools and\nplatforms exploit separation logic (SL) for compositional verification and/or\nincorrectness separation logic (ISL) for compositional bug-finding, including\nVeriFast, Viper, Gillian, CN, and Infer-Pulse. Previous work on the Gillian\nplatform, the only CSE platform that is parametric on the memory model, meaning\nthat it can be instantiated to different memory models, suggests that the\nability to use custom memory models allows for more flexibility in supporting\nanalysis of a wide range of programming languages, for implementing custom\nautomation, and for improving performance. However, the literature lacks a\nsatisfactory formal foundation for memory-model-parametric CSE platforms.\n  In this paper, inspired by Gillian, we provide a new formal foundation for\nmemory-model-parametric CSE platforms. Our foundation advances the state of the\nart in four ways. First, we mechanise our foundation (in the interactive\ntheorem prover Rocq). Second, we validate our foundation by instantiating it to\na broad range of memory models, including models for C and CHERI. Third,\nwhereas previous memory-model-parametric work has only covered SL analyses, we\ncover both SL and ISL analyses. Fourth, our foundation is based on standard\ndefinitions of SL and ISL (including definitions of function specification\nvalidity, to ensure sound interoperation with other tools and platforms also\nbased on standard definitions).", "AI": {"tldr": "\u672c\u6587\u4e3a\u5185\u5b58\u6a21\u578b\u53c2\u6570\u5316\u7ec4\u5408\u7b26\u53f7\u6267\u884c\u5e73\u53f0\u63d0\u4f9b\u4e86\u65b0\u7684\u5f62\u5f0f\u5316\u57fa\u7840\uff0c\u652f\u6301\u5206\u79bb\u903b\u8f91\u548c\u9519\u8bef\u5206\u79bb\u903b\u8f91\u5206\u6790\uff0c\u5e76\u5728Rocq\u5b9a\u7406\u8bc1\u660e\u5668\u4e2d\u5b9e\u73b0\u548c\u9a8c\u8bc1", "motivation": "\u73b0\u6709\u7ec4\u5408\u7b26\u53f7\u6267\u884c\u5de5\u5177\u867d\u7136\u5229\u7528\u5206\u79bb\u903b\u8f91\u8fdb\u884c\u7ec4\u5408\u9a8c\u8bc1\uff0c\u4f46\u7f3a\u4e4f\u5bf9\u5185\u5b58\u6a21\u578b\u53c2\u6570\u5316\u5e73\u53f0\u7684\u6ee1\u610f\u5f62\u5f0f\u5316\u57fa\u7840\uff0c\u9650\u5236\u4e86\u5e73\u53f0\u7684\u7075\u6d3b\u6027\u548c\u9002\u7528\u8303\u56f4", "method": "\u57fa\u4e8eGillian\u5e73\u53f0\u7684\u542f\u53d1\uff0c\u5728Rocq\u4ea4\u4e92\u5f0f\u5b9a\u7406\u8bc1\u660e\u5668\u4e2d\u673a\u68b0\u5316\u5f62\u5f0f\u5316\u57fa\u7840\uff0c\u652f\u6301\u591a\u79cd\u5185\u5b58\u6a21\u578b\u5b9e\u4f8b\u5316\uff08\u5305\u62ecC\u548cCHERI\uff09\uff0c\u6db5\u76d6SL\u548cISL\u5206\u6790", "result": "\u6210\u529f\u5efa\u7acb\u4e86\u5185\u5b58\u6a21\u578b\u53c2\u6570\u5316CSE\u5e73\u53f0\u7684\u5f62\u5f0f\u5316\u57fa\u7840\uff0c\u80fd\u591f\u5b9e\u4f8b\u5316\u5230\u5e7f\u6cdb\u7684\u5185\u5b58\u6a21\u578b\uff0c\u540c\u65f6\u652f\u6301SL\u548cISL\u5206\u6790", "conclusion": "\u8be5\u5f62\u5f0f\u5316\u57fa\u7840\u4e3a\u7ec4\u5408\u7b26\u53f7\u6267\u884c\u5e73\u53f0\u63d0\u4f9b\u4e86\u66f4\u7075\u6d3b\u3001\u66f4\u6807\u51c6\u5316\u7684\u7406\u8bba\u57fa\u7840\uff0c\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u5206\u6790\u548c\u81ea\u5b9a\u4e49\u81ea\u52a8\u5316"}}
{"id": "2508.15495", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.15495", "abs": "https://arxiv.org/abs/2508.15495", "authors": ["Dongjun Yu", "Xiao Yan", "Zhenrui Li", "Jipeng Xiao", "Haochuan He", "Yongda Yu", "Hao Zhang", "Guoping Rong", "Xiaobo Huang"], "title": "SynthCoder: A Synthetical Strategy to Tune LLMs for Code Completion", "comment": null, "summary": "Code completion is a prominent application of Large Language Models (LLMs) in\nsoftware engineering. Due to the near real-time response requirements of this\ntask, base models with small to medium-sized parameters are typically employed,\nsupplemented by various optimization and post-training techniques. However,\nthese optimization methods often have trade-offs, leading to a seesaw effect\nwhere performance improvements on certain datasets or metrics are accompanied\nby degradations on others -- sometimes even falling below the baseline model's\nperformance. This paper proposes SynthCoder, a model that integrates leading\nindustry practices to achieve state-of-the-art performance on the\nFill-in-the-Middle (FIM) code completion task. In specific, we first construct\na diverse dataset by combining Abstract Syntax Tree (AST) node extraction with\nheuristics that simulate developer behavior. Then we enrich our training corpus\nwith cross-file contextual information using the BM25 algorithm and call\ngraphs, enhancing the model's ability to perform code completion in both\nfile-level and repository-level scenarios. As the last step, we employ a\ntwo-stage training process using the Seed-Coder-8B-Base as the base model.\nFirst, we fine-tune the model using Curriculum Learning technology. Following\nthis, we perform alignment using Direct Preference Optimization (DPO) with\npreference pairs generated through Rejection Sampling. Experimental results\ndemonstrate that our final model excels on mainstream repository-level code\ncompletion benchmarks, including aiXcoder, ExecRepoBench, CrossCodeEval, and\nCoLT. Furthermore, our carefully curated training set effectively mitigates the\nmodel's tendency to just repeat existing code, a common issue existing in\nvarious code completion models.", "AI": {"tldr": "SynthCoder\u662f\u4e00\u4e2a\u96c6\u6210\u884c\u4e1a\u6700\u4f73\u5b9e\u8df5\u7684\u4ee3\u7801\u8865\u5168\u6a21\u578b\uff0c\u901a\u8fc7\u591a\u6837\u5316\u6570\u636e\u96c6\u6784\u5efa\u3001\u8de8\u6587\u4ef6\u4e0a\u4e0b\u6587\u589e\u5f3a\u548c\u4e24\u9636\u6bb5\u8bad\u7ec3\uff0c\u5728\u4e3b\u6d41\u4ee3\u7801\u8865\u5168\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u8fbe\u5230\u6700\u5148\u8fdb\u6027\u80fd\u3002", "motivation": "\u73b0\u6709\u4ee3\u7801\u8865\u5168\u6a21\u578b\u7684\u4f18\u5316\u65b9\u6cd5\u5f80\u5f80\u5b58\u5728\u6743\u8861\u6548\u5e94\uff0c\u5728\u67d0\u4e9b\u6570\u636e\u96c6\u4e0a\u6027\u80fd\u63d0\u5347\u7684\u540c\u65f6\u5728\u5176\u4ed6\u6570\u636e\u96c6\u4e0a\u6027\u80fd\u4e0b\u964d\uff0c\u751a\u81f3\u4f4e\u4e8e\u57fa\u7ebf\u6a21\u578b\u3002\u9700\u8981\u4e00\u79cd\u80fd\u591f\u5168\u9762\u4f18\u5316\u4e14\u907f\u514d\u6027\u80fd\u9000\u5316\u7684\u65b9\u6cd5\u3002", "method": "1) \u7ed3\u5408AST\u8282\u70b9\u63d0\u53d6\u548c\u542f\u53d1\u5f0f\u65b9\u6cd5\u6784\u5efa\u591a\u6837\u5316\u6570\u636e\u96c6\uff1b2) \u4f7f\u7528BM25\u7b97\u6cd5\u548c\u8c03\u7528\u56fe\u589e\u5f3a\u8de8\u6587\u4ef6\u4e0a\u4e0b\u6587\u4fe1\u606f\uff1b3) \u91c7\u7528\u4e24\u9636\u6bb5\u8bad\u7ec3\uff1a\u57fa\u4e8eSeed-Coder-8B-Base\u6a21\u578b\uff0c\u5148\u4f7f\u7528\u8bfe\u7a0b\u5b66\u4e60\u8fdb\u884c\u5fae\u8c03\uff0c\u518d\u7528DPO\u8fdb\u884c\u5bf9\u9f50\u3002", "result": "\u5728aiXcoder\u3001ExecRepoBench\u3001CrossCodeEval\u548cCoLT\u7b49\u4e3b\u6d41\u4ed3\u5e93\u7ea7\u4ee3\u7801\u8865\u5168\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u8868\u73b0\u4f18\u5f02\uff0c\u6709\u6548\u7f13\u89e3\u4e86\u6a21\u578b\u91cd\u590d\u73b0\u6709\u4ee3\u7801\u7684\u5e38\u89c1\u95ee\u9898\u3002", "conclusion": "SynthCoder\u901a\u8fc7\u7efc\u5408\u8fd0\u7528\u591a\u79cd\u5148\u8fdb\u6280\u672f\uff0c\u6210\u529f\u5b9e\u73b0\u4e86\u5728\u4ee3\u7801\u8865\u5168\u4efb\u52a1\u4e0a\u7684\u6700\u4f18\u6027\u80fd\uff0c\u89e3\u51b3\u4e86\u73b0\u6709\u65b9\u6cd5\u4e2d\u7684\u6743\u8861\u95ee\u9898\uff0c\u4e3a\u4ee3\u7801\u8865\u5168\u9886\u57df\u63d0\u4f9b\u4e86\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2508.15750", "categories": ["cs.PL"], "pdf": "https://arxiv.org/pdf/2508.15750", "abs": "https://arxiv.org/abs/2508.15750", "authors": ["Celeste Barnaby", "Qiaochu Chen", "Ramya Ramalingam", "Osbert Bastani", "Isil Dillig"], "title": "Active Learning for Neurosymbolic Program Synthesis", "comment": null, "summary": "The goal of active learning for program synthesis is to synthesize the\ndesired program by asking targeted questions that minimize user interaction.\nWhile prior work has explored active learning in the purely symbolic setting,\nsuch techniques are inadequate for the increasingly popular paradigm of\nneurosymbolic program synthesis, where the synthesized program incorporates\nneural components. When applied to the neurosymbolic setting, such techniques\ncan -- and, in practice, do -- return an unintended program due to\nmispredictions of neural components. This paper proposes a new active learning\ntechnique that can handle the unique challenges posed by neural network\nmispredictions. Our approach is based upon a new evaluation strategy called\nconstrained conformal evaluation (CCE), which accounts for neural\nmispredictions while taking into account user-provided feedback. Our proposed\nmethod iteratively makes CCE more precise until all remaining programs are\nguaranteed to be observationally equivalent. We have implemented this method in\na tool called SmartLabel and experimentally evaluated it on three neurosymbolic\ndomains. Our results demonstrate that SmartLabel identifies the ground truth\nprogram for 98% of the benchmarks, requiring under 5 rounds of user interaction\non average. In contrast, prior techniques for active learning are only able to\nconverge to the ground truth program for at most 65% of the benchmarks.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u4e3b\u52a8\u5b66\u4e60\u65b9\u6cd5SmartLabel\uff0c\u4e13\u95e8\u5904\u7406\u795e\u7ecf\u7b26\u53f7\u7a0b\u5e8f\u5408\u6210\u4e2d\u795e\u7ecf\u7f51\u7edc\u8bef\u9884\u6d4b\u5e26\u6765\u7684\u6311\u6218\uff0c\u901a\u8fc7\u7ea6\u675f\u4fdd\u5f62\u8bc4\u4f30(CCE)\u6280\u672f\u663e\u8457\u63d0\u9ad8\u4e86\u5408\u6210\u51c6\u786e\u7387", "motivation": "\u4f20\u7edf\u4e3b\u52a8\u5b66\u4e60\u65b9\u6cd5\u5728\u7eaf\u7b26\u53f7\u7a0b\u5e8f\u5408\u6210\u4e2d\u6709\u6548\uff0c\u4f46\u5728\u795e\u7ecf\u7b26\u53f7\u7a0b\u5e8f\u5408\u6210\u4e2d\u7531\u4e8e\u795e\u7ecf\u7f51\u7edc\u7ec4\u4ef6\u7684\u8bef\u9884\u6d4b\u4f1a\u5bfc\u81f4\u8fd4\u56de\u9519\u8bef\u7a0b\u5e8f\uff0c\u9700\u8981\u65b0\u7684\u65b9\u6cd5\u6765\u5904\u7406\u8fd9\u79cd\u6311\u6218", "method": "\u63d0\u51fa\u7ea6\u675f\u4fdd\u5f62\u8bc4\u4f30(CCE)\u7b56\u7565\uff0c\u8003\u8651\u795e\u7ecf\u7f51\u7edc\u8bef\u9884\u6d4b\u5e76\u6574\u5408\u7528\u6237\u53cd\u9988\uff0c\u901a\u8fc7\u8fed\u4ee3\u4f18\u5316CCE\u7cbe\u5ea6\u76f4\u5230\u6240\u6709\u5269\u4f59\u7a0b\u5e8f\u4fdd\u8bc1\u89c2\u6d4b\u7b49\u4ef7", "result": "\u5728\u4e09\u4e2a\u795e\u7ecf\u7b26\u53f7\u9886\u57df\u5b9e\u9a8c\u4e2d\uff0cSmartLabel\u572898%\u7684\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u8bc6\u522b\u51fa\u771f\u5b9e\u7a0b\u5e8f\uff0c\u5e73\u5747\u9700\u8981\u4e0d\u52305\u8f6e\u7528\u6237\u4ea4\u4e92\uff0c\u800c\u5148\u524d\u6280\u672f\u6700\u591a\u53ea\u80fd\u8fbe\u523065%\u7684\u51c6\u786e\u7387", "conclusion": "SmartLabel\u65b9\u6cd5\u6709\u6548\u89e3\u51b3\u4e86\u795e\u7ecf\u7b26\u53f7\u7a0b\u5e8f\u5408\u6210\u4e2d\u7684\u4e3b\u52a8\u5b66\u4e60\u6311\u6218\uff0c\u663e\u8457\u63d0\u9ad8\u4e86\u5408\u6210\u51c6\u786e\u6027\u548c\u7528\u6237\u4ea4\u4e92\u6548\u7387"}}
{"id": "2508.15496", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.15496", "abs": "https://arxiv.org/abs/2508.15496", "authors": ["Elena Masserini", "Diego Clerissi", "Daniela Micucci", "Jo\u00e3o R. Campos", "Leonardo Mariani"], "title": "Towards the Assessment of Task-based Chatbots: From the TOFU-R Snapshot to the BRASATO Curated Dataset", "comment": "10 pages, 10 figure, Accepted at IEEE International Symposium on\n  Software Reliability Engineering (ISSRE) 2025", "summary": "Task-based chatbots are increasingly being used to deliver real services, yet\nassessing their reliability, security, and robustness remains underexplored,\nalso due to the lack of large-scale, high-quality datasets. The emerging\nautomated quality assessment techniques targeting chatbots often rely on\nlimited pools of subjects, such as custom-made toy examples, or outdated, no\nlonger available, or scarcely popular agents, complicating the evaluation of\nsuch techniques. In this paper, we present two datasets and the tool support\nnecessary to create and maintain these datasets. The first dataset is RASA\nTASK-BASED CHATBOTS FROM GITHUB (TOFU-R), which is a snapshot of the Rasa\nchatbots available on GitHub, representing the state of the practice in\nopen-source chatbot development with Rasa. The second dataset is BOT RASA\nCOLLECTION (BRASATO), a curated selection of the most relevant chatbots for\ndialogue complexity, functional complexity, and utility, whose goal is to ease\nreproducibility and facilitate research on chatbot reliability.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e24\u4e2a\u6570\u636e\u96c6TOFU-R\u548cBRASATO\uff0c\u7528\u4e8e\u652f\u6301\u4efb\u52a1\u578b\u804a\u5929\u673a\u5668\u4eba\u7684\u53ef\u9760\u6027\u3001\u5b89\u5168\u6027\u548c\u9c81\u68d2\u6027\u8bc4\u4f30\u7814\u7a76\uff0c\u89e3\u51b3\u4e86\u73b0\u6709\u8bc4\u4f30\u6280\u672f\u7f3a\u4e4f\u5927\u89c4\u6a21\u9ad8\u8d28\u91cf\u6570\u636e\u96c6\u7684\u95ee\u9898\u3002", "motivation": "\u4efb\u52a1\u578b\u804a\u5929\u673a\u5668\u4eba\u5e94\u7528\u65e5\u76ca\u5e7f\u6cdb\uff0c\u4f46\u5bf9\u5176\u53ef\u9760\u6027\u3001\u5b89\u5168\u6027\u548c\u9c81\u68d2\u6027\u7684\u8bc4\u4f30\u7814\u7a76\u4e0d\u8db3\uff0c\u4e3b\u8981\u539f\u56e0\u662f\u7f3a\u4e4f\u5927\u89c4\u6a21\u9ad8\u8d28\u91cf\u6570\u636e\u96c6\u3002\u73b0\u6709\u7684\u81ea\u52a8\u5316\u8d28\u91cf\u8bc4\u4f30\u6280\u672f\u5f80\u5f80\u57fa\u4e8e\u6709\u9650\u6837\u672c\u6216\u8fc7\u65f6/\u4e0d\u53ef\u7528\u7684\u4ee3\u7406\uff0c\u96be\u4ee5\u6709\u6548\u8bc4\u4f30\u8fd9\u4e9b\u6280\u672f\u3002", "method": "\u521b\u5efa\u4e86\u4e24\u4e2a\u6570\u636e\u96c6\uff1aTOFU-R\uff08GitHub\u4e0aRasa\u804a\u5929\u673a\u5668\u4eba\u7684\u5feb\u7167\uff0c\u4ee3\u8868\u5f00\u6e90Rasa\u5f00\u53d1\u7684\u5b9e\u8df5\u73b0\u72b6\uff09\u548cBRASATO\uff08\u57fa\u4e8e\u5bf9\u8bdd\u590d\u6742\u6027\u3001\u529f\u80fd\u590d\u6742\u6027\u548c\u5b9e\u7528\u6027\u7684\u7cbe\u9009\u804a\u5929\u673a\u5668\u4eba\u96c6\u5408\uff09\u3002\u540c\u65f6\u63d0\u4f9b\u4e86\u521b\u5efa\u548c\u7ef4\u62a4\u8fd9\u4e9b\u6570\u636e\u96c6\u7684\u5de5\u5177\u652f\u6301\u3002", "result": "\u63d0\u4f9b\u4e86\u4e24\u4e2a\u5927\u89c4\u6a21\u3001\u9ad8\u8d28\u91cf\u7684\u6570\u636e\u96c6\uff1aTOFU-R\u5305\u542bGitHub\u4e0a\u53ef\u7528\u7684Rasa\u804a\u5929\u673a\u5668\u4eba\u5feb\u7167\uff1bBRASATO\u662f\u7ecf\u8fc7\u7cbe\u5fc3\u7b5b\u9009\u7684\u6700\u76f8\u5173\u804a\u5929\u673a\u5668\u4eba\u96c6\u5408\u3002\u8fd9\u4e9b\u6570\u636e\u96c6\u6709\u52a9\u4e8e\u4fc3\u8fdb\u804a\u5929\u673a\u5668\u4eba\u53ef\u9760\u6027\u7814\u7a76\u7684\u53ef\u91cd\u590d\u6027\u3002", "conclusion": "\u63d0\u51fa\u7684TOFU-R\u548cBRASATO\u6570\u636e\u96c6\u53ca\u5176\u5de5\u5177\u652f\u6301\uff0c\u4e3a\u4efb\u52a1\u578b\u804a\u5929\u673a\u5668\u4eba\u7684\u53ef\u9760\u6027\u3001\u5b89\u5168\u6027\u548c\u9c81\u68d2\u6027\u8bc4\u4f30\u7814\u7a76\u63d0\u4f9b\u4e86\u91cd\u8981\u8d44\u6e90\uff0c\u89e3\u51b3\u4e86\u8be5\u9886\u57df\u7f3a\u4e4f\u5927\u89c4\u6a21\u9ad8\u8d28\u91cf\u6570\u636e\u96c6\u7684\u95ee\u9898\uff0c\u6709\u52a9\u4e8e\u63a8\u52a8\u76f8\u5173\u7814\u7a76\u7684\u53d1\u5c55\u3002"}}
{"id": "2508.15503", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.15503", "abs": "https://arxiv.org/abs/2508.15503", "authors": ["Sebastian Baltes", "Florian Angermeir", "Chetan Arora", "Marvin Mu\u00f1oz Bar\u00f3n", "Chunyang Chen", "Lukas B\u00f6hme", "Fabio Calefato", "Neil Ernst", "Davide Falessi", "Brian Fitzgerald", "Davide Fucci", "Marcos Kalinowski", "Stefano Lambiase", "Daniel Russo", "Mircea Lungu", "Lutz Prechelt", "Paul Ralph", "Christoph Treude", "Stefan Wagner"], "title": "Evaluation Guidelines for Empirical Studies in Software Engineering involving LLMs", "comment": "Draft of evaluation guidelines for empirical studies in software\n  engineering involving LLMs (see also llm-guidelines.org)", "summary": "Large language models (LLMs) are increasingly being integrated into software\nengineering (SE) research and practice, yet their non-determinism, opaque\ntraining data, and evolving architectures complicate the reproduction and\nreplication of empirical studies. We present a community effort to scope this\nspace, introducing a taxonomy of LLM-based study types together with eight\nguidelines for designing and reporting empirical studies involving LLMs. The\nguidelines present essential (must) criteria as well as desired (should)\ncriteria and target transparency throughout the research process. Our\nrecommendations, contextualized by our study types, are: (1) to declare LLM\nusage and role; (2) to report model versions, configurations, and fine-tuning;\n(3) to document tool architectures; (4) to disclose prompts and interaction\nlogs; (5) to use human validation; (6) to employ an open LLM as a baseline; (7)\nto report suitable baselines, benchmarks, and metrics; and (8) to openly\narticulate limitations and mitigations. Our goal is to enable reproducibility\nand replicability despite LLM-specific barriers to open science. We maintain\nthe study types and guidelines online as a living resource for the community to\nuse and shape (llm-guidelines.org).", "AI": {"tldr": "\u8be5\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u4e2a\u9488\u5bf9LLM\u5728\u8f6f\u4ef6\u5de5\u7a0b\u7814\u7a76\u4e2d\u4f7f\u7528\u7684\u5206\u7c7b\u6cd5\u548c8\u6761\u6307\u5357\uff0c\u65e8\u5728\u89e3\u51b3LLM\u7684\u975e\u786e\u5b9a\u6027\u3001\u8bad\u7ec3\u6570\u636e\u4e0d\u900f\u660e\u7b49\u95ee\u9898\uff0c\u4fc3\u8fdb\u7814\u7a76\u7684\u53ef\u590d\u73b0\u6027\u3002", "motivation": "LLM\u8d8a\u6765\u8d8a\u591a\u5730\u5e94\u7528\u4e8e\u8f6f\u4ef6\u5de5\u7a0b\u7814\u7a76\u548c\u5b9e\u8df5\uff0c\u4f46\u5176\u975e\u786e\u5b9a\u6027\u3001\u4e0d\u900f\u660e\u7684\u8bad\u7ec3\u6570\u636e\u548c\u4e0d\u65ad\u6f14\u53d8\u7684\u67b6\u6784\u7ed9\u5b9e\u8bc1\u7814\u7a76\u7684\u590d\u73b0\u548c\u590d\u5236\u5e26\u6765\u4e86\u6311\u6218\u3002", "method": "\u63d0\u51fa\u4e86LLM\u7814\u7a76\u7684\u5206\u7c7b\u6cd5\uff0c\u5e76\u5236\u5b9a\u4e868\u6761\u8bbe\u8ba1\u6307\u5357\uff0c\u5305\u62ec\u58f0\u660eLLM\u4f7f\u7528\u3001\u62a5\u544a\u6a21\u578b\u914d\u7f6e\u3001\u8bb0\u5f55\u5de5\u5177\u67b6\u6784\u3001\u62ab\u9732\u63d0\u793a\u8bcd\u548c\u4ea4\u4e92\u65e5\u5fd7\u7b49\u3002", "result": "\u5efa\u7acb\u4e86\u4e00\u5957\u5b8c\u6574\u7684LLM\u7814\u7a76\u6307\u5357\u4f53\u7cfb\uff0c\u5305\u62ec\u5fc5\u9700\u548c\u63a8\u8350\u7684\u6807\u51c6\uff0c\u4e3a\u793e\u533a\u63d0\u4f9b\u4e86\u53ef\u7528\u7684\u5728\u7ebf\u8d44\u6e90(llm-guidelines.org)\u3002", "conclusion": "\u8fd9\u4e9b\u6307\u5357\u80fd\u591f\u5e2e\u52a9\u514b\u670dLLM\u7279\u6709\u7684\u5f00\u653e\u79d1\u5b66\u969c\u788d\uff0c\u5b9e\u73b0\u7814\u7a76\u7684\u53ef\u590d\u73b0\u6027\u548c\u53ef\u590d\u5236\u6027\uff0c\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u9886\u57df\u7684LLM\u7814\u7a76\u63d0\u4f9b\u4e86\u6807\u51c6\u5316\u6846\u67b6\u3002"}}
{"id": "2508.15512", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.15512", "abs": "https://arxiv.org/abs/2508.15512", "authors": ["Markus Borg", "Martin Larsson", "Philip Breid", "Nadim Hagatulah"], "title": "QUPER-MAn: Benchmark-Guided Target Setting for Maintainability Requirements", "comment": "Accepted at the 1st International Workshop on Responsible Software\n  Engineering", "summary": "Maintainable source code is essential for sustainable development in any\nsoftware organization. Unfortunately, many studies show that maintainability\noften receives less attention than its importance warrants. We argue that\nrequirements engineering can address this gap the problem by fostering\ndiscussions and setting appropriate targets in a responsible manner. In this\npreliminary work, we conducted an exploratory study of industry practices\nrelated to requirements engineering for maintainability. Our findings confirm\nprevious studies: maintainability remains a second-class quality concern.\nExplicit requirements often make sweeping references to coding conventions.\nTools providing maintainability proxies are common but typically only used in\nimplicit requirements related to engineering practices. To address this, we\npropose QUPER-MAn, a maintainability adaption of the QUPER model, which was\noriginally developed to help organizations set targets for performance\nrequirements. Developed using a design science approach, QUPER-MAn, integrates\nmaintainability benchmarks and supports target setting. We posit that it can\nshift maintainability from an overlooked development consequence to an actively\nmanaged goal driven by informed and responsible engineering decisions.", "AI": {"tldr": "QUPER-MAn\u6a21\u578b\u5c06\u53ef\u7ef4\u62a4\u6027\u4ece\u88ab\u5ffd\u89c6\u7684\u5f00\u53d1\u540e\u679c\u8f6c\u53d8\u4e3a\u4e3b\u52a8\u7ba1\u7406\u7684\u76ee\u6807\uff0c\u901a\u8fc7\u57fa\u51c6\u6d4b\u8bd5\u548c\u76ee\u6807\u8bbe\u5b9a\u652f\u6301\u9700\u6c42\u5de5\u7a0b", "motivation": "\u53ef\u7ef4\u62a4\u6e90\u4ee3\u7801\u5bf9\u8f6f\u4ef6\u5f00\u53d1\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u73b0\u6709\u7814\u7a76\u8868\u660e\u53ef\u7ef4\u62a4\u6027\u5f80\u5f80\u5f97\u4e0d\u5230\u8db3\u591f\u91cd\u89c6\uff0c\u9700\u6c42\u5de5\u7a0b\u53ef\u4ee5\u586b\u8865\u8fd9\u4e00\u7a7a\u767d", "method": "\u91c7\u7528\u8bbe\u8ba1\u79d1\u5b66\u7814\u7a76\u65b9\u6cd5\uff0c\u5f00\u53d1\u4e86QUPER-MAn\u6a21\u578b\uff08QUPER\u6a21\u578b\u7684\u53ef\u7ef4\u62a4\u6027\u9002\u914d\u7248\u672c\uff09\uff0c\u96c6\u6210\u53ef\u7ef4\u62a4\u6027\u57fa\u51c6\u6d4b\u8bd5\u5e76\u652f\u6301\u76ee\u6807\u8bbe\u5b9a", "result": "\u7814\u7a76\u53d1\u73b0\u53ef\u7ef4\u62a4\u6027\u4ecd\u7136\u662f\u6b21\u8981\u8d28\u91cf\u5173\u6ce8\u70b9\uff0c\u660e\u786e\u9700\u6c42\u901a\u5e38\u53ea\u6cdb\u6cdb\u5f15\u7528\u7f16\u7801\u89c4\u8303\uff0c\u5de5\u5177\u63d0\u4f9b\u7684\u53ef\u7ef4\u62a4\u6027\u4ee3\u7406\u6307\u6807\u901a\u5e38\u53ea\u7528\u4e8e\u9690\u5f0f\u9700\u6c42", "conclusion": "QUPER-MAn\u6a21\u578b\u80fd\u591f\u901a\u8fc7\u77e5\u60c5\u548c\u8d1f\u8d23\u4efb\u7684\u5de5\u7a0b\u51b3\u7b56\uff0c\u5c06\u53ef\u7ef4\u62a4\u6027\u8f6c\u53d8\u4e3a\u4e3b\u52a8\u7ba1\u7406\u7684\u76ee\u6807"}}
{"id": "2508.15536", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.15536", "abs": "https://arxiv.org/abs/2508.15536", "authors": ["Yi Zhang", "He Jiang", "Xiaochen Li", "Shikai Guo", "Peiyu Zou", "Zun Wang"], "title": "A Novel Mutation Based Method for Detecting FPGA Logic Synthesis Tool Bugs", "comment": null, "summary": "FPGA (Field-Programmable Gate Array) logic synthesis tools are key components\nin the EDA (Electronic Design Automation) toolchain. They convert hardware\ndesigns written in description languages such as Verilog into gate-level\nrepresentations for FPGAs. However, defects in these tools may lead to\nunexpected behaviors and pose security risks. Therefore, it is crucial to\nharden these tools through testing. Although several methods have been proposed\nto automatically test FPGA logic synthesis tools, the challenge remains of\ninsufficient semantic and logical complexity in test programs. In this paper,\nwe propose VERMEI, a new method for testing FPGA logic synthesis tools. VERMEI\nconsists of three modules: preprocessing, equivalent mutation, and bug\nidentification. The preprocessing module identifies zombie logic (inactive code\nwith no impact on the circuit output) in seed programs through simulation and\ncoverage analysis. The equivalent mutation module generates equivalent variants\nof seed programs by pruning or inserting logic fragments in zombie areas. It\nuses Bayesian sampling to extract logic fragments from historical Verilog\ndesigns, making the generated variants have complex control flows and\nstructures. The bug identification module, based on differential testing,\ncompares the synthesized outputs of seed and variant programs to identify bugs.\nExperiments on Yosys, Vivado, and Quartus demonstrate that VERMEI outperforms\nthe state-of-the-art methods. Within five months, VERMEI reported 15 bugs to\nvendors, 9 of which were confirmed as new.", "AI": {"tldr": "VERMEI\u662f\u4e00\u79cd\u6d4b\u8bd5FPGA\u903b\u8f91\u7efc\u5408\u5de5\u5177\u7684\u65b0\u65b9\u6cd5\uff0c\u901a\u8fc7\u50f5\u5c38\u903b\u8f91\u8bc6\u522b\u3001\u7b49\u6548\u53d8\u5f02\u548c\u5dee\u5206\u6d4b\u8bd5\u6765\u53d1\u73b0\u5de5\u5177\u7f3a\u9677\uff0c\u57285\u4e2a\u6708\u5185\u53d1\u73b0\u4e8615\u4e2abug", "motivation": "FPGA\u903b\u8f91\u7efc\u5408\u5de5\u5177\u4e2d\u7684\u7f3a\u9677\u53ef\u80fd\u5bfc\u81f4\u610f\u5916\u884c\u4e3a\u548c\u5b89\u5168\u9690\u60a3\uff0c\u73b0\u6709\u6d4b\u8bd5\u65b9\u6cd5\u5b58\u5728\u6d4b\u8bd5\u7a0b\u5e8f\u8bed\u4e49\u548c\u903b\u8f91\u590d\u6742\u6027\u4e0d\u8db3\u7684\u95ee\u9898", "method": "\u5305\u542b\u4e09\u4e2a\u6a21\u5757\uff1a\u9884\u5904\u7406\u6a21\u5757\u901a\u8fc7\u4eff\u771f\u548c\u8986\u76d6\u7387\u5206\u6790\u8bc6\u522b\u50f5\u5c38\u903b\u8f91\uff1b\u7b49\u6548\u53d8\u5f02\u6a21\u5757\u901a\u8fc7\u8d1d\u53f6\u65af\u91c7\u6837\u4ece\u5386\u53f2Verilog\u8bbe\u8ba1\u4e2d\u63d0\u53d6\u903b\u8f91\u7247\u6bb5\uff0c\u5728\u50f5\u5c38\u533a\u57df\u8fdb\u884c\u4fee\u526a\u6216\u63d2\u5165\u751f\u6210\u7b49\u6548\u53d8\u4f53\uff1bbug\u8bc6\u522b\u6a21\u5757\u57fa\u4e8e\u5dee\u5206\u6d4b\u8bd5\u6bd4\u8f83\u79cd\u5b50\u7a0b\u5e8f\u548c\u53d8\u4f53\u7a0b\u5e8f\u7684\u7efc\u5408\u8f93\u51fa", "result": "\u5728Yosys\u3001Vivado\u548cQuartus\u4e0a\u7684\u5b9e\u9a8c\u8868\u660eVERMEI\u4f18\u4e8e\u6700\u5148\u8fdb\u65b9\u6cd5\uff0c5\u4e2a\u6708\u5185\u5411\u4f9b\u5e94\u5546\u62a5\u544a\u4e8615\u4e2abug\uff0c\u5176\u4e2d9\u4e2a\u88ab\u786e\u8ba4\u4e3a\u65b0bug", "conclusion": "VERMEI\u901a\u8fc7\u751f\u6210\u5177\u6709\u590d\u6742\u63a7\u5236\u6d41\u548c\u7ed3\u6784\u7684\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u6709\u6548\u63d0\u9ad8\u4e86FPGA\u903b\u8f91\u7efc\u5408\u5de5\u5177\u7684\u6d4b\u8bd5\u6548\u679c"}}
{"id": "2508.15570", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.15570", "abs": "https://arxiv.org/abs/2508.15570", "authors": ["Marion Wiese", "Kamila Serwa", "Anastasia Besier", "Ariane S. Marion-Jetten", "Eva Bittner"], "title": "Establishing Technical Debt Management -- A Five-Step Workshop Approach and an Action Research Study", "comment": "Accepted for publication by the Journal of Systems and Software --\n  Special Issue on Managing Technical Debt in Software-Intensive Products and\n  Services", "summary": "Context. Technical debt (TD) items are constructs in a software system\nproviding short-term benefits but hindering future changes. TD management (TDM)\nis frequently researched but rarely adopted in practice. Goal. This study aimed\nto establish a TDM process in an IT company based on a predefined workshop\nconcept. We analyzed which research approaches practitioners adopted for each\nTD activity and the TDM's long-term effect on TD awareness. Method. We used\naction research (five action cycles in 16 months) with an IT team that creates\nIT solutions for signal processing. To examine TD awareness, we (1) analyzed\nquestionnaires completed during each workshop, (2) observed team meetings, (3)\nadopted a method from psychology for measuring awareness in decision-making\nsituations called TD-SAGAT, and (4) evaluated the backlog data. Results.\nPractitioners preferred TD repayment and prioritization based on the system's\nevolution and cost calculations, i.e., repayment of so-called low-hanging\nfruits. Reminders in the backlog items, such as checkboxes or text templates,\nled to a sustainable rise in TD awareness. Conclusions. We showed that a\nworkshop-based approach is feasible and leads to sustainable process changes.\nNew ideas for TDM applicable to other IT teams emerged, e.g., using a\nre-submission date, using a Talked about TD checkbox, and using visualizations\nfor TD prioritization.", "AI": {"tldr": "\u901a\u8fc7\u52a8\u4f5c\u7814\u7a76\u5728IT\u516c\u53f8\u5efa\u7acb\u6280\u672f\u503a\u52a1\u7ba1\u7406\u8fc7\u7a0b\uff0c\u5e94\u7528\u5de5\u4f5c\u574a\u65b9\u5f0f\u63a8\u8fdb\u6280\u672f\u503a\u52a1\u8bc4\u4f30\u3001\u4f18\u5148\u7ea7\u6392\u5e8f\u548c\u5f52\u8fd8\uff0c\u5e76\u901a\u8fc7\u591a\u79cd\u65b9\u6cd5\u63d0\u5347\u56e2\u961f\u5bf9\u6280\u672f\u503a\u52a1\u7684\u8ba4\u77e5\u5ea6\u3002", "motivation": "\u6280\u672f\u503a\u52a1\u7ba1\u7406\u5728\u7814\u7a76\u754c\u5e7f\u6cdb\u5173\u6ce8\u4f46\u5b9e\u8df5\u4e2d\u91c7\u7528\u7387\u4f4e\uff0c\u9700\u8981\u5f00\u53d1\u53ef\u6267\u884c\u7684TDM\u8fc7\u7a0b\u5e76\u9a8c\u8bc1\u5176\u5728\u5b9e\u9645\u73af\u5883\u4e2d\u7684\u6548\u679c\u548c\u53ef\u6301\u7eed\u6027\u3002", "method": "\u91c7\u7528\u52a8\u4f5c\u7814\u7a76\u65b9\u6cd5\uff0816\u4e2a\u6708\u5185\u5b8c\u62105\u4e2a\u884c\u52a8\u5468\u671f\uff09\uff0c\u901a\u8fc7\u5de5\u4f5c\u574a\u5f62\u5f0f\u5efa\u7acbTDM\u8fc7\u7a0b\u3002\u4f7f\u7528\u95ee\u5377\u8c03\u67e5\u3001\u56e2\u961f\u4f1a\u8bae\u89c2\u5bdf\u3001TD-SAGAT\u5fc3\u7406\u6d4b\u91cf\u65b9\u6cd5\u548c\u80cc\u8c03\u6570\u636e\u5206\u6790\u6765\u8bc4\u4f30\u6280\u672f\u503a\u52a1\u8ba4\u77e5\u5ea6\u3002", "result": "\u5b9e\u8df5\u8005\u504f\u597d\u57fa\u4e8e\u7cfb\u7edf\u8fdb\u5316\u548c\u6210\u672c\u8ba1\u7b97\u7684\u6280\u672f\u503a\u52a1\u4f18\u5148\u7ea7\u6392\u5e8f\u548c\u5f52\u8fd8\uff0c\u91cd\u70b9\u5904\u7406\"\u4f4e\u5782\u679c\"\u3002\u5728\u80cc\u8c03\u9879\u4e2d\u6dfb\u52a0\u63d0\u9192\u529f\u80fd\uff08\u5982\u590d\u9009\u6846\u3001\u6587\u672c\u6a21\u677f\uff09\u6709\u6548\u63d0\u5347\u4e86\u6280\u672f\u503a\u52a1\u8ba4\u77e5\u5ea6\u3002", "conclusion": "\u5de5\u4f5c\u574a\u57fa\u4e8e\u65b9\u6cd5\u53ef\u884c\u4e14\u80fd\u591f\u5b9e\u73b0\u53ef\u6301\u7eed\u7684\u8fc7\u7a0b\u6539\u53d8\uff0c\u63a8\u51fa\u4e86\u9002\u7528\u4e8e\u5176\u4ed6IT\u56e2\u961f\u7684\u65b0TDM\u601d\u8def\uff0c\u5982\u4f7f\u7528\u91cd\u65b0\u63d0\u4ea4\u65e5\u671f\u3001\"\u8ba8\u8bba\u8fc7TD\"\u590d\u9009\u6846\u548c\u53ef\u89c6\u5316\u4f18\u5148\u7ea7\u6392\u5e8f\u65b9\u6cd5\u3002"}}
{"id": "2508.15584", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2508.15584", "abs": "https://arxiv.org/abs/2508.15584", "authors": ["Maria Teresa Rossi", "Leonardo Mariani", "Oliviero Riganelli"], "title": "From PREVENTion to REACTion: Enhancing Failure Resolution in Naval Systems", "comment": null, "summary": "Complex and large industrial systems often misbehave, for instance, due to\nwear, misuse, or faults. To cope with these incidents, it is important to\ntimely detect their occurrences, localize the sources of the problems, and\nimplement the appropriate countermeasures. This paper reports our experience\nwith a state-of-the-art failure prediction method, PREVENT, and its extension\nwith a troubleshooting module, REACT, applied to naval systems developed by\nFincantieri. Our results show how to integrate anomaly detection with\ntroubleshooting procedures. We conclude by discussing a lesson learned, which\nmay help deploy and extend these analyses to other industrial products.", "AI": {"tldr": "PREVENT\u548cREACT\u65b9\u6cd5\u5728\u6d77\u519b\u7cfb\u7edf\u4e2d\u7684\u6545\u969c\u9884\u6d4b\u4e0e\u8bca\u65ad\u5e94\u7528", "motivation": "\u5927\u578b\u5de5\u4e1a\u7cfb\u7edf\u7ecf\u5e38\u56e0\u78e8\u635f\u3001\u8bef\u7528\u6216\u6545\u969c\u800c\u51fa\u73b0\u5f02\u5e38\u884c\u4e3a\uff0c\u9700\u8981\u53ca\u65f6\u68c0\u6d4b\u3001\u5b9a\u4f4d\u95ee\u9898\u5e76\u5b9e\u65bd\u5bf9\u7b56", "method": "\u91c7\u7528\u6700\u5148\u8fdb\u7684\u6545\u969c\u9884\u6d4b\u65b9\u6cd5PREVENT\u53ca\u5176\u6269\u5c55\u7684\u6545\u969c\u6392\u9664\u6a21\u5757REACT\uff0c\u5e94\u7528\u4e8eFincantieri\u5f00\u53d1\u7684\u6d77\u519b\u7cfb\u7edf", "result": "\u5c55\u793a\u4e86\u5982\u4f55\u5c06\u5f02\u5e38\u68c0\u6d4b\u4e0e\u6545\u969c\u6392\u9664\u7a0b\u5e8f\u96c6\u6210\uff0c\u63d0\u4f9b\u4e86\u5b9e\u9645\u5e94\u7528\u7ed3\u679c", "conclusion": "\u603b\u7ed3\u4e86\u7ecf\u9a8c\u6559\u8bad\uff0c\u6709\u52a9\u4e8e\u5c06\u8fd9\u4e9b\u5206\u6790\u65b9\u6cd5\u90e8\u7f72\u548c\u6269\u5c55\u5230\u5176\u4ed6\u5de5\u4e1a\u4ea7\u54c1"}}
